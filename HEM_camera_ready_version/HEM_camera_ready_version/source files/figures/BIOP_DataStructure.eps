%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: BIOP_DataStructure.pdf
%%Creator: Adobe Acrobat 20.9.0
%%For: Administrator
%%CreationDate: 2021/9/26, 15:22:52
%%BoundingBox: 0 0 467 256
%%HiResBoundingBox: 0 0 466.8275 255.3452
%%CropBox: 0 0 466.8275 255.3452
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1062 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164374, 2020/03/05-20:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreatorTool="Acrobat PDFMaker 20 Visio 版"
   xmp:ModifyDate="2021-09-26T15:22:41+08:00"
   xmp:CreateDate="2021-09-26T15:21:49+08:00"
   xmp:MetadataDate="2021-09-26T15:22:41+08:00"
   pdf:Producer="Acrobat Distiller 20.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:3a567839-48a3-4c98-b90a-d9a82650efcc"
   xmpMM:InstanceID="uuid:0a5acc48-f51f-4d29-9c7f-357b478102d3">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>石 望华</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -255.345 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 255.345 li
466.827 255.345 li
466.827 0 li
cp
clp
3.10292 173.16 mo
60.396 173.16 li
60.396 138.823 li
3.10292 138.823 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
.239787 lw
1 lc
1 lj
10 ml
[] 0 dsh
false sadj
3.10292 173.16 mo
60.396 173.16 li
60.396 138.823 li
3.10292 138.823 li
cp
.75021 .679683 .670222 .90164 cmyk
@
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DKVNSN+SimSun-GBK-EUC-H)
%%Title: (DKVNSN+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DKVNSN+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
37 <001C60D8A8C9B7A73DB9BF769AE369657D1B0F7247A75E7E0F995EE1EF75
369258FF953DAE669D70FBC5C1F916F62E5AE51933C872290F79AC44408D238E
612291FF5287058196492FB08F0A72ED903936BAC4FE3F8C27DB7229FFB87373
A794BDCA1B0DED0B99423524E30C2AFF81498E2649EB4D80D6B059BD81D5F3FF
9BE6155E29A6AFD3D199971B07FA3BBE6A543AA6CBEBA95EF9BCAF1EEF286C99
F05EB8EB08DE387756649A60B36FA67E9C666BF8F159A5C00D51A262E23E2F66
29EFFFD582E77B8E9E8BA18C465E70654123A0083C68B1C178E7C07C90> |
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
50 <001C60D8A8C9B7A73DB90D9D7B6F2EAACBB1E0BB43A8C97B9C7EB9EACEFA
55564EDFEF7E6244E0144A5E44A3116FE10720D1E81294E1699A6AEE7013E62B
306D092BFDBCA4F23B2DFA9DFAE29C576F6D14009D1262438A5A6441248CDB8B
8E14329C730A160536AC5D52DA3F89968225C6081F9E313312DB5EF74B9F1037
4748806E5E933E42F6> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01AE29E2F8D6006DEBE28C3E3167B8B0B15C9979E8BC6F967EAE4108
594879B55E7B2B0C1613F0727FC5D41CF3A18A5C9AF47127977CC09BADEA25A0
5207E3A29DB2A627E71F0DE62BA33B64393D52499CD3D050DB6353DA7F8BAAC4
50A2F546392BEFE2730B572B57EA1E5C6F260C4358B586673BB20F89AC3C5FB2
7145> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DKVNSN+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/DKVNSN+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.0318 0 0 ]msf
13.7814 161.394 mo
(\000%\000,\0002\0003)
[8.99426 8.99426 8.99426 0 ]xsh
117.114 39.5828 mo
117.114 31.7178 110.783 25.3875 102.918 25.3875 cv
95.1172 25.3875 88.7228 31.7178 88.7228 39.5828 cv
88.7228 47.3839 95.1172 53.7782 102.918 53.7782 cv
110.783 53.7782 117.114 47.3839 117.114 39.5828 cv
0 0 0 0 cmyk
ef
117.114 39.5828 mo
117.114 31.7178 110.783 25.3875 102.918 25.3875 cv
95.1172 25.3875 88.7228 31.7178 88.7228 39.5828 cv
88.7228 47.3839 95.1172 53.7782 102.918 53.7782 cv
110.783 53.7782 117.114 47.3839 117.114 39.5828 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DHAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /DHAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f329dc23ae8000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c7966dd837c7400011a780000086868656164f84d79b1000014140000
0036686865610dad1e6b0000144c00000024686d74787df7b74700001470
00006ca86c6f636100d0cefc0000811800006cac6d6178702e1e2a6f0000
edc4000000206e616d650754a1520000ede4000007a77072657013672219
0000f58c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e4002effc000247b00000009000000004d53202000400000
feff0600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d000001000000063ae1c39d03175f0f3cf500190800
00000000bbeb7ccc00000000d749774ffbfafd8009ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000001b2a00>
<040e0000000000000000000001cf000004a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
061bffcc061bffcc045a00ac044400610444006104440061044400610444
00610444006104ec00ac04ec009704ff001b04ff001b03e800ac03e80045
03e800ac03e8004603e8004603e8006303e8005f03e8008103e800ac03e8
00ac03ad00ac050c005b050c005b050c005b050c005b050c005b04fc00ac
04fc00ac05400020020400ac0204ff4a020400280204ff390204ff310204
ff500204ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9
042800ac042800ac035d00ac035d0081036200ac035d00ac0370001c045e
00ac06d700ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054f0063054f006306ef0063042200ac042200ac05620063
045800ac045800ac04580053045800ac03ad004703ad004703ad001503ad
001803ad004703ad004703e6000f03e6000f03e6000f03e6000f052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa048a0022071e003d071e003d071e003d071e003d
071e003d0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf
003b03bf003b03bf001a03bf003b03f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f40010055c
ffe2055cffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d
03cb006d046500a10465006a0477003204770032038000a1038000300380
00a103800020038000200380002c0380002903800042038000a1038000a1
035000a10482006c0482006c0482006c0482006c0482006c047800a10478
008c049d004001ec00a101ecff5801ec001901ecff4801ecff2701ecff55
01ecff5201ecff7101ec001101ec0018041b00a1023e0000023eff8c03c9
00a103c900a102e000a102e0008702e600a102e000a102f0003203d500a1
060600a1049100a1049100a10491009904910078049100a1046600a104aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006604ba006604ba00660606006603c500a103c500a104b1006603ed
00a103ed00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6
034f0049034f00490359001c0359fffe0359001c0359001c048d009f048d
009c048d009f048d0097048d0075048d009f048d009f048d009f048d009f
048d009f048d009f03fd0021063e0037063e0037063e0037063e0037063e
003703cc0036038300100383001003830010038300100383001003690044
03690044036900080369004403d5005c03d5005c03d5005c03d5005c03d5
001e03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c
062f005c043400990362005a0362005a0362004e036200570362005a0362
005a076f005a06dd005a0601005a0601005a04340060048c0060046a0060
0434006103fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d02710025069a002508d5002504ab0025
069b002508d50025043c0025043c0025043c0025043c0025044f0025044f
0025044f0025044f0025043c0025043c0025067600250676002506760025
06760025068900250689002506890025068900250676002506760025043c
0025043c0025067600250609002508430025043c0025043c002504830025
043c00250676002504ed002504ed0025051300250728002503c4003503c4
003503c4003503c4003503c4003504340060043400600434006004340060
04340060043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6
ff5a01d6ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085
041e008801eaffd501eaffd501eaff6303a3009903a3009903a3009901d6
009901d6002a021c009901d6004b01fb001c02fd00990664009904340099
04340099043400990434004e0434009904a2ff9d043400990438005a0438
005a0438005a0438005a0438004f0438005a0438005a0438005a0438005a
043c005a043c005a06cc005a04340099043400990434006002ca009902ca
009902cafff902ca006e03210051032100510321fffe0321fffd03210051
0321005105ae005105ae00510438009901f1009902ae002102c4002102ae
002102bc002604e600210475002104750021047500210475002104750021
047500210475002104750021047500210475002105130021074b002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002106d90021043400940434008e04340094043400860434004d0434
00890434008604340094043400940434009404340094039d002205b80035
05b8003505b8003505b8003505b8003503770029039f0022039f0022039f
0022039f0022039f00220329005903290059032900070329005903380072
036100640378005d02ac004402e5006c024e004402e5004802b8004701c1
00240297002a02e9006c01630061016dffd80297006c015e006c0456006c
02e6006c02e6004502e5006c02e5004801f6006c0230004201e3002302e9
006c0285001f03ef002c027e00280286001f023700420254000002750000
029400000000fd080000fce80256000002750000029400000000fd080000
fce803290000035f0000039400000000fc9f0000fc6703290000035f0000
039400000000fc9d0000fc6901ff0000039a000003a2000003a800000000
fc650000fc600324000002f5000003460000036700000000fca00000fc7e
0327000003490000036a00000000fc9d0000fc7d030c0000030f00000311
00000000fcac0000fca9029100000298000002a000000000fce90000fce2
02cf000002c2000002b5000003c1000003e10000040000000000fc520000
fc3101ce000001d6000001ce000001ce00000000fd4d0000fd4d02750084
0000fd7a027f00840000fd7601f700840231000004a1002304a1ff89045a
00ac035300ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e
054c0063020400ac0204feb20204ff52042800ac0495002406d700ac052a
00ac03ef0053054c0063054cff1604fc00ac042200ac03ab004603e6000f
03e6001e03e6fe6e03e6001e0613000004270030060000900550005e0550
fef903f4001003f40010040400a102fb00a103c90023038000a1038000a1
03690044047800a1047800a104b4006601ec00a101ec000001ecff5403c9
00a103e10011060600a1049100a10387005e04aa006604aa0066047800a1
03c500a1035b004b0359001c0383001003830010038300100552000003cc
00360558008704b1006604b10066048a0061048a00610440009904320064
039200180430000003a5005903a5005902c8004e044c0099044c00990441
006004780006023200940232ffec0232ff7a0232ff0f03a3009903b40000
04660099039700220302004d0303004d0438005a0438005a046c00280412
0076044100590349005c0319000304550090045500900455007d04550016
05360055053b00550369001205a900940592006405920064028900000000
fd0a03f400000000fc360205009702050097020500970224004801ff006e
01ff006e04a10023044d00ad045a00ac037000ac037000ac037600ac0527
000303e800ac03e8004503e800610668005503ca004b052200ac052200ac
052200ac020400ac0204ff50028d0007045800ac045800ac04e3000306fa
000306d700ac04fc00ac070300ac054c0063054c006304f900ac042200ac
0444006103ad004703e6000f0438000f0438000f04b80022059400000427
0030051c00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac
044000ac0462005d04610062070800ac0471005304ff000f04f2000f0504
000003f4001003ee00a2040400a1031400a1031400a1032700a10480000e
038000a1038000300380002c0578004403800057048900a1048900960489
009501ec00a101ecff55023e000003ca00a103ca00a104320001060600a1
047800a104aa006604a90066046a00a103c500a103cb006d034f00490359
001c039d001e039d001b042f0022050a000003cc0036048e00a1046900a1
03fa006d062300a1064500a1045f0017058300a103e800a103e4006b03f0
0066063200a103ff005c045f001f0463001f044d000006010001063200a1
03d5005c044300000430000003d5009902c4009902c4009902d5009901d6
ff58047700170434006003fb005d03fb005d03fb005d0583003e0362004b
04530099045300780453008801d6008501d6ff7201eaffd503b6009903b6
009904150016060200130569005f04470099062800990438005a0431005a
042a009904340086043400990362005a032100510319000a06640099039f
0022039f001803d2002204fe005103770029045500990433009903c00042
05d4009905fe0099044a000a0554009903c20099038b004d038d005d05c6
009903cb00380453fff90443fff904270018036e0000036e0000036e0000
0000fca50000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5
005e03de0064026000ed026000b10364007a0361005f01ff002a02240048
022400bb020500970586009601ff008c01ff002a01ff008c01ff002a0359
00880359002b035900880359002b01ff002a0359002b02b6007402b600c0
02b6007402b600c004190075041900ad04190075041900ad0317000102df
001f03af018a03fc01ae0317000b02df002d027300450273004503fcfff6
03fcfff6073e0095073e0095073e0095073e009503fcfff903fc00c10205
009702050097026d0085026d007a027400bf0274005a0284005602840075
024000840240007a024a00b0024a0067026d0085026d007a027400bf0274
005a028400560284007503fc009e03fc007703fc007803fc007604b0006b
043d006e03fc006a03fc003d01c4008b0335008b057500000556000007f7
000007270000073c00000727000006ad00af06ad00af040e008005a4003f
05ac004d02b6000003fc003f04b30049040e002a03fc0057040e00600434
005803fc00b903fc004a040e005303fc006d0419002b040e003403f30035
039f006103be005f039f0058039f002506210049083300ac03fc002406e3
00a10411001d0494005f02cb002303ec006203ec00510455002203d70051
0436007e03b20035043600630436005c040e0048040e00ae040e0072040e
0067040e0020040e0065040e006b040e0063040e0052040e005204430067
028d00190381005c0373005903ac00260368006103b7006e0349002f03b5
004b03bc0052039f0050039f008d039f0065039f0062039f003a039f0067
039f0061039f005e039f0051039f00500494005f02cb002303ec006203ec
00510428002203d700510436007e03b20035043600630436005c040e0048
040e00ae040e0072040e0067040e0030040e0065040e006b040e0063040e
0052040e00520321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc00580321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc0058029d003801f500310252003c0249002d024a001402460032
025100300238002202570025024d0023029d003801f500310252003c0249
002d024a001402460032025100300238002202570025024d002302b1ff4b
03130044055f0044056900440517004405690044052e00440553004405c9
004e05c9004e0567004705b7004705a2004705cd0027057d004505a20045
052a003505b80048084e0048057d005c07c9005c03fc004603fc004c03fc
006003fc002b03fc005e03fc006003fc005903fc004503fc006503fc004c
03fc005503fc005603fc003d05e9002c0405003506d300690443006102ed
000703fc00080484003a0550005e04660099066500660454005b0416004a
073e009a073e0096073e00c9073e00c9070e00af070e013a070e00af070e
013a0a4e009a0638009f04660028018a000001da00000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601d0
04a1002304a1002304a1002304a1001904a1001504a1001d04a1002304a1
001c04a1001c04a1001c04a1001d04a1002303e800ac03e800ac03e80037
03e8ffe803e8ffe903e8ffe803e8ffe803e8003702040015020400a0054c
0063054c0063054c0063054c0063054c0063054c0063054c006305940063
0594006305940063059400630594006305940063052200aa052200aa05c6
00aa05c600aa05c600aa05c600aa05c600aa05c600aa03e6001e03e6001e
03e6001e03d5005c03d5005c03d5ffbb03d5ffb103d5ffb803d5ffb803d5
005703d5ffb803d5ffb803d5ffb803d5ffb803d5005c03fb005d03fb005d
03fb003003fbffdb03fbffdb03fbffd903fbffcb03fb005d01d6002601d6
00850438005a0438005a0438ffe80438ffea0438ffe80438ffea0438005a
04a0005a04a0005a04a0005a04a0005a04a0004904a0005a043400940434
009404d2009404d2009404d2008c04d2009404d2004604d20094039f0022
039f0002039f0022046a00530466003803f4001003f4001003f4ffbd03f4
ffc003f4ffbd03f4ffc803f4001003f4ffc803f4ffc803f4ffc803f4ffc8
03f40010038000a1038000a10380fff00380ffa70380ffa00380ffa20380
ff8e0380001101ec000901ec009404aa006604aa006604aa002104aa0022
04aa002104aa002204aa006604ec006604ec006604ec006604ec006604ec
006604ec0066048d009f048d009f0515009f0515009f0515009a0515009f
051500750515009f038300100383fff10383001001da0000046600000466
000004660000046600000466000004660000046600000466000004c10066
052400ac052400ac050600ac049300a1049300a1047c00a103e6000f02ae
00210359001c01d60011043c0025043c0025043c00250676002506760025
0676002502f5001c02e7008e0306005a034b008e02a8008e028c008e0344
005a035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d
0375005a02d8008e0375005a029b005702800046025700040314005702e3
001a0445002202b5001c028b001c02b800500000fdfd0000fdfd0466ffff
0466ffff0466ffff0466ffff03c1ffff03c10000030cffff030c0000030c
ffff030c0002023100000231000001ffffff01ffffff01ffffff01ffffff
0000fd090000fd0902aa008202aa008202aa009802aa009801ce008402aa
008202aa008202aa008202aa0082027f008e027f008e0324000002910084
046601fd02aa001402aa00130329000003290000032900000329ffff039a
00000327000003fcfff903fcfff9039a0000039a00000000ff080000fe4c
0000fdfb0000fdfb0000fe3f0000fe3f0000fdc20000fdc201ce008402aa
00140291008302aa001502aa009302aa0093039a014c039a00000000fdfd
0000fdfd0000fd090000fce90000fd090000feb702aa001402aa001403fc
fff90466ffff02aa0098039a0000039a0000039a0000039a0000039a0000
039a000004010014040101470000000002aaffff02aaffff01ceffff01ce
ffff030c0000030c000002aa009302aa00c802aa00c803f100c801ceffff
01ceffff01ce000001ce000002aa00a003b1008402aaffff02aaffff075c
003c075cffff075cffff075cffff075cffff075c003f06d0ffff06d0ffff
075c0003075c0003075c004001df003001df003001e7003201e7003200f8
004400f8004402070030020700300209004c0209004c019d0030019d0030
02070032020700320209004c0209004c0309004c0309004c015f004c015f
004c015200180152001801c3001601c3001601bf001c01bf001c03270051
0327005103270051032700510000ffab03bdffff041a0000041a00000416
000104160001041a0001041a0001041a0001041a00010401000204010002
0401000204010002015f004c02aa00c801ce00c803f100c804ec000f044d
00ad0440001e0462005d049d006104ff001b057e000f044d004c03e8006c
0525006403ca005a03adffd6050e005b048a001c025000ac0226001b0428
00ac070900aa052affd6054c0063062f006104e4000f045800ac03ad0047
03ab0046043f000f03e6000f0550005e052200aa0442001e03bf003b03ca
004b03ca005a040e006808ab00ac081500ac060300ac054700ac07b700ac
071400ac04a100230204ff3a054c0063052200aa052200aa052200aa0522
00aa052200aa04a1002304a10023061bffcc050c005b050c005b04280073
054c0063054c006303ca0008089500ac081500ac050c005b072800ac04d4
00ac052a00ac04a1ffef04a1002303e8ffe103e8006e0204feac0204ff4c
054c003b054c00630458ffbf0458006e0522002f052200aa03ca004b04fc
00ac052400ac040e004d03ef003b04a1002303e800ac054c0063054c0063
054c0063054c006303e6001e04a1ffd90444ffe7035d001b03e6ffb80394
0064046b001b0545001b0495002403e8ff9e02a10007050a00630469001a
04a0001b04a10023045a00ac045a00ac045a00990444006104ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac03e8008403e8008403e8008203e80034
03e8008103ad00ac050c005b04fc00ac04fc00ac04fc00ac04fc002804fc
00ac0204ff360204ff71042800ac042800ac042800a0035d00ac035d0035
035d0060035d006606d700ac06d700ac06d700ac052a00ac052a00ac052a
00ac052a00ac054c0063054c0063054c0063054c0063042200ac042200ac
045800ac045800ac04580077045800ac03ad004703ad004703ad004703ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa048a0022048a0022071e003d071e003d0427
00300427003003e6001e03bf001503bf003b03bf003b035d001b03c2ff9b
0433001b045800ac052400ac047100ac03e2003b0444003803ad005903b5
00ac046a0027043400990434000403b3005a043400600430005d0271ffee
064300990434009903a300990241002703b40014044c0099053e00590434
00990321005102e0002102ae002103fc001b0329005903ca004b0366003a
03680050075d006003c00099061e009903d5005601d6ff570438005a0434
007a0434008804340088043400880434008803fb006203d5005803d50058
062f005c044cffe203c4003503a3003a0438005a0438005a03ca002e01ea
ff60075d006003c400350434009903d5ffbf03d5005c03fbffe203fb005d
01d6fece01d6ff650438ffed0438005a02caff7302ca00100434ffff0434
008703ca004b0434005104cd0060040e0052034c005903d5005c03fb005d
0438005a0438004f0438005a0438005a039f00220289009804eb009902ae
002106930060069200600362fff003210051032900590394006403fb003c
0240fff70240fff70434006002ff002703e2002203720049040e00720321
005101f300ad032900ad049700ac029b010a03d5005c0434009904340099
043400860362005a043400600434006004340060043400600434006003fb
005d03fb005d03fb005d03fb005003fb005d0271002503c4003504340099
0434009904340067043400130434009401d6ff1e01d6ff1e01d6ff5a03a3
009903a3009903a3006b01d6008901d6ff5801d6ff5801d6ff5906640099
0664009906640099043400990434009904340086043400860438004f0438
004f0438005a0438005a043400990434009902ca009902ca008a02ca000a
02caffff032100510321005103210051032100030321005102ae002102ae
002102aeffd202aeffd204340089043400550434007b0434004d04340086
039d0001039d002205b8003505b800350377002903770029039f00220329
000103290059032900000434008602aeffc605b80035039f002203d5005c
01f100530241002703d5002902aeff960463009903db00990344005903c2
00360362003b02ee003c03190099053b00550471000803ee00a203ee0014
03cb004803fc006d0477003204d3000803ee00530380007204a40066038a
00680350ffe80482006c03f300130232008e01ecfffe03c900a106320091
0491ffe804aa00660592006e0433000803ed00a1034f0053035b004b0383
00080359001c04b10066048d009f03b7001003690044039000570393006b
0398005507ce00a1085500ac055a00a105cd00ac06cf00a1076800ac03f4
001001ecff4704aa0066048d0096048d009f048d009f048d009f048d009f
03f4001003f40010055cffe20482006c0482006c03c9005204aa006604aa
00660390000007ce00a1085500ac0482006c065500a1046200a0049100a1
03f4ffc503f400100380ffb10380004d01ecfed001ecff7004aa001d04aa
006603edffa403ed0064048d0000048d009f039000570478008c049300a1
03c50057038c004403f40010038000a104aa006604aa006604aa006604aa
00660383001003f4001003cb002402e000270359ffeb0339005004040027
048d002703fd00210380ffff023e0000048b006603ed00270383000c0390
00550339005001f300ac032900ac049700ac026000ed03f40010040400a1
040400a10404006e03cb006d046500a1046500a104650081046500a10465
00950380002a0380002603800041038000000380004a035000a10482006c
047800a1047800a10478009a04780020047800a101ecff2a01ecff5503c9
00a103c900a103c9007e02e000a102e0000002e0002802e00024060600a1
060600a1060600a1049100a1049100a1049100a1049100a104aa006604aa
006604aa006604aa006603c500a103c500a103ed00a103ed00a103ed003e
03ed0091034f0049034f0049034f0049034f0000034f00490359001c0359
001c0359001803590019048d009f048d0079048d009f048d0075048d009f
03fd002103fd0021063e0037063e003703cc003603cc0036038300100369
00050369004403690020047800a10359000a063e00370383001003f40010
02e00027035effa703c5002703ed00a104b600a103ef00a10369004403cb
004803500060039900a1043c0025043c00250447002504470025043c0025
043c0025044f0025043c0025043c00250676002506760025068200250682
002506760025067600250689002506760025067600250475002104750021
0475002104750021047500210475002104750021047500210475002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002103d500960434006004340099043400990362003b039b005a0434
00600434006003fb006203fb0062051b00650362005a0362004b0435004b
043b005d0241fff704340060043400600451005a039d001f03d0001e0433
009404340099043400990241002701d6fff3023200940267002102e7ffa7
02f9002701d60099048600990663009406630094066400990434ffc20434
0099045300990438005a05b3005a059200640536005502ca002302ca0023
02ca002302ca009902ca0099028e0094028e002303980085039800850321
005101eaffd50242fff801eaffd5028affc402ae004102ae002104a40027
0476004904550090039d002205b80035039f00220351001f0329005903d3
005903bc004b03bb0056039400640394005e039400640362005a0507005f
03d50099043b005a046b005a04470099028affc403a30027031900990434
0060039400640394005e066f006006d400600719006004f3002103c40021
057a0021060c002504ae00990469009903ef002c03ef00700434ffd5044d
ffd503d60010050fffe3062f00620412002703cb006a0444009904590030
033f0099036f005501d60085022700000391009802f000300569005f0453
00990474005a03cb006304a9006604a800660528001406cc00560368003a
0438005a0438005a03a8009903cf005203cf0052033f001b046a009a0465
004b05c7004b0664014c03de0020060e0035034f0042032f003803210051
03d0001e02f2009903de00200450009903a80099052f0083040e000102f5
001c03f1000002e7008e02fb0027034b008e02a8008e02a800500344005a
035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d0375
008d0375005a02b2004802d8008e029b0057025700040314005704450022
02ac004402ac006c02e50048042b004402e5006c02e5004802b8004702b8
004702770046027700460297002a016300610297006c0456006c02e6006c
02e60045024e003602e6004502e6004502e5006c01e3002302e9006c02db
00460456006c0285001f024a000d02be006c024600230283002803650055
025f00180163006101f6006c02e9006c0285001f02be006c0246002302e5
006c03650050025f00180694009404bbffa704bd0060030affa7069cffe5
04b4002204beffa70352ffa7031affa7039d0014030fffa70329ffc203c4
003b0304006e03c400350688002102410027026900270468002704db0027
04c40027043400990451006002710025054c0060041e009901f0006b067f
0099045100990434009902ca006a037b005102faffd5039d002203ed0029
033c0059047c005c04d800600434006003fb005d0362005a0362004b03fb
006201d600850362003b0233001e04d800940376004b02e5006b024e0044
026e004402b200440277004201c1002401c100070297002a02e9006c0192
000001aa006c0163006d0192000001e500000194006c017b00530224006e
0456006c0456006c031b0000031c006c0304006e02e60045033600450230
0042016dffd801e4002302e9000002b8002c02e6006e02e6006e0285001f
023700420294004202a600420272003c02e6004502e9006c02e9006c016d
ffd801f6006c01f6002502030025028b006c03ef002c0286001f01c40054
0334005401ff008c01ff002a01ff008c01ce008401ce0084029900650299
006c03fc004503fc0065044b0044044b0044025100f20256000002540000
025100f2032700000254000002560000023900980239009801ce008401ce
008402aa008202aa008202aa008202aa008202aa004b02aa009302610024
015e006c02300042027e00280299006c0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203290000049a00000359002b02aa008502aa008502aa00c802aa
00c8029100840254000003c1ffff03c10000039a0000022400bb02aa0098
02aa009802aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402ac004402b8004702e60045
027e002802b8004701d9ffff01d9ffff01d9000001d90000028900000289
000002890000028900000000fc660000fc66032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
00000324000003f4000003f4000003f4000003f400000324000003240000
03270000030c000001ffffff01d900000327000003290000032900000329
00000466000004660000046600000466000003f4000003f4000003f40000
03f40000023200b6023200b6054c00630444006104440043044400610444
004303e6000e0456fec803e6000e03ad00ac054c0063045d001e059700ac
04a2000f04440061042200ac043200640375005a037500420478000604d7
00510684001404120076041200030362005a0362003b0362005a0362003b
053b0055037800940438005a0399001404c5009904a2000f0349005c01ea
ffd50476ffd504d7005104a9006603cb006d03cb004803cb006d03cb0048
0389001a0389fe6f0389001a035000a104b1005b03e2001e050000a1045d
002a03db006d03c500a104a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc6
04a1fe8b04a1fe6204a1ff2204a1ff8004a1ff5804a1002304a1002304a1
002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe62
04a1ff22066500230665ffc50665fe8a0665fe620665ff220665ffc60665
fe8b0665fe620665ff2203e8fef004bdfe8204bdfe7a03e8fef004c1fe86
04bdfe7a03e8fea403e8fe9504fcfef005d1fe8205d1fe7a0559feaa04fc
fef005d1fe8205d1fe7a0559feaa04fcfea404fcfe9504fc00ac04fcfef0
05d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa06c0
00ac06c0fef00795fe820795fe7a071dfeaa06c0fef00795fe820795fe7a
071dfeaa0204fef002d9fe8202d9fe7a0261feaa0204fef002d9fe8202d9
fe7a0261feaa0204fea40204fe950204ff4e0204ff7a054cff0605f5fe82
060cfe7b054cff0605f2fe7f0605fe74054cfecf054cfeac0422fef003e6
fe940517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6001e03e6001e
0550ff0605f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599
feaa0550fecf0550feac0550005e0550ff0605f2fe7b060dfe780599feaa
0550ff0605f2fe7b0611fe7c0599feaa0714005e0714ff0607b6fe7b07d1
fe78075dfeaa0714ff0607b6fe7b07d5fe7c075dfeaa048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a005a048a0061048a0061048a0061048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
005a03a5005903a5005903a5004f03a5005903a5005203a5005203a50059
03a50059044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059044c0099044c0099044c0092
044c008f044c0094044c0099044c0092044c0092044c0094044c0099044c
0099044c0059023200010232ff860232ff830232ff62023200000232ff86
0232ff860232ff600232ff100232fecf0232ff600232ffef0232ff7b0232
ff290232ff690232ff680438005a0438005a0438005a0438005a0438005a
0438005a0438005a0438005a041200760412007604550090045500820455
008204550084045500900455008204550082045500840455001204550010
04550080045500900455009004550041045500710455007d059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006403f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001005b9001005b9
001005b9001005b9001005b9001005b9001005b9001005b9001005b90010
038000a10380004903800049038000a10380004903800049038000a10380
007b047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1047800a1047800a10478006f047800a1047800a1047800a10478
00a1047800a1047800a1047800a1047800a1047800a1063c00a1063c00a1
063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a101ec
000901ecff6201ecff6201ecff6501ec000901ecff6201ecff6201ecff65
01ecff1001ecfee901ecff6401ec000001ecff8c01ecff2a01ecff5301ec
ff7004aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006603c500a103c500a1038300100389001a038300100389001a0383
00100389001a038300100389001a038300100389001a038300100389001a
038300100389001a038300100389001a038300100389001a038300100389
001a0383fff50389fff5038300100389001a038300100389001a04b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b100660675006606750066067500660675
0066067500660675006606750066067500660675006604a1002304a1ffc5
04a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204fc
00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a
0559feaa0550005e0550ff0605f2fe7b060dfe780599feaa0550ff0605f2
fe7b0611fe7c0599feaa066500230665ffc50665fe8a0665fe620665ff22
0665ffc60665fe8b0665fe620665ff2206c000ac06c0fef00795fe820795
fe7a06c0fe4d06c0fef00795fe820795fe7a06c0fe4d0714005e0714ff06
07b6fe7b07d1fe780714fe610714ff0607b6fe7b07d5fe7c0714fe6101d9
ffff01d900000289000002890000039a0000032900000329000003240000
03290000032900000324000003f4000003f400000324000001d900000327
0000030c0000023200b601c4007901c4007901c40079054e00ac0440000a
042200ac0366001b044100ac06b2005503ca004b04a500ac045800ac046a
001b050c000f052400ac05b100ac073800ac052b00630444006103e6000f
03e6001e03e6001e0476003005d2000f049a007404720074047200ad05f6
002805f60028020400ac06680055045f00ac050e000304fc00ac04fc00ac
04720074070700ac04a1002304a10023061bffcc03e80059052500640525
00640668005503ca001503ca004b052200ac052200ac054c0063054c0063
054c00630462004c0438000f0438000f0438000f04720071035300ac0618
00ac0366001b048500300427003004400035065d0037061d003d041a003d
070f0003072800ac0515005b0521000f03ca005a05090003045f009903df
00270434009902f90027039f009905c0003e0362004b03f4009903b60099
03eb00270447000a0471009904d8009905f10099046f00590362005a0319
000a039d0022039d002203b2002904c5000a03ea004203c0004203c00099
04c8001904c800190583003e03cf009904210016044700990454009903c0
004205b6005f020400ac03d5002e03d50058062f005c03fb005603fb0062
03fb00620583003e0362000803bc004b04530095045300970438005a0431
005a0431005a038b0004039f0022039f0022039f002203c0002902c40099
0554009902f9002703b10029037700290434006006550060059b004b03ba
004b061f001606500099044500500481000a0362005a042b001604a800a1
03e8002703c500a10314002703ec00a105d0004403800057041c00a103ca
00a103ca002704530017049800a1050100a1067700a104a2006503cb006d
0359001c0383001003830010041300360545001c041a006d03fa006d03fa
00a1054f0020054f002001ec00a10578004403ff00a1045a0001047800a1
04a100a103fa006d062f00a103f4001003f40010055cffe20380004204a2
006504a20065057800440380000303900057048900a0048900a004aa0066
04a9006604a9006603e4001e039d001e039d001e039d001e03fa00440314
00a1058300a1031400270417003603cc003603e8004a0588004a05590072
03d8007205d20001061900a10488006c0444001c03800068045c00010400
000008000000040000000800000002af0000020000000155000004500000
01bc00000199000001000000000000000000ffdc0000ff2a040e0024040e
00240329009003fcfff901ff008c0358008801c400540334005404a40054
0476010a03fcfffb0273004404ee004f044400610444006103ad0027040e
005306640099052a0020076000ac064800ac071e002005f500ac0428001b
03e6000f08a80032043afffe0482002104b2005b0495002003ad00200444
00610621004906210065057800e6059d00e603fc005e070100bc03fc0062
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff6070900aa045c005b047200ad0444007104d0003a0562007403c90010
06640094042f005f04180015035a0053040b00300441006f032600100327
00030327000303270003025400c0025400c0025400c8025400c802aaff8c
02aaff8c04e0005907f4000a07e2001407980003076c0061064100ac050b
002406a700ac05c80055073f00ac03ca00210600009004b8001c085c0063
054c003b076c0061076c006104440061056a0022053400990433001b05af
00990480001b060b0099034e001605a9009403d2ffc40745005a049c005a
06420059056a00220362005a06b8006d05c300a10453001205c000a1050b
0046066400a10380002205580087042e002207f10066050f006806b0006d
06b8006d039c006d03c7009602aa00db040e008d0000ffdc0000fe5101cf
0000022400bb01c700000163006102b1ff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bdffff02aaff8c
055001e5027f008403240000039a00000256000000000027000000e10000
00ed0000001b032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000034600000000002703c10000030f000003460000
03460000039a0000034800000348000003a2000003a2000002560000035f
00000000009e00000067000000220000009e0000009e0000009e0000009e
0000009e0517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6000e03e6
000e03f4001003f4001003f4001005b8001005b8001005b80010047800a1
047800a10478006f063c00a1063c00a1063c006f0383ffc80383ffc80383
001004b1006604b1006604b100660675006606750066067500660000fdbc
0000fd1a0000fd770000fd4f0000fbfe0000fbfa0000fc000000fbfa0000
fc000000fbfa0000fc000000fbfa0000fc000000fc000000fc000000fc00
0000fc000000fc000000fc000000fc000000fdd00000fc300000fc300000
fbff0000fbff0000fbff0000fbff0000fbff0000fc000000fcac0000fcad
0000fcac0000fcac0000fd1b0000fd1b0000fd340000fd340000fd340000
fd340000fd600000fd600000fd730000fd730000fdcf0000fd5f0000fd5f
0000fd5f0000fd5f0000fd7f0000fd7f0000fca10000fd6f0000fdfd0000
fcef0000fcf20000fca00000fca00000fcae0000fcad0000fc660000fca0
0000fc2f0000fc2f0000fc660000fc5f0000fdd00000fcf10000fd6d0000
fcf30000fd710000fd710000fdb10000fc650000fcf10000fcf10000fc2f
0000fbff0000fd770000fc660000fc660000fc650000fc650000fc650000
fc650000fc460000fd790000fcde0000fcde0000fd4b0000fd4b0000fca8
0000fca80000fd710000fda60000fda60000fce30000fd4c0000fd4c0000
fd4b0000fd4b0000fd7e0000fcdf0000fcde0000fcde0000fc8f0000fc52
0000fc520000fc520000fc520000fc920000fc970000fc970000fc560000
fc560000fc910000fd820000fd820000fd700000fd700000fdfa0000fdfa
0000fd5f0000fd5f0000fd790000fd790000fd8f0000fd8f0000fd6e0000
fd6e0000fd7a0000fd7a0000fcfb0000fcfb0000fdb60000fdb60000fda8
0000fda80000fd680000fd680000fd710000fd710000fcf10000fcf10000
fcf10000fcf10000fc540000fc260000fc260000fc290000fc290000fc27
0000fc270000fc270000fc270000fc350000fc350000fc350000fc350000
fdb60000fda80000fda80000fce30000fd460000fd460000fd470000fd47
0000fd020000fd020000fd020000fd020000fc650000fc660000fc9f0000
fc9f0000fc9f0000fc9f0000fca10000fca10000fc9f0000fc9f0000fc9f
0000fc9f0000fca10000fca10000fc370000fc370000fc370000fc370000
fca00000fca00000fc9f0000fcad0000fd330000fd470000fc9f0000fc9f
0000fc9f0000fc9f0000fbff0000fc020000fbff0000fc000000fc370000
fc370000fc370000fc370000fdbd0000fdbd0000fca20000fca30000fca3
0000fdd10000fdd10000fdd10000fdd10000fc6a0000fc6a03e6fe940389
ffcb0389ffcb0389001a01d6008904340060043400600434006004340060
043c0025067600250aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b4047d00a3040e0023040e0054040e
001b040e002e0557001e040e001e07570026027100240271002504300000
04e300ac0366000f0476006203cb005a0438ffff039fffe106d700ac04a1
0023053f00ac05a2005d02ca00350438005a03800072016dffd802f5001c
03ad004703bf003b0254007801de00640254007801de006404fc00ac0434
0099058b000f056d002103ca004b038f005a03c100220366001e04680022
0411001e035000a1034f0049084900230610005c081400220671005c07cc
0022063b005c068800230545005c068800230545005c068800230545005c
04440057036200500428001203a3ffe9042800ac03a300990428001203a3
ffe9040900ac027b0099035d001201d6fff6054cffe20438ffec05c80063
04b9005a091b0063070f005a042200120434ffea054e0037052e003705cc
0014067800250562006304340060070c006305a40060041e007803350050
04a7005303fd0032048a0022039d0022071e003e05b8003503bc004b03a7
004b0422001c0434ffea0422001c0434ffea03a300ac032000990346003c
0346003c03df001e03700014042b005c042b005c0262003c05690060031b
009907a300990569009902ca0099051900a1034e002103b70064054cfff6
04340061035f00ac02ca009903c4003503c4003503c40035035d001201d6
0099052400ac04340099035f00ac02ca0099049f005a03b7005a04fc00ac
02fe0000054f00ac046200990461ffcc038dffe10362005a043400990504
000f053f005003adffd602710025051e00630444005a053800630437005a
051e00630444005a050cffb803c400080428000803a30008052afffe0434
001c0458002602ca000c03ad003a03210051058d000f03ca004b053c0061
03ec00000428003003e6000f052e000a035b0024047b00450664009903ad
00590422005b06d700ac020400ac08d50022048afff2062f005c03a4006f
03fbfff204c80015027100250434006002a6001401d6ff1d01d6fffa0664
0099043400990434009903c7004903c70049043c007406cc005a06cc005a
06cc005a070f005a070f005a0401006403ed00a1028d009903dd00990393
001404a6001403b2003f057b003f01eaffd50434009404a4002706640099
066400990470fffa0369001203be001203690012041a00290377ff4a041a
ff4a0377fef003510022030c008402e9006c01ee0000015effc7031d0000
0434006004b100660655000305580016057900ac056c009906550052062c
00380562006304340060071e003d05b80035042800ac03a3009907210003
05db0016073800ac060c0099051f00ac0450009904d100ad043c00990512
ffec0447ffc2096e000508030017049b0005040d0017050b0003043c0016
052400280000ff8f0000ff7e0000ff300000ff100000fefc0320007c0000
ff2f0000ff310000ff530000ffb70000ff4c0000ff4d0000ffad0000fec3
0000fdc5000000000000ff4d0000ff4d000000d50000fecb0000fe4b0000
ff320000ff460000ff2f0000ff550000ff5e0000ff4d0000feb70000ff66
0000ff4d0000ff320000ff2f0000ff5f0000ff55000000000000fe4d0000
ff3700000000000000000000000000000000000000000000000000000000
00000000000000000000ffb70000ffb70000000000000000000000000000
00000000ffb70000ffc3027300450000ff3101de00a10000048400000057
022400960000ffa80000ffa80000ff190000fe6e02eb009400000000044b
006a046b006a03f3002b02f30019038f0018048f008c049a008c01da0099
02530018049d0099046e006b0477006b01da00990390001803a1001803ce
002e0378001c04ae009904b3009904a5005404ad005401da009902eb002b
048b0028043100150427005b0439005b0454006d0464006d037a002003e2
0019044b008c0451008c03900018058c004a0591004a04d7003604e50036
03b5009903b5009903b5009901ff002a0359002b01da00990000ff0603b5
0099043100150577006904bb001805bb008c04fa002e04a4001c05da0099
04bc00180603003603fc0046044b006a044b006a046b006a03f3002b03f3
002b02f3001902f30019038f0018038f0018049a008c048f008c0242001e
01da009901da00990299001e0477006b0242001e039000180390001803a1
001803ce002e03ce002e0378001c03adff6a03adff6a04ad005402eb002b
048b00280439005b0464006d0454006d03e200190451008c039000180591
004a058c004a058c004a0591004a0591004a04e5003604d7003603e8001c
042f001d05f400ac03bf00370329005903bf00370329005903ad00470321
0051025000ac02320094050e008204010064055e0050037d003208790063
073500640440ffd703c2ffcd06d7000f05df000a062600ac057b00990708
006305c6005a06f000ac058d009904a10022039d002205c800550480001b
06f000ac059b009904c8001403d20022051c002c0455001d05d20005050d
001705b7000304d1001607a900ac05f70060054c00630438005a054c0063
0438005a091b0063070f005a0655007e0000fea207e2006f074b00c807e2
002603d1007d000000640000006400000064000000640000006400000064
00000064000000640000fe480000ff32036e0000025b005e052700010477
001703b700470338005107c9004b06c2004b0706007405e6004205b50001
04ed00170530000f043d000a03e6000f0319000a051c00ac0468008503e6
000f0319000a05340014048c0014047200ad04340099071a00ac060f0099
091b0063070f005a054c00630431005a03a2006402e50064000000640409
00ac036d009903e6000f03190014052200ac04530099028d0007042800ac
045a00ac042200ac0422005b04ec00ac03e6000f03e6000f050c005b0428
00ac04280030028d0007044400610444003803bf003b03ad00ac03ad0059
06d700ac052a00ac035d00ac03ad0047045800ac0458004d04950024048a
002204fc00ac050c0094028d00a9071e003d0427003003e6001e045a0059
04a1002304a1002303e800ac03e8006c020400ac054c0063052200aa0522
00aa035d001204ec005d0205009702050097039500970395009702000097
020000970454006403970064053d00480500000c083b003205c300310382
00310a1500320a1a00320000fff6042d004b042d004b06cc000005aa00c8
06f400c803d300620266006a033e004507640031045900000266006a01ff
ffa8037e006a03ca0075005fffa80410018004100157041000ba04100047
041000c3041000b5041000950410004c0410004c041000aa057300c80223
00490243007103400056035b00c50a6d008405ce00a3045f008804100180
04100155041000b8041000430410006f04100076041000930410004c0410
004c041000aa024400b102820085035a00850175009c0200008c0200008c
02bf008c02bf008c02bf008c02bf008c02bf008c02bf008c02d0009602d0
0096020f007b0201008c0201008c02180071031e009e031e009e0282ffa8
0282ffa80282ffa804be006704be00d2028200680282ffa80282002d02a0
00000282005b0282006c0282ffa8028200680282ffa80282006d0282ffa8
0282006a0282ffa8028200ab0282ffa80410007d041000c701ee006f0243
006f03470070040600540350006f0360005d038e003903ea003903ea0039
0364003901ee006f0243006f034700700406005403d9007003dd005d0393
003803ea003903ea0039036400390398005d0329003c027000d2027000b6
027000490270001e0270004a027000410270002c0270001b0270001b0270
003902700013027000170270002302700020027000450270001202700037
02700025027000260270001e02700028027000190270001b027000140270
0019026600de026600c302660069026600250266006c0266006802660058
0266002b0266002b026600640266003c0266004202660057026600480266
00750266003e0266005e0266004f0266004f0266002e0266005102660044
02660047026600400266004404c40031000000000000000004c4003104c4
00310000ffa80000fef50000fef90000fee40000fef50000fe7a0000ff09
0000fe840000ff310000ff5e0000ff4a0000ff5e0000ff220000feeb0000
ff170000ff2a0000ff490000ff250000ff290000ff650000ff120000ff4b
0000ff480000ffaa0000ff480000ff440000ff210000ff350000ff370000
ff930000ff490000ff2a0000ff150000ffad0000fe390000fe920000ff03
0000ff190000ff3b0000ff220000fe9f0000ff7b0000ff890000ff480000
ff6a0000fe9f0000ff120000febb0000ff2a0000ff610000ff610000ff84
0000ff690000ff480000ff290000ff220000ff290000ff1e0000ff150000
ff300000ffb20000ff4c0000ff3a0000ffb20000ff4c0000ff3a0000fee5
0000feda0000fee50000ff620000ff1e0000ff2a0000ff250000ff980000
ff980000ff980000ff980000ff2d0000fed20000ff470000ff170000ff6f
0000fefc0000ff0b0000ff230000ff290000ff210000ff240000ff150000
ff2a0000ff220000ff3c0000fefc0000ff480000ff130000ff0702760000
01790005018500250185007f0179ffd10179ffda0185fffa0225007f0179
ffc70179ffcb01deffbc01dd000401de005d01de007f01ddffe001ddffd9
01de003201de007f01ddffc001ddffc40669004c0669004c0669004c0669
004c0669004c0669004c0669004c0669004c0669004c0669004c0669004c
0669004c0669004c0669004c0669004c0669004c0669004c0669004c0669
004c0669004c0669004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff9501f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ff9d0251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa806e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c04ca004c04ca004c
04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca
004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c
04ca004c04c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa804ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c0347005803470058034700580347005803470058
034700580347005803470058034700580347005803470058034700580347
0058034700580347005803f1005703f1005703f1005703f1005703f10057
03f1005703f1005703f1005703f1005703f1005703f1005703f1005703f1
005703f1005703f100570358000003580000035800000358000003580000
035800000358000003580000035800000358000003580000035800000358
0000035800000358000003580000036d00000358000003a9000003a90000
03a9000003a9000003a9000003a9000003a9000003a9000003a9000003a9
000003a9000003a9000003a9000003a9000003a9000003a9000003a00000
03a90000072b004c072b004c072b004c072b004c072b004c072b004c072b
004c072b004c072b004c072b004c072b004c0507ffa80507ffa80507ffa8
0507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507
ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa8
0566ffa80566ffa80566ffa80566ffa80791004c0791004c0791004c0791
004c0791004c0791004c0791004c0791004c0791004c0791004c0791004c
0846004c0846004c0846004c0846004c0846004c0846004c0616ffa80616
ffa80616ffa80616ffa80616ffa80616ffa8063affa8063affa8063affa8
063affa8063affa8063affa80865004c0865004c0865004c0865004c0865
004c0865004c061c003b061c003b061c003b061c003b04d5ffa804d5ffa8
04d5ffa804d5ffa804f4ffa804f4ffa804f4ffa804f4ffa8063b003b063b
003b063b003b063b003b04b5004c04b5004c04b5004c04b5004c04b5004c
04b5004c04b5004c04b5004c03dfffa803dfffa803dfffa803dfffa803df
ffa803dfffa803dfffa803dfffa8038effa8038effa8038effa8038effa8
038effa8038effa8038effa8038effa80401004c0401004c0401004c0401
004c0401004c0401004c0401004c0401004c06c8004c06c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c02db
ffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80351
ffa80351ffa80351ffa80351ffa80351ffa8072f004c072f004c072f004c
072f004c072f004c072f004c072f004c072f004c072f004c072f004c04f9
004c04f9004c04f9004c04f9004c04f9004c02dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80506
004c0506004c0506004c0506004c0506004c0556003b0556003b0556003b
0556003b0556003b0556003b0720004c0720004c0720004c0720004c0720
004c0720004c0720004c0720004c0720004c0720004c0720004c0720004c
0720004c0720004c03bdffa803bdffa803bdffa803bdffa803bdffa803bd
ffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa8
03bdffa803beffa803beffa803beffa803beffa803beffa803beffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80635004c0635004c0635004c
0635004c0635004c0635004c0736004c0736004c0736004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c08d9003b07a5ffa807d4ffa80909003b045f004c0469
004c0469004c0469004c045f004c045f004c045f004c01cdffa801d9ffa8
01d9ffa801d9ffa801cdffa801cdffa801cdffa8020cffa8020cffa8020c
ffa8020cffa8020cffa8020cffa8020cffa804ad004c04ad004c04ad004c
04ad004c04ad004c04ad004c04ad004c036e0059036e0059036e0059036e
0059032fffa8032fffa8032fffa8032fffa80392ffa80392ffa80392ffa8
0392ffa804140059041400590414005904140059045b004c045b004c045b
004c045b004c045b004c045b004c045b004c045b004c045b004c01f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80495004c0495004c0495004c0495004c0495004c0495
004c0495004c0495004c0495004c0524003b0524003b039e004c0524003b
040fffa80411ffa801f6ffa80411ffa8033effa8033effa802dcffa8033e
ffa80378004c052e003b0378004c052e003b02c6004c02c6004c02c6004c
02c6004c02c6004c0378004c0378004c039e004c039e004c0378004c037a
0000037a0000037a0000037a0000037a0000037a0000037a0000037a0000
037a0000037a0000037a0000037a0000037a0000037a0000037a0000037a
00000317004c03cb000003cb000003cb000003cb000003cb000003cb0000
03cb000003cb000003cb000003cb000003cb000003cb000003cb000003cb
000003cb000003cb000002c9004c055b004c055b004c055b003b055b0031
055b0031055b004c055b004c055b004c055b004c055b0039055b004c055b
004c055b004c055b004c055b004c055b004c055b004c01f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa802ab
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80497004c0497004c0497004c04970046049700460497
004c0497004c0497004c0497004c0497004c0497004c0497004c0497004c
0497004c0497004c0497004c0497004c055bff3b044bff0007dc004c07dc
004c0306004c02d0001507dc004c07dc004c01f6ffa801f6ffa80251ffa8
0251ffa802d0001502d000150301007f0301007f036e005903d8007f0433
007f0562004c05bc004c05a90000060b000005a90000060b000005a90000
060b000005a90000060b000004fa000005ab00000441ffa804fa000005ab
00000441ffa80467004c0467004c01de007f0185007f043affd9043afffd
0458003b0458003b04d4000304d4003b04f2003b04f2003b08a4004b072c
004b08a4004b072c004b09e90030083f006b0763005f06cd000009550000
0960ffe8096000000960fffe0930ffff0185ffd901de000402d2007c02d2
007c0179007f01dd007f0469004c01d9ffa8020cffa804ad004c04f5003b
04f5003b04f5003b04f5003b054e003b054e003b054e003b054e003b04f5
003b05ab000005ab00000400ffa80444ffa80444ffa80556003b0556003b
037300000373000003730000037300000373000003730000037300000373
000003730000037300000373000003730000037300000373000003730000
0373000003a0000003730000038700000387000003870000038700000387
000003870000038700000387000003870000038700000387000003870000
038700000387000003870000038700000347005803470058034700580347
0041034700580347005803470058035800000358000006c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c02dbffa802dbffa802dbff8d02db
ff6f02dbffa802dbffa802dbffa803bdffa803bdffa803bdffa803bdffa8
03beffa803beffa801cdff2f032fffa801f6ff8904f5003b03b4ffa802dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff28032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa80245ff280245ff280245ff280245
ff280243ff280243ff2801f6ffa801f6ffa801f6ffa801f6ff3301f6ff23
01f6fed101f6ffa801f6ff5c01f6ff5c01f6ff2201f6ff5d01f6ff5501f6
ffa801f6ffa801f6ffa801f6ff3301f6ff2201f6ff9401f6ff2201f6ff22
01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ff3301f6ff2201f6
ff2201f6ff4e01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ffa8
01f6ffa801f6ffa401f6ff9401f6ff4101f6ffa801f6ffa501f6ffa501f6
ff9201f6ff9c01f6ff9b01f6ffa801f6ffa801f6ffa801f6ffa401f6ff92
01f6ffa801f6ff9201f6ff9201f6ff9201f6ff9301f6ff9201f6ff9201f6
ffa801f6ffa401f6ff9201f6ff9201f6ff9201f6ff9201f6ff9201f6ff92
01f6ff920251ffa80251ffa80251ffa80251ffa40251ff940251ff410251
ffa80251ffa50251ffa50251ff920251ff9c0251ff9b0251ffa80251ffa8
0251ffa80251ffa40251ff920251ffa80251ff920251ff920251ff920251
ff930251ff920251ff920251ffa80251ffa40251ff920251ff920251ff92
0251ff920251ff920251ff920251ff9201fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbff9501fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ff9d0233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80255ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa801fbffa801fbffa8
01fbffa801fbff3301fbff2301fbfed101fbffa801fbff5c01fbff5c01fb
ff2201fbff5d01fbff8801fbffa801fbffa801fbffa801fbff3301fbff22
01fbff9401fbff2201fbff2201fbff2201fbff2201fbff2201fbff2201fb
ffa801fbff3301fbff2201fbff2201fbff5201fbff2201fbff2201fbff22
01fbff2201fbffa801fbffa801fbffa801fbffa401fbff9401fbff4101fb
ffa801fbffa501fbffa501fbff9201fbff9c01fbff9b01fbffa801fbffa8
01fbffa801fbffa401fbff9201fbffa801fbff9201fbff9201fbff9201fb
ff9301fbff9201fbff9201fbffa801fbffa401fbff9201fbff9201fbff92
01fbff9201fbff9201fbff9201fbff920233ffa80233ffa80233ffa80233
ffa40233ff940233ff410233ffa80233ffa50233ffa50233ff920233ff9c
0233ff9b0233ffa80233ffa80233ffa80233ffa40233ff920233ffa80233
ff920233ff920233ff920233ff930233ff920233ff920233ffa80233ffa4
0233ff920233ff920233ff920233ff920233ff920233ff920233ff9202dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff28
02dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff2802dcff2802dcff2802dcff2802dcff2802f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff27032dffa8032dffa8032dffa8032dffa8032dffa8032d
ffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80245ff280245ff280245ff28
0245ff280245ff280245ff280245ff280245ff280245ff280245ff280245
ff280245ff280245ff280245ff280243ff280243ff280243ff280243ff28
0243ff280243ff2802f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff270694
004c0694004c0694004c0694004c0694004c0694004c0694004c0694004c
0694004c0694004c0694004c0694004c0694004c0694004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c0668004c0668004c0668
004c0668004c03d0004c03d0004c03d0004c03d0004c0185ffc70185ff96
01de005d01de003201f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff8201f6ffa801f6ffa801f6ff8201f6ff8201f6ffa801f6ffa801f6ff82
01f6ff8201f6ff9401f6ff8201f6ff820251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbff8201fbffa801fbffa801fbff8201fbff82
01fbffa801fbffa801fbff8201fbff8201fbff9401fbff8201fbff820233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051d
ffa8051dffa803470058034700580347005803f1005703f1005703f10057
0507ffa80566ffa802dbffa80351ffa803b4ffa80458003b04f2003b0458
003b04f2003b0282ffa80000feb70000fef50000fef90000fee40000fef5
0000fe7a0000ff090000fe840000ff310000ff5e0000ff500000ff5b0000
ff2a0000feeb0000ff2b0000ff2a0000ff490000ff2a0000ff2d0000ff65
0000ff120000ff4e0000ff4e0000ffb10000ff490000ff440000ff210000
ff350000ff370000ff9e0000ff490000ff2a0000ff150000ffb10000fe39
0000fe920000ff060000ff2c0000ff3b0000ff210000fe9f0000ff7b0000
ff950000ff480000ff6a0000fe9f0000ff120000fec80000ff2d0000ff68
0000ff680000ff8b0000ff690000ff490000ff290000ff220000ff290000
ff1d0000ff1c0000ff2a0000ffba0000fedf0000feda0000fed90000ff62
0000ff140000ff2a0000ff2a0000ff980000ff980000ff980000ff980000
ff2d0000feda0000ff4f0000ff1f0000ff6f0000fefc0000ff1f0000ff27
0000ff2d0000ff210000ff2d0000ff190000ff2a0000ff2a0000ff3c0000
fefc0000ff4e0000ff180000ff1504be006704be00ee0a07006b0321ffa8
0341001e0242001e02280071024c006a024c006a0000ff1d042d004b0000
ff8e0000ff2d0000ff870000ff490000ff2d0000ff2c0000ff560000ff24
0000ff990000ff420000ff970000ff3f0000ff920000ff620000ff3f0000
ff3e0000ff650000ff2e0000ffac0000ff660000ff840000fef40000ff48
0000ff480000ff1d0000ff350000ff560000ff370000ff560000ff090000
ff090000ff1d0000fe760000fe760000ff5f0000ff5f0000000f0000000f
0000ff9f0000ffae0000ff770000ff6c0000ff590000ff6e0000ff000000
ff8e0000ff2d0000ff870000ff2d0000ff2c0000fec10000ff240000ff99
0000ff350000ff3f0000ff920000ff3f0000ff3e0000fedc0000ff2e0000
ff9f0000ff570000ffa00000ff4f0000ff4e0000ff240000ff480000ff1d
0000ff350000ff5a0000ff370000ff560000ff090000ff090000ff1d0000
ff240000fefb0000ff720000ff770000ff770000ff770000ff6e0000ff74
0458003b043a003b0461003b0443003b04f2003b04d4003b04f2003b04d4
003b05370004080700000866000009380000095d0000055500000811ffdc
0870ffdb0942ffdc0968ffdb0648004c0543004c05f7004c0659004c07d6
004c0833004c08b7004c0941004c09c9004c09cf004c08f2004c0910004c
073b004c0683004c053e004c0694004c0637004c0585004c0647004c0647
004c0557004c0557004c060c004c060b004c0617004c075b004c077b004c
079e004c07fa004c077b004c0813004c079e004c078e004c09e4004c09d7
004c068a004c048a004c071e004c06a4004c074a004c0788004c0865004c
084a004c0720004c06a8004c0720004c04ad004c0722004c0453004c0688
004c0688004c04a5004c04a5004c0688004c0688004c0405004c0405004c
0720004c051a004c0720004c0720004c05f5004c0720004c0930004c091a
004c04ba004c04cd004c064b004c070a004c0825004c067a004c0624004c
04e1004c051c004c04a5004c055a004c04ce004c04a5004c04a5004c04ba
004c04ba004c045e004c045e004c052e004c0570004c0626004c0626004c
05f5004c0668004c08f0004c07ed004c0960003b0000ffaa0000ff770410
01a6041000cc04100057041000830410007604100090041000b30410004e
04100090024300bc034700790406005e0398005e03dd005d038e004d0329
003c03ea003b0364004c027000ea02700050027000230270002902700017
0270004e0270004c0270001a02700061026600fa0266007d026600360266
0050026600420266006d0266006e0266002c0266007f0758002807d10028
0344ff6103afff630464ff640481ff6107b70028081d002807550028077a
0028075d003b0812002807a7002808160028075d003b07a70028075b0028
07a70028077b002806b60028075d003b07a7002807b70028078600280816
00280934002809ad00280993002809d8002809720028099400280957003c
09ec00280979002809d200280957003c097900280982002809c10028099d
002808a300280957003c09790028099300280963002809d20028028fff78
0091fe4401a1fe4e0203fe4e0313fe530373fe56045afe3c04effe470570
fe40058efe520453fe3e0472fe3f0284fe2e01e8fe4a008afe0901f9fe4b
017dfdc900cdfdcb018ffdda0191fddc009dfe3c009dfe3c0152fe36014f
fe3a0181fe4e02c0fe4802e0fe480303fe48035ffe4802e0fe480378fe48
0303fe480338fe4e0398fe4f06e2003c06e2003c06e2003c06e2003c06e2
003c06e2003c08e8002808e8002808e8002808e8002808e8002808e80028
0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000
ffba072cfff104d4ffba0410009a03980064027000270266005d0598fe47
058afe4604b100ac040e00ac0669004c0669004c0669004c01f6ffa801f6
ffa8037dffa80251ffa80251ffa8036effa806e2004c06e2004c06e2004c
0358000003a9000006c8004c02dbffa80351ffa8072f004c04f9004c02db
ffa80351ffa80506004c045b004c01f6ffa80251ffa80495004c055b004c
01f6ffa80251ffa80497004c0373000002dbffa801f6ffa801f6ff3301f6
ff2201f6ffa801f6ffa401f6ff920251ffa80251ffa40251ff9201fbffa8
01fbffa8037fffa801fbffa801fbffa80233ffa80233ffa80381ffa80233
ffa80233ffa801fbffa801fbff3301fbff2201fbffa801fbffa401fbff92
0233ffa80233ffa40233ff920000fdaa0000fe5f0000ff200000ff110000
ff220000ff220000fd2d0000fc330000fc410000fcd80000fde30000fd49
0000feaf0000fe5e0000fdaa0000fe5e0000ff200000ff110000ff250000
ff250000fd2d0000fc410000fc500000fcf10000fde30000fd490000feaf
0000fe0e0000ff6a0000fe8c0000ff1f0000ff2a04dc01180a2f002d0a2f
002d051900aa04fb00aa04ff006404f7006404fb00aa053500a0046700b4
04f100aa060500aa04ff006404a100b4036700b4065500b4056400a004c9
0096045900140528009004f700640526002a053d00aa0511008c04f7ffe2
04e7007d04fb00aa04d8007305a0005f05350096053d00aa04fb00aa04e3
006404c1006404b500aa0511008c038d00b405cd006e051600000561006e
0557005a01ff008c01ff002a01c2ffe70258fffe01d30023028a000a0000
fc4006640093043400990485006004880099043400930435006003b90099
0434009905b00099048500600434009901d80099066a0099043400600434
0093043400990434007604340099043400500434009301d8ffc30434ffa1
0371001f04340099028c00260664009903fe0073044a0099043400930434
0093065e0093043400990434005f02ed0093065e00930463000e0442005f
050d0044054500930240fff7066400990868009308680093086800930868
00930a3a0093022400bb027300450205009704ed003c0802008b0802008b
04b7007104cf00690500009b050c008704b4009b066a009b04b5fff1052b
00690385fff1046d00ad061f009b049d005504b400af059700680515fff1
04ecfff106250055046f00af046400af05e300680587005503ee001404c9
00af0479005f0492008c047d00af05440069049d0055040200b00439006e
0478007304c700550625009b034800b00544009b046e005404a1009b0544
00280439005f03c90040039e003c044c006403de0037063a006e03b6003c
03a800320527ffd806690064040a006e0352ffd807bf006e041d0064041d
007d05a4006e03a8002903e3001405a6006e03fc007d05bc0055045dffd8
061d005503b6003c05a4006e0405006e041d0064040a007d04470069041d
006403e3005003be0000041d007d04df000a036f0014043b0055044d0073
0339ffba0339ffba03c40050069b006403b100460405007d04380064044a
006903fd007802ac00500393003204390069044c0064044f0028049e0064
049e0064069a00640495005004880060060800140721008205050082044b
002808c1006e04c2006404c0009606960082044b002804bb005006660078
0497009605e2005a0526ffd806a0005504a9005e0650006904bd006404b3
00500455009604eb008204ae005004520055049a002204b7009604cd001e
0413000105090082055f007304460032044600320413005a0659006904c6
006404bd0096049e006404b0006804c60064055f0073054d007804210098
04340094043400980442005f04340098066400980430ff7a0660009402e7
fff604300094066400980491005904340098066400940488ffe20488ffe2
06600094043400940433009806640094063f005f0373ffd9043400980434
0094043400940434009804340098064c005f066400980422009804340098
041dffe806620098042c00980375005004340094042e00940665005f0322
004b030a004600>
<000000000000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000017e0000017e0000017e0000017e0000017e
0000017e0000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
02780000027800000278000002780000027800000278000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
0000055e000006f200000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
08680000086800000868000100001b2a043a00170118000800020010002f
00870000123624eb000700010000000e00ae000000030000000002100000
000000030000000700760210000100000000000001080286000100000000
0003000e038e0001000000000004000e039c0001000000000006000e03aa
0001000000000007003b03b80003000104090000021203f3000300010409
0001001c06050003000104090002000e06210003000104090003001c062f
0003000104090004001c064b0003000104090006001c0667000300010409
00070076068300a9002000320030003100380020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002ea92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e454e4b4d4a482b43616c69627269
454e4b4d4a482b43616c69627269454e4b4d4a482b43616c696272694361
6c6962726920697320612074726164656d61726b206f6620746865204d69
63726f736f66742067726f7570206f6620636f6d70616e6965732e00a900
2000320030003100380020004d006900630072006f0073006f0066007400
200043006f00720070006f0072006100740069006f006e002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
7600650064002e000d000a0048006500620072006500770020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200063006f0070007900720069006700680074002000
a9002000320030003000330020002600200032003000300037002c002000
520061006c00700068002000480061006e0063006f0063006b0020002600
20004a006f0068006e00200048007500640073006f006e002e0020005400
68006900730020006c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
48006500620072006500770020006900730020006f00700065006e002000
73006f007500720063006500200073006f00660074007700610072006500
200075006e00640065007200200074006800650020004d00490054002000
4c006900630065006e00730065003b002000730065006500200065006d00
62006500640064006500640020006c006900630065006e00730065002000
6400650073006300720069007000740069006f006e00200066006f007200
2000640065007400610069006c0073002e0045004e004b004d004a004800
2b00430061006c00690062007200690052006500670075006c0061007200
45004e004b004d004a0048002b00430061006c0069006200720069004500
4e004b004d004a0048002b00430061006c00690062007200690045004e00
4b004d004a0048002b00430061006c006900620072006900430061006c00
690062007200690020006900730020006100200074007200610064006500
6d00610072006b0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000670072006f007500700020006f006600
200063006f006d00700061006e006900650073002e0000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[2153 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
4 982 1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>DHAAAA+Calibri AddT42Char 
4 382 24 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>DHAAAA+Calibri AddT42Char 
4 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>DHAAAA+Calibri AddT42Char 
DHAAAA+Calibri /CharStrings get begin
/zero 1004 def
/D 24 def
end
DHAAAA+Calibri /Encoding get
dup 48 /zero put
dup 68 /D put
pop
end
%ADOEndSubsetFont
/DKVNSO+Calibri /DHAAAA+Calibri findfont ct_VMDictPut
/DKVNSO+Calibri*1 
[48{/.notdef}rp /zero 19{/.notdef}rp /D 187{/.notdef}rp]
DKVNSO+Calibri nf
DKVNSO+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
99.0816 41.9484 mo
(D)sh
DKVNSO+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
106.435 43.6108 mo
(0)sh
117.114 84.7267 mo
117.114 76.9256 110.783 70.5952 102.918 70.5952 cv
95.1172 70.5952 88.7228 76.9256 88.7228 84.7267 cv
88.7228 92.5917 95.1172 98.9221 102.918 98.9221 cv
110.783 98.9221 117.114 92.5917 117.114 84.7267 cv
0 0 0 0 cmyk
ef
117.114 84.7267 mo
117.114 76.9256 110.783 70.5952 102.918 70.5952 cv
95.1172 70.5952 88.7228 76.9256 88.7228 84.7267 cv
88.7228 92.5917 95.1172 98.9221 102.918 98.9221 cv
110.783 98.9221 117.114 92.5917 117.114 84.7267 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DKVNSO+Calibri gcheck setglobal} if
4 1374 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>DKVNSO+Calibri AddT42Char 
DKVNSO+Calibri /CharStrings get begin
/one 1005 def
end
DKVNSO+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DKVNSO+Calibri*1 
[48{/.notdef}rp /zero /one 18{/.notdef}rp /D 187{/.notdef}rp]
DKVNSO+Calibri nf
DKVNSO+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
99.0816 87.1561 mo
(D)sh
DKVNSO+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
106.435 88.8188 mo
(1)sh
117.114 129.935 mo
117.114 122.133 110.783 115.739 102.918 115.739 cv
95.1172 115.739 88.7228 122.133 88.7228 129.935 cv
88.7228 137.736 95.1172 144.13 102.918 144.13 cv
110.783 144.13 117.114 137.736 117.114 129.935 cv
0 0 0 0 cmyk
ef
117.114 129.935 mo
117.114 122.133 110.783 115.739 102.918 115.739 cv
95.1172 115.739 88.7228 122.133 88.7228 129.935 cv
88.7228 137.736 95.1172 144.13 102.918 144.13 cv
110.783 144.13 117.114 137.736 117.114 129.935 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DKVNSO+Calibri gcheck setglobal} if
4 1778 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>DKVNSO+Calibri AddT42Char 
DKVNSO+Calibri /CharStrings get begin
/two 1006 def
end
DKVNSO+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DKVNSO+Calibri*1 
[48{/.notdef}rp /zero /one /two 17{/.notdef}rp /D 187{/.notdef}rp]
DKVNSO+Calibri nf
DKVNSO+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
99.0816 132.3 mo
(D)sh
DKVNSO+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
106.435 134.027 mo
(2)sh
117.114 209.672 mo
117.114 201.871 110.783 195.54 102.918 195.54 cv
95.1172 195.54 88.7228 201.871 88.7228 209.672 cv
88.7228 217.537 95.1172 223.867 102.918 223.867 cv
110.783 223.867 117.114 217.537 117.114 209.672 cv
0 0 0 0 cmyk
ef
117.114 209.672 mo
117.114 201.871 110.783 195.54 102.918 195.54 cv
95.1172 195.54 88.7228 201.871 88.7228 209.672 cv
88.7228 217.537 95.1172 223.867 102.918 223.867 cv
110.783 223.867 117.114 217.537 117.114 209.672 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DHAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DKVNSO+Calibri gcheck setglobal} if
4 632 282 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>DKVNSO+Calibri AddT42Char 
DKVNSO+Calibri /CharStrings get begin
/d 282 def
end
DKVNSO+Calibri /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DKVNSO+Calibri*1 
[48{/.notdef}rp /zero /one /two 17{/.notdef}rp /D 31{/.notdef}rp /d 
155{/.notdef}rp]
DKVNSO+Calibri nf
DKVNSO+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
95.8205 212.101 mo
(D)sh
DKVNSO+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
103.174 213.764 mo
(d)sh
%ADOBeginSubsetFont: AHAAAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (AHAAAA+Calibri)
%%Title: (AHAAAA+Calibri Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /AHAAAA+Calibri def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-503 -312 1240 1026} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6954 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D
629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55C
E7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /AHAAAA+Calibri-Identity-H /Identity-H 0 [/AHAAAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DKVNSP+Calibri /AHAAAA+Calibri-Identity-H findfont ct_VMDictPut
DKVNSP+Calibri [7.8011 0 0 -7.8008 0 0 ]msf
107.332 213.764 mo
(\003r)sh
DKVNSO+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
109.696 213.764 mo
(1)sh
.750267 lw
60.396 155.959 mo
71.0106 155.959 li
71.0106 39.5828 li
88.7228 39.5828 li
.75021 .679683 .670222 .90164 cmyk
@
60.396 155.959 mo
71.0106 155.959 li
71.0106 84.7267 li
88.7228 84.7267 li
@
60.396 155.959 mo
71.0106 155.959 li
71.0106 129.935 li
88.7228 129.935 li
@
60.396 155.959 mo
71.0106 155.959 li
71.0106 209.672 li
88.7228 209.672 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSQ+SimSun-GBK-EUC-V-Identity-V Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DKVNSQ+SimSun-GBK-EUC-V)
%%Title: (DKVNSQ+SimSun-GBK-EUC-V Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DKVNSQ+SimSun-GBK-EUC-V def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
17 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A3106439273
5D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495F
FF30BC926D91EE3877> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DKVNSQ+SimSun-GBK-EUC-V-Identity-V /Identity-V 1 [/DKVNSQ+SimSun-GBK-EUC-V] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DKVNSQ+SimSun-GBK-EUC-V-Identity-V findfont [0 12.0211 12.0213 0 0 0 ]msf
113.497 156.598 mo
(\000\021)sh
113.497 162.609 mo
(\000\021)sh
113.497 168.619 mo
(\000\021)sh
113.497 174.63 mo
(\000\021)sh
113.497 180.58 mo
(\000\021)sh
113.497 186.591 mo
(\000\021)sh
.499822 lw
117.114 84.7267 mo
122.805 84.7267 li
.75021 .679683 .670222 .90164 cmyk
@
117.114 129.935 mo
122.805 129.935 li
@
117.114 209.672 mo
122.805 209.672 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSN+SimSun-GBK-EUC-H 1 GetGlyphDirectory
17 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A3106439273
5D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495F
FF30BC926D91EE3877> |
!
end
end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
126.961 85.8774 mo
(\000\021\000\021\000\021)sh
126.961 130.704 mo
(\000\021\000\021\000\021)sh
126.961 210.5 mo
(\000\021\000\021\000\021)sh
.750267 lw
117.114 39.5828 mo
155.416 39.5828 li
155.416 145.728 li
.75021 .679683 .670222 .90164 cmyk
@
185.149 199.824 mo
458.25 199.824 li
461.384 199.824 463.941 197.267 463.941 194.133 cv
463.941 142.979 li
463.941 139.846 461.384 137.352 458.25 137.352 cv
185.149 137.352 li
182.016 137.352 179.458 139.846 179.458 142.979 cv
179.458 194.133 li
179.458 197.267 182.016 199.824 185.149 199.824 cv
0 0 0 0 cmyk
ef
.239787 lw
185.149 199.824 mo
458.25 199.824 li
461.384 199.824 463.941 197.267 463.941 194.133 cv
463.941 142.979 li
463.941 139.846 461.384 137.352 458.25 137.352 cv
185.149 137.352 li
182.016 137.352 179.458 139.846 179.458 142.979 cv
179.458 194.133 li
179.458 197.267 182.016 199.824 185.149 199.824 cv
cp
.428779 .108553 .795071 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSR+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DKVNSR+DengXian-GBK-EUC-H)
%%Title: (DKVNSR+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DKVNSR+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 15 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28629 <001C60D8A8C9B7ECD94E209CF2E001D5BD73F2D35607F6F9CFB8183DF
05975139416B10983007BAF37315FB80AF3F59A7AFD6F4F1B834AE085B526220
6D57D2525DF8F938763EDC8C63383C21ECDFE5092FB02C978A1A94F951D9B028
E65FC2284B0FFC51184F29C0959E7954453AB3D017B2FF221846C842BD6C3E1F
1DB394CFA79FF0D9FB9240F77F3981762AF037B68A10511FE361698819099> |
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
28595 <001C60D8A8C9B8581AA5> |
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28682 <001C60D8A8C9B6317D7763A655669C6E02448AAF388F9364FE21A14E5
285A2D62023D21C941644EE4B175DE88CF4C48ACE81BC234046568E7F7423114
120142242F4073B0692C01A1DF9EF591DB9537DD9975603936B7DBE5CAFE64FE
E70E042E0FC965DC960BE64BDF0895A91F4698C15> |
28681 <001C60D8A8C9B74969EE40BB25ABD91F8460DD23DB9B191A528027CD2
A43C92EB48C42770A0B496FFADA0F67DDBE4B6E31AA2489D103934A6C89> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DKVNSR+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/DKVNSR+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/DKVNSR+DengXian-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
186.172 152.378 mo
(o\325o\374p\007p\006o\370p\007p\006o\263o\374p\001o\263o\377p\002p\012o\263p\011o\364o\377p\010o\370o\263o\370p\001o\367)
[6.70915 2.68195 3.81186 4.8699 6.16821 3.81187 4.86989 3.32632 2.68195 6.60092 3.28305 2.68195 
6.87735 8.40405 3.32632 5.56473 6.01193 2.68195 6.61285 6.16821 3.28302 6.16821 6.60095 0 
]xsh
185.149 75.8386 mo
458.25 75.8386 li
461.384 75.8386 463.941 73.3448 463.941 70.2115 cv
463.941 8.37854 li
463.941 5.2453 461.384 2.68756 458.25 2.68756 cv
185.149 2.68756 li
182.016 2.68756 179.458 5.2453 179.458 8.37854 cv
179.458 70.2115 li
179.458 73.3448 182.016 75.8386 185.149 75.8386 cv
0 0 0 0 cmyk
ef
185.149 75.8386 mo
458.25 75.8386 li
461.384 75.8386 463.941 73.3448 463.941 70.2115 cv
463.941 8.37854 li
463.941 5.2453 461.384 2.68756 458.25 2.68756 cv
185.149 2.68756 li
182.016 2.68756 179.458 5.2453 179.458 8.37854 cv
179.458 70.2115 li
179.458 73.3448 182.016 75.8386 185.149 75.8386 cv
cp
.428779 .108553 .795071 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSR+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSR+DengXian-GBK-EUC-H 2 GetGlyphDirectory
28667 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C3C724D0F5C6BF169F72E1C71967F26B4562105E8A8583BC41A15D900A2B3
FFCE9F31BD4591CB25C31293EBF9381ACF282B598F9431868A2ECD743332A8F6
186BC7793F5EA54E68DE38FBB93> |
28666 <001C60D8A8C9B7FD849A70FBAF5CA9A13C8E26C143A1DF6AC1FE547EA
3C5232E736DB519B3D3AA4EEB5C6BE5BAE3CF35795226E06AD4DC645F74CE709
D6D91E4316CA064CD0C4D0AE7D15A7DAFFFD0C871FB60DBABB3A2AAE10728B75
305448C7B5C7B5F2A56A6D5ABB66520DBD6D65AA03F04B1782EFFFBBC14C56FE
36F36723CB545DCDED9B40F166550D83238B31668EF901F0353888C1B5A6781A
E1D7629C16539B99012D949BB473BAE8FE8799FB00BF6C746B0B7BB5491EAECF
A034F56A464F3951098755CEB00> |
!
end
end end
%ADOEndSubsetFont
/DKVNSR+DengXian-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
189.05 18.5452 mo
(o\325o\374p\007p\006o\370p\007p\006o\263o\374p\001o\263o\373o\374o\372o\373o\263p\011o\364o\377p\010o\370o\263o\370p\001o\367)
[6.71153 2.68433 3.81425 4.87228 6.17059 3.81425 4.87228 3.28543 2.68433 6.6033 3.28543 6.6033 
2.68433 6.89185 6.60333 3.2854 5.59354 6.01431 2.68433 6.61523 6.17059 3.28543 6.17062 6.6033 
0 ]xsh
.499822 lw
410.549 149.565 mo
410.549 155.831 li
434.655 155.831 li
434.655 149.437 li
.75021 .679683 .670222 .90164 cmyk
@
386.762 165.167 mo
386.762 171.434 li
434.655 171.434 li
434.655 165.103 li
@
264.567 190.681 mo
264.567 196.947 li
434.591 196.947 li
434.591 190.617 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSN+SimSun-GBK-EUC-H 1 GetGlyphDirectory
258 <001C60D8A8C9B5EE3102B97DA49B9C2565F96C92655401A57AAFA547FAD
B589897873059305223E2C41775B0F583433C64658E1B144B67EE6854F55B223
C3856A9158BC7D5DB6FE38E50B5F730AF4B06BAE2AA8A1A41407C8734F43BE3E
1390D92BFC39466E44971CE24916A34F3B46B526300E724AB9EAFC497462FE20
3B58E23AC12B8EF5340E96AFE817A6074E27701A50225B44BD2BFFA1A0C8C9EB
CFAE463E19964FDD8D4895384D52ED10C5231C422EA6C24E2D7FEBE1811012E7
B8BC8> |
!
end
end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
401.405 188.954 mo
(\001\002\001\002)
[12.0213 0 ]xsh
341.81 168.3 mo
341.043 171.753 li
341.298 171.817 341.618 171.817 341.938 171.817 cv
342.577 171.817 343.025 171.753 343.345 171.625 cv
343.664 171.434 343.92 171.178 344.176 170.858 cv
344.368 170.474 344.496 170.027 344.496 169.515 cv
344.496 169.132 344.368 168.812 344.112 168.556 cv
343.856 168.364 343.408 168.3 342.897 168.3 cv
cp
343.6 164.528 mo
343.281 164.528 342.961 164.528 342.641 164.528 cv
341.938 167.725 li
342.769 167.725 li
343.281 167.725 343.664 167.725 343.92 167.597 cv
344.24 167.533 344.496 167.405 344.687 167.213 cv
344.943 167.022 345.071 166.766 345.199 166.51 cv
345.263 166.318 345.327 165.998 345.327 165.679 cv
345.327 165.551 345.263 165.359 345.199 165.231 cv
345.199 165.039 345.071 164.911 344.943 164.847 cv
344.751 164.72 344.623 164.656 344.368 164.592 cv
344.176 164.528 343.92 164.528 343.6 164.528 cv
cp
340.851 163.952 mo
343.92 163.952 li
344.496 163.952 345.007 164.016 345.391 164.144 cv
345.774 164.272 346.03 164.464 346.222 164.72 cv
346.35 164.975 346.478 165.295 346.478 165.679 cv
346.478 166.19 346.286 166.702 345.966 167.085 cv
345.646 167.469 345.135 167.789 344.496 167.981 cv
344.496 168.045 li
344.879 168.236 345.135 168.428 345.391 168.684 cv
345.583 169.004 345.71 169.324 345.71 169.643 cv
345.71 170.219 345.583 170.666 345.327 171.05 cv
345.071 171.434 344.687 171.753 344.176 172.009 cv
343.664 172.201 342.961 172.329 342.002 172.329 cv
339.252 172.329 li
339.316 172.073 li
339.444 172.009 339.572 172.009 339.7 171.945 cv
339.764 171.881 339.828 171.817 339.892 171.689 cv
339.892 171.625 339.956 171.498 340.02 171.37 cv
340.083 171.178 340.147 170.922 340.211 170.538 cv
341.234 165.807 li
341.362 165.423 341.426 165.039 341.426 164.847 cv
341.426 164.656 341.362 164.464 341.234 164.4 cv
341.17 164.336 340.979 164.272 340.787 164.272 cv
.75021 .679683 .670222 .90164 cmyk
ef
349.036 166.446 mo
349.419 166.446 li
349.419 170.794 li
349.419 171.178 349.419 171.434 349.483 171.562 cv
349.483 171.689 349.547 171.817 349.675 171.881 cv
349.739 171.945 349.931 172.009 350.123 172.073 cv
350.123 172.329 li
347.693 172.329 li
347.693 172.073 li
347.885 172.009 347.948 171.945 348.076 171.945 cv
348.14 171.881 348.14 171.817 348.204 171.753 cv
348.268 171.689 348.332 171.625 348.332 171.498 cv
348.332 171.306 348.396 171.114 348.396 170.858 cv
348.396 168.173 li
348.396 167.917 348.332 167.661 348.332 167.533 cv
348.332 167.341 348.332 167.213 348.268 167.149 cv
348.204 167.022 348.14 166.958 348.076 166.958 cv
347.948 166.894 347.821 166.83 347.629 166.83 cv
347.629 166.51 li
cp
348.332 164.08 mo
349.483 164.08 li
349.483 165.295 li
348.332 165.295 li
cp
ef
365.405 166.894 mo
365.021 166.894 364.638 167.086 364.254 167.469 cv
363.87 167.917 363.551 168.492 363.359 169.196 cv
363.934 169.196 364.446 169.132 364.829 169.004 cv
365.213 168.94 365.533 168.748 365.789 168.556 cv
365.98 168.3 366.108 168.045 366.108 167.661 cv
366.108 167.405 366.044 167.213 365.917 167.086 cv
365.853 166.958 365.661 166.894 365.405 166.894 cv
cp
359.011 166.382 mo
359.394 166.382 359.714 166.382 360.034 166.446 cv
360.353 166.51 360.673 166.574 360.993 166.702 cv
360.737 167.981 li
360.226 167.981 li
360.162 167.597 360.034 167.341 359.842 167.149 cv
359.65 166.958 359.33 166.894 358.947 166.894 cv
358.627 166.894 358.371 166.958 358.179 167.086 cv
357.924 167.277 357.86 167.469 357.86 167.789 cv
357.86 167.917 357.86 168.045 357.924 168.173 cv
357.988 168.3 358.115 168.364 358.243 168.556 cv
358.371 168.684 358.627 168.812 358.947 169.004 cv
359.202 169.196 359.458 169.324 359.586 169.451 cv
359.714 169.579 359.842 169.707 359.97 169.835 cv
360.034 169.963 360.098 170.091 360.162 170.219 cv
360.226 170.347 360.226 170.538 360.226 170.73 cv
360.226 171.114 360.098 171.434 359.906 171.689 cv
359.714 171.945 359.458 172.137 359.139 172.265 cv
358.819 172.393 358.435 172.457 357.988 172.457 cv
357.668 172.457 357.348 172.457 356.964 172.393 cv
356.645 172.329 356.325 172.265 355.877 172.137 cv
356.197 170.794 li
356.645 170.794 li
356.709 171.178 356.773 171.498 357.028 171.689 cv
357.22 171.881 357.54 171.945 357.988 171.945 cv
358.371 171.945 358.691 171.881 358.883 171.689 cv
359.139 171.562 359.202 171.306 359.202 170.986 cv
359.202 170.794 359.202 170.602 359.139 170.474 cv
359.075 170.347 358.947 170.219 358.819 170.091 cv
358.691 169.963 358.435 169.835 358.179 169.643 cv
357.86 169.451 357.604 169.26 357.412 169.132 cv
357.22 169.004 357.092 168.812 357.028 168.62 cv
356.901 168.428 356.901 168.236 356.901 167.981 cv
356.901 167.661 356.964 167.405 357.156 167.149 cv
357.284 166.894 357.54 166.702 357.86 166.574 cv
358.179 166.446 358.563 166.382 359.011 166.382 cv
cp
365.661 166.382 mo
366.108 166.382 366.492 166.51 366.748 166.702 cv
367.004 166.894 367.131 167.213 367.131 167.597 cv
367.131 168.3 366.812 168.812 366.172 169.196 cv
365.469 169.515 364.51 169.707 363.231 169.707 cv
363.167 169.963 363.167 170.219 363.167 170.474 cv
363.167 170.922 363.231 171.242 363.423 171.434 cv
363.615 171.625 363.87 171.753 364.254 171.753 cv
364.638 171.753 364.957 171.625 365.277 171.498 cv
365.597 171.306 365.917 171.05 366.236 170.73 cv
366.62 171.114 li
366.236 171.562 365.789 171.881 365.405 172.137 cv
365.021 172.329 364.51 172.457 363.998 172.457 cv
363.359 172.457 362.911 172.265 362.591 171.881 cv
362.272 171.562 362.144 171.05 362.144 170.411 cv
362.144 169.963 362.208 169.515 362.336 169.004 cv
362.528 168.492 362.719 168.045 363.039 167.661 cv
363.359 167.213 363.742 166.958 364.19 166.702 cv
364.638 166.51 365.149 166.382 365.661 166.382 cv
cp
370.137 164.975 mo
371.032 164.975 li
370.648 166.51 li
372.567 166.51 li
372.375 167.086 li
370.52 167.086 li
370.009 169.515 li
369.881 169.963 369.817 170.283 369.817 170.474 cv
369.753 170.666 369.753 170.858 369.753 170.986 cv
369.753 171.498 369.945 171.753 370.393 171.753 cv
370.584 171.753 370.776 171.689 370.968 171.498 cv
371.16 171.37 371.416 171.178 371.671 170.794 cv
372.055 171.178 li
371.671 171.625 371.352 171.945 371.032 172.137 cv
370.648 172.329 370.329 172.457 369.945 172.457 cv
369.114 172.457 368.666 172.009 368.666 171.178 cv
368.666 170.858 368.73 170.602 368.794 170.283 cv
369.497 167.086 li
368.474 167.086 li
368.602 166.702 li
368.794 166.702 368.986 166.638 369.114 166.638 cv
369.242 166.574 369.369 166.574 369.433 166.51 cv
369.497 166.446 369.625 166.382 369.689 166.254 cv
369.753 166.126 369.817 165.998 369.881 165.871 cv
369.945 165.679 370.009 165.359 370.137 164.975 cv
cp
353.064 164.975 mo
353.895 164.975 li
353.575 166.51 li
355.43 166.51 li
355.302 167.086 li
353.448 167.086 li
352.872 169.515 li
352.808 169.963 352.744 170.283 352.68 170.474 cv
352.68 170.666 352.68 170.858 352.68 170.986 cv
352.68 171.498 352.872 171.753 353.256 171.753 cv
353.448 171.753 353.639 171.689 353.831 171.498 cv
354.087 171.37 354.279 171.178 354.599 170.794 cv
354.918 171.178 li
354.599 171.625 354.215 171.945 353.895 172.137 cv
353.575 172.329 353.256 172.457 352.872 172.457 cv
352.041 172.457 351.593 172.009 351.593 171.178 cv
351.593 170.858 351.593 170.602 351.721 170.283 cv
352.424 167.086 li
351.401 167.086 li
351.465 166.702 li
351.721 166.702 351.913 166.638 352.041 166.638 cv
352.169 166.574 352.233 166.574 352.361 166.51 cv
352.424 166.446 352.488 166.382 352.552 166.254 cv
352.616 166.126 352.68 165.998 352.744 165.871 cv
352.808 165.679 352.936 165.359 353.064 164.975 cv
ef
376.083 161.97 mo
376.403 161.97 li
376.403 162.098 376.403 162.29 376.403 162.418 cv
376.403 162.546 376.339 162.673 376.339 162.801 cv
376.339 162.865 376.339 162.993 376.339 163.121 cv
376.339 166.51 li
376.339 166.638 376.339 166.702 376.403 166.766 cv
376.403 166.83 376.403 166.894 376.403 166.958 cv
376.403 166.958 376.467 167.022 376.467 167.085 cv
376.531 167.149 li
376.595 167.149 376.595 167.213 376.659 167.213 cv
376.723 167.213 376.787 167.277 376.915 167.277 cv
376.979 167.277 377.107 167.277 377.234 167.277 cv
377.362 167.341 377.554 167.341 377.682 167.341 cv
377.682 167.725 li
374.165 167.725 li
374.165 167.341 li
374.357 167.341 374.485 167.277 374.613 167.277 cv
374.741 167.277 374.805 167.277 374.932 167.277 cv
374.996 167.277 375.06 167.213 375.124 167.213 cv
375.188 167.213 375.252 167.213 375.252 167.149 cv
375.316 167.149 375.316 167.085 375.38 167.085 cv
375.38 167.022 375.444 167.022 375.444 166.958 cv
375.444 166.894 375.508 166.83 375.508 166.766 cv
375.508 166.702 375.508 166.638 375.508 166.51 cv
375.508 163.313 li
375.508 163.185 375.508 163.121 375.444 163.057 cv
375.38 163.057 375.316 162.993 375.252 162.993 cv
375.124 162.993 374.996 163.057 374.805 163.185 cv
374.677 163.249 374.421 163.377 374.101 163.569 cv
374.101 163.505 374.037 163.441 374.037 163.377 cv
373.973 163.313 373.973 163.249 373.909 163.185 cv
374.293 162.929 374.677 162.737 374.996 162.546 cv
375.38 162.354 375.764 162.162 376.083 161.97 cv
ef
365.725 152.698 mo
364.957 156.407 li
365.213 156.407 365.533 156.407 365.917 156.407 cv
366.556 156.407 367.067 156.343 367.387 156.215 cv
367.707 156.023 368.027 155.768 368.218 155.384 cv
368.474 155 368.602 154.553 368.602 153.977 cv
368.602 153.594 368.474 153.21 368.155 153.018 cv
367.899 152.826 367.451 152.698 366.876 152.698 cv
cp
367.643 148.734 mo
367.259 148.734 366.94 148.734 366.62 148.734 cv
365.853 152.123 li
366.812 152.123 li
367.323 152.123 367.707 152.059 368.027 151.995 cv
368.282 151.931 368.602 151.739 368.794 151.547 cv
369.05 151.355 369.178 151.1 369.305 150.844 cv
369.433 150.588 369.433 150.332 369.433 150.013 cv
369.433 149.821 369.433 149.629 369.369 149.437 cv
369.305 149.309 369.178 149.181 369.05 149.054 cv
368.858 148.926 368.666 148.862 368.474 148.798 cv
368.282 148.734 368.027 148.734 367.643 148.734 cv
cp
364.766 148.158 mo
367.963 148.158 li
368.602 148.158 369.114 148.222 369.497 148.35 cv
369.881 148.478 370.201 148.67 370.393 148.99 cv
370.584 149.245 370.648 149.565 370.648 149.949 cv
370.648 150.524 370.456 151.036 370.137 151.419 cv
369.817 151.867 369.305 152.187 368.602 152.379 cv
368.602 152.443 li
368.986 152.634 369.305 152.826 369.497 153.146 cv
369.753 153.466 369.817 153.785 369.817 154.169 cv
369.817 154.744 369.689 155.256 369.433 155.64 cv
369.178 156.023 368.794 156.343 368.218 156.599 cv
367.707 156.855 366.94 156.982 365.917 156.982 cv
363.039 156.982 li
363.103 156.663 li
363.295 156.663 363.423 156.599 363.487 156.535 cv
363.551 156.471 363.615 156.407 363.678 156.279 cv
363.742 156.215 363.806 156.087 363.87 155.959 cv
363.87 155.768 363.998 155.512 364.062 155.064 cv
365.149 150.077 li
365.277 149.629 365.341 149.309 365.341 149.054 cv
365.341 148.862 365.277 148.67 365.149 148.606 cv
365.085 148.542 364.893 148.478 364.702 148.478 cv
ef
373.398 150.716 mo
373.782 150.716 li
373.782 155.384 li
373.782 155.768 373.782 156.023 373.845 156.151 cv
373.845 156.279 373.909 156.407 374.037 156.471 cv
374.165 156.535 374.293 156.599 374.485 156.663 cv
374.485 156.982 li
371.991 156.982 li
371.991 156.663 li
372.119 156.599 372.247 156.599 372.311 156.535 cv
372.375 156.535 372.439 156.471 372.503 156.407 cv
372.567 156.343 372.631 156.215 372.631 156.087 cv
372.631 155.895 372.694 155.704 372.694 155.384 cv
372.694 152.57 li
372.694 152.315 372.694 152.059 372.631 151.931 cv
372.631 151.739 372.631 151.611 372.567 151.483 cv
372.503 151.419 372.439 151.355 372.311 151.292 cv
372.247 151.228 372.055 151.164 371.863 151.164 cv
371.863 150.78 li
cp
372.631 148.286 mo
373.845 148.286 li
373.845 149.501 li
372.631 149.501 li
cp
ef
390.663 151.228 mo
390.215 151.228 389.831 151.419 389.448 151.867 cv
389 152.315 388.68 152.89 388.488 153.657 cv
389.064 153.657 389.639 153.593 390.087 153.466 cv
390.471 153.402 390.854 153.21 391.046 152.954 cv
391.302 152.762 391.43 152.443 391.43 152.059 cv
391.43 151.803 391.366 151.611 391.238 151.419 cv
391.11 151.292 390.918 151.228 390.663 151.228 cv
cp
383.885 150.716 mo
384.332 150.716 384.716 150.716 385.035 150.78 cv
385.355 150.844 385.675 150.908 385.995 151.036 cv
385.739 152.379 li
385.163 152.379 li
385.163 151.995 385.035 151.675 384.78 151.483 cv
384.588 151.292 384.268 151.228 383.821 151.228 cv
383.501 151.228 383.245 151.292 382.989 151.483 cv
382.797 151.675 382.67 151.867 382.67 152.187 cv
382.67 152.315 382.734 152.443 382.797 152.57 cv
382.797 152.698 382.925 152.826 383.117 152.954 cv
383.245 153.082 383.501 153.274 383.885 153.466 cv
384.14 153.657 384.332 153.785 384.524 153.913 cv
384.652 154.041 384.844 154.233 384.908 154.361 cv
385.035 154.489 385.099 154.617 385.099 154.744 cv
385.163 154.936 385.163 155.064 385.163 155.32 cv
385.163 155.704 385.099 156.023 384.844 156.279 cv
384.652 156.599 384.396 156.791 384.012 156.919 cv
383.693 157.046 383.309 157.11 382.861 157.11 cv
382.478 157.11 382.094 157.11 381.774 157.046 cv
381.455 156.982 381.071 156.855 380.623 156.727 cv
380.943 155.32 li
381.455 155.32 li
381.455 155.768 381.583 156.087 381.774 156.279 cv
382.03 156.471 382.35 156.599 382.797 156.599 cv
383.245 156.599 383.565 156.471 383.757 156.343 cv
384.012 156.151 384.14 155.895 384.14 155.512 cv
384.14 155.32 384.076 155.192 384.012 155.064 cv
383.948 154.872 383.885 154.744 383.693 154.617 cv
383.565 154.489 383.309 154.361 382.989 154.169 cv
382.67 153.913 382.414 153.785 382.222 153.593 cv
382.03 153.402 381.902 153.274 381.774 153.082 cv
381.71 152.89 381.647 152.634 381.647 152.379 cv
381.647 152.059 381.774 151.739 381.902 151.483 cv
382.094 151.228 382.35 151.036 382.734 150.908 cv
383.053 150.78 383.437 150.716 383.885 150.716 cv
cp
390.918 150.716 mo
391.43 150.716 391.813 150.78 392.069 151.036 cv
392.325 151.228 392.453 151.547 392.453 151.995 cv
392.453 152.762 392.133 153.274 391.43 153.657 cv
390.726 154.041 389.703 154.233 388.361 154.233 cv
388.297 154.489 388.297 154.744 388.297 155.064 cv
388.297 155.512 388.361 155.831 388.552 156.023 cv
388.744 156.215 389 156.343 389.448 156.343 cv
389.831 156.343 390.215 156.279 390.535 156.087 cv
390.854 155.895 391.174 155.64 391.558 155.256 cv
391.941 155.704 li
391.494 156.151 391.11 156.535 390.663 156.727 cv
390.215 156.982 389.703 157.11 389.128 157.11 cv
388.552 157.11 388.041 156.919 387.721 156.535 cv
387.337 156.151 387.21 155.64 387.21 154.936 cv
387.21 154.489 387.274 153.977 387.465 153.466 cv
387.593 152.89 387.849 152.443 388.169 151.995 cv
388.552 151.611 388.936 151.292 389.384 151.036 cv
389.895 150.78 390.407 150.716 390.918 150.716 cv
cp
395.714 149.181 mo
396.609 149.181 li
396.226 150.78 li
398.208 150.78 li
398.08 151.483 li
396.098 151.483 li
395.522 153.977 li
395.394 154.489 395.33 154.808 395.266 155 cv
395.266 155.256 395.266 155.384 395.266 155.512 cv
395.266 156.087 395.458 156.343 395.906 156.343 cv
396.098 156.343 396.29 156.279 396.545 156.151 cv
396.737 155.959 396.993 155.704 397.313 155.384 cv
397.632 155.768 li
397.313 156.215 396.929 156.535 396.545 156.791 cv
396.226 156.982 395.842 157.11 395.458 157.11 cv
394.563 157.11 394.115 156.663 394.115 155.704 cv
394.115 155.448 394.179 155.128 394.243 154.808 cv
395.011 151.483 li
393.924 151.483 li
393.988 151.036 li
394.243 151.036 394.435 150.972 394.563 150.972 cv
394.691 150.908 394.819 150.844 394.947 150.844 cv
395.011 150.78 395.075 150.652 395.139 150.524 cv
395.266 150.46 395.33 150.268 395.394 150.141 cv
395.458 149.949 395.522 149.629 395.714 149.181 cv
cp
377.618 149.181 mo
378.513 149.181 li
378.194 150.78 li
380.112 150.78 li
379.984 151.483 li
378.002 151.483 li
377.426 153.977 li
377.362 154.489 377.298 154.808 377.234 155 cv
377.234 155.256 377.171 155.384 377.171 155.512 cv
377.171 156.087 377.426 156.343 377.874 156.343 cv
378.066 156.343 378.258 156.279 378.449 156.151 cv
378.705 155.959 378.961 155.704 379.217 155.384 cv
379.6 155.768 li
379.217 156.215 378.897 156.535 378.513 156.791 cv
378.194 156.982 377.81 157.11 377.426 157.11 cv
376.531 157.11 376.083 156.663 376.083 155.704 cv
376.083 155.448 376.083 155.128 376.211 154.808 cv
376.915 151.483 li
375.828 151.483 li
375.956 151.036 li
376.211 151.036 376.403 150.972 376.531 150.972 cv
376.659 150.908 376.787 150.844 376.851 150.844 cv
376.979 150.78 377.043 150.652 377.107 150.524 cv
377.171 150.46 377.234 150.268 377.298 150.141 cv
377.362 149.949 377.49 149.629 377.618 149.181 cv
ef
401.853 146.432 mo
401.661 146.432 401.469 146.496 401.341 146.624 cv
401.149 146.752 401.085 146.879 400.957 147.135 cv
400.893 147.327 400.829 147.647 400.766 147.903 cv
400.766 148.222 400.702 148.606 400.702 148.99 cv
400.702 149.501 400.766 149.885 400.829 150.204 cv
400.829 150.588 400.893 150.844 401.021 151.1 cv
401.085 151.292 401.213 151.483 401.341 151.547 cv
401.533 151.675 401.661 151.739 401.917 151.739 cv
402.108 151.739 402.236 151.675 402.364 151.547 cv
402.556 151.483 402.62 151.292 402.748 151.1 cv
402.812 150.908 402.876 150.652 402.94 150.332 cv
403.004 150.013 403.004 149.629 403.004 149.245 cv
403.004 148.734 403.004 148.286 402.94 147.966 cv
402.876 147.647 402.812 147.327 402.748 147.135 cv
402.62 146.879 402.492 146.688 402.364 146.624 cv
402.236 146.496 402.044 146.432 401.853 146.432 cv
cp
401.917 145.984 mo
402.236 145.984 402.556 146.048 402.876 146.176 cv
403.131 146.368 403.323 146.56 403.515 146.816 cv
403.643 147.071 403.771 147.391 403.899 147.775 cv
403.963 148.094 404.027 148.542 404.027 148.99 cv
404.027 150.077 403.835 150.844 403.451 151.419 cv
403.068 151.931 402.556 152.187 401.853 152.187 cv
401.149 152.187 400.574 151.931 400.254 151.419 cv
399.934 150.908 399.742 150.141 399.742 149.117 cv
399.742 148.606 399.806 148.158 399.934 147.711 cv
399.998 147.327 400.19 147.007 400.382 146.752 cv
400.574 146.496 400.766 146.304 401.021 146.176 cv
401.277 146.048 401.597 145.984 401.917 145.984 cv
ef
265.462 30.2471 mo
265.462 36.5135 li
289.568 36.5135 li
289.568 30.1192 li
@
265.462 43.4833 mo
265.462 49.7498 li
313.419 49.7498 li
313.419 43.3555 li
@
265.462 66.6307 mo
265.462 72.8972 li
435.551 72.8972 li
435.551 66.5029 li
@
1 /0 /CSD get_res sepcs
1 sep
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
272.687 63.817 mo
(\001\002\001\002)
[12.0213 0 ]xsh
.750267 lw
117.114 39.5828 mo
155.416 39.5828 li
155.416 168.556 li
179.458 168.556 li
.75021 .679683 .670222 .90164 cmyk
@
117.114 39.5828 mo
179.458 39.2631 li
@
323.906 46.5526 mo
323.139 50.0695 li
323.394 50.1334 323.65 50.1334 324.034 50.1334 cv
324.673 50.1334 325.121 50.0695 325.44 49.8777 cv
325.76 49.7498 326.016 49.494 326.272 49.1743 cv
326.464 48.7906 326.591 48.343 326.591 47.8315 cv
326.591 47.3839 326.464 47.1281 326.208 46.8723 cv
325.888 46.6805 325.504 46.5526 324.993 46.5526 cv
cp
325.696 42.8439 mo
325.377 42.8439 324.993 42.8439 324.737 42.8439 cv
324.034 46.0411 li
324.865 46.0411 li
325.377 46.0411 325.76 45.9771 326.016 45.9132 cv
326.336 45.8492 326.591 45.7214 326.783 45.5295 cv
326.975 45.3377 327.167 45.0819 327.231 44.8262 cv
327.359 44.6343 327.423 44.3146 327.423 43.9949 cv
327.423 43.867 327.359 43.6752 327.295 43.5473 cv
327.231 43.3555 327.167 43.2275 326.975 43.0997 cv
326.847 43.0358 326.655 42.9718 326.464 42.9078 cv
326.272 42.8439 326.016 42.8439 325.696 42.8439 cv
cp
322.947 42.2684 mo
325.952 42.2684 li
326.591 42.2684 327.103 42.3323 327.487 42.4603 cv
327.806 42.5881 328.126 42.78 328.254 43.0358 cv
328.446 43.2915 328.51 43.6112 328.51 43.9949 cv
328.51 44.5064 328.382 45.018 328.062 45.4016 cv
327.742 45.7853 327.231 46.105 326.591 46.2968 cv
326.591 46.3608 li
326.975 46.5526 327.231 46.7444 327.423 47.0002 cv
327.678 47.3199 327.742 47.6396 327.742 47.9594 cv
327.742 48.5349 327.615 48.9825 327.359 49.3661 cv
327.103 49.7498 326.783 50.0695 326.272 50.3253 cv
325.76 50.5171 325.057 50.645 324.098 50.645 cv
321.348 50.645 li
321.412 50.3253 li
321.54 50.3253 321.668 50.2613 321.732 50.2613 cv
321.86 50.1974 321.924 50.1334 321.924 50.0056 cv
321.988 49.8777 322.052 49.8137 322.115 49.6219 cv
322.115 49.494 322.179 49.2382 322.307 48.8546 cv
323.33 44.1227 li
323.458 43.6752 323.458 43.3555 323.458 43.1636 cv
323.458 42.9718 323.458 42.78 323.33 42.716 cv
323.266 42.6521 323.075 42.5881 322.883 42.5881 cv
ef
331.131 44.7622 mo
331.515 44.7622 li
331.515 49.1104 li
331.515 49.494 331.515 49.7498 331.579 49.8777 cv
331.579 50.0056 331.643 50.0695 331.771 50.1974 cv
331.835 50.2613 331.963 50.3253 332.218 50.3253 cv
332.218 50.645 li
329.789 50.645 li
329.789 50.3253 li
329.916 50.3253 330.044 50.2613 330.108 50.1974 cv
330.172 50.1974 330.236 50.1334 330.3 50.0695 cv
330.364 50.0056 330.364 49.8777 330.428 49.7498 cv
330.428 49.6219 330.428 49.4301 330.428 49.1104 cv
330.428 46.4886 li
330.428 46.2329 330.428 45.9771 330.428 45.8492 cv
330.428 45.6574 330.428 45.5295 330.364 45.4656 cv
330.3 45.3377 330.236 45.2737 330.108 45.2098 cv
330.044 45.2098 329.853 45.1459 329.725 45.1459 cv
329.725 44.8262 li
cp
330.428 42.3963 mo
331.515 42.3963 li
331.515 43.6112 li
330.428 43.6112 li
cp
ef
347.501 45.1459 mo
347.117 45.1459 346.67 45.4017 346.286 45.7853 cv
345.902 46.2329 345.647 46.8084 345.455 47.5118 cv
346.03 47.5118 346.478 47.4478 346.925 47.3199 cv
347.309 47.256 347.629 47.0641 347.885 46.8723 cv
348.076 46.6166 348.204 46.3608 348.204 45.9771 cv
348.204 45.7214 348.14 45.5295 348.012 45.4017 cv
347.885 45.2737 347.757 45.1459 347.501 45.1459 cv
cp
341.107 44.6982 mo
341.49 44.6982 341.81 44.6982 342.13 44.7622 cv
342.449 44.8262 342.769 44.8901 343.089 45.018 cv
342.769 46.2969 li
342.321 46.2969 li
342.258 45.9132 342.13 45.6574 341.938 45.4656 cv
341.746 45.2737 341.426 45.1459 341.043 45.1459 cv
340.723 45.1459 340.467 45.2737 340.211 45.4017 cv
340.02 45.5935 339.956 45.7853 339.956 46.105 cv
339.956 46.2329 339.956 46.3608 340.02 46.4887 cv
340.083 46.5526 340.147 46.6805 340.339 46.8084 cv
340.467 47.0002 340.723 47.1281 341.043 47.3199 cv
341.298 47.5118 341.49 47.6396 341.682 47.7675 cv
341.81 47.8954 341.938 48.0233 342.066 48.1512 cv
342.13 48.2791 342.194 48.407 342.258 48.5349 cv
342.258 48.6627 342.321 48.8546 342.321 49.0464 cv
342.321 49.4301 342.194 49.7498 342.002 50.0056 cv
341.81 50.2614 341.554 50.4532 341.234 50.5811 cv
340.851 50.7089 340.467 50.7729 340.083 50.7729 cv
339.7 50.7729 339.38 50.7089 339.06 50.7089 cv
338.741 50.645 338.357 50.5171 337.973 50.4532 cv
338.293 49.1104 li
338.741 49.1104 li
338.741 49.494 338.869 49.7498 339.06 50.0056 cv
339.316 50.1974 339.636 50.2614 340.083 50.2614 cv
340.467 50.2614 340.723 50.1974 340.979 50.0056 cv
341.17 49.8137 341.298 49.6219 341.298 49.3022 cv
341.298 49.1104 341.298 48.9185 341.234 48.7906 cv
341.17 48.6627 341.043 48.5349 340.915 48.407 cv
340.787 48.2791 340.531 48.1512 340.211 47.9594 cv
339.956 47.7675 339.7 47.5757 339.508 47.4478 cv
339.316 47.256 339.188 47.1281 339.124 46.9363 cv
338.996 46.7444 338.932 46.5526 338.932 46.2969 cv
338.932 45.9771 339.06 45.7214 339.188 45.4656 cv
339.38 45.2098 339.636 45.018 339.956 44.8901 cv
340.275 44.7622 340.659 44.6982 341.107 44.6982 cv
cp
347.693 44.6982 mo
348.204 44.6982 348.588 44.7622 348.844 45.018 cv
349.099 45.2098 349.227 45.5295 349.227 45.9132 cv
349.227 46.6166 348.908 47.1281 348.204 47.5118 cv
347.565 47.8315 346.606 48.0233 345.327 48.0233 cv
345.263 48.2791 345.263 48.5349 345.263 48.7906 cv
345.263 49.2382 345.327 49.558 345.519 49.7498 cv
345.647 49.9416 345.966 50.0056 346.35 50.0056 cv
346.67 50.0056 347.053 49.9416 347.373 49.8137 cv
347.629 49.6219 347.948 49.3661 348.332 49.0464 cv
348.716 49.4301 li
348.268 49.8777 347.885 50.1974 347.501 50.4532 cv
347.053 50.645 346.606 50.7729 346.094 50.7729 cv
345.455 50.7729 345.007 50.5811 344.687 50.1974 cv
344.368 49.8777 344.176 49.3661 344.176 48.7267 cv
344.176 48.2791 344.304 47.7675 344.432 47.3199 cv
344.559 46.8084 344.815 46.3608 345.135 45.9132 cv
345.455 45.5295 345.838 45.2098 346.286 45.018 cv
346.734 44.8262 347.245 44.6982 347.693 44.6982 cv
cp
352.233 43.2915 mo
353.064 43.2915 li
352.744 44.8262 li
354.599 44.8262 li
354.471 45.4017 li
352.616 45.4017 li
352.041 47.7675 li
351.977 48.2791 351.913 48.5988 351.849 48.7906 cv
351.849 48.9825 351.849 49.1743 351.849 49.3022 cv
351.849 49.8137 352.041 50.0056 352.488 50.0056 cv
352.616 50.0056 352.808 49.9416 353.064 49.8137 cv
353.256 49.6859 353.448 49.4301 353.767 49.1104 cv
354.087 49.494 li
353.767 49.9416 353.384 50.2614 353.064 50.4532 cv
352.744 50.645 352.424 50.7729 352.041 50.7729 cv
351.21 50.7729 350.762 50.3253 350.762 49.4301 cv
350.762 49.1743 350.826 48.9185 350.89 48.5988 cv
351.593 45.4017 li
350.57 45.4017 li
350.634 45.018 li
350.89 45.018 351.082 44.954 351.21 44.954 cv
351.337 44.8901 351.401 44.8901 351.529 44.8262 cv
351.593 44.7622 351.657 44.6343 351.721 44.5704 cv
351.785 44.4425 351.913 44.3146 351.977 44.1228 cv
352.041 43.9949 352.105 43.6752 352.233 43.2915 cv
cp
335.16 43.2915 mo
335.991 43.2915 li
335.671 44.8262 li
337.526 44.8262 li
337.398 45.4017 li
335.543 45.4017 li
334.968 47.7675 li
334.84 48.2791 334.776 48.5988 334.776 48.7906 cv
334.712 48.9825 334.712 49.1743 334.712 49.3022 cv
334.712 49.8137 334.968 50.0056 335.352 50.0056 cv
335.543 50.0056 335.735 49.9416 335.927 49.8137 cv
336.119 49.6859 336.375 49.4301 336.631 49.1104 cv
337.014 49.494 li
336.631 49.9416 336.311 50.2614 335.991 50.4532 cv
335.671 50.645 335.288 50.7729 334.968 50.7729 cv
334.073 50.7729 333.689 50.3253 333.689 49.4301 cv
333.689 49.1743 333.689 48.9185 333.753 48.5988 cv
334.52 45.4017 li
333.433 45.4017 li
333.561 45.018 li
333.817 45.018 334.009 44.954 334.137 44.954 cv
334.201 44.8901 334.329 44.8901 334.393 44.8262 cv
334.52 44.7622 334.584 44.6343 334.648 44.5704 cv
334.712 44.4425 334.776 44.3146 334.84 44.1228 cv
334.904 43.9949 335.032 43.6752 335.16 43.2915 cv
ef
358.179 40.2862 mo
358.499 40.2862 li
358.435 40.4141 358.435 40.6059 358.435 40.7338 cv
358.435 40.8617 358.435 40.9896 358.435 41.0535 cv
358.435 41.1814 358.435 41.3093 358.435 41.4372 cv
358.435 44.8262 li
358.435 44.954 358.435 45.018 358.435 45.0819 cv
358.435 45.1459 358.499 45.2098 358.499 45.2737 cv
358.499 45.2737 358.499 45.3377 358.563 45.3377 cv
358.563 45.4017 358.563 45.4017 358.627 45.4656 cv
358.627 45.4656 358.691 45.5295 358.755 45.5295 cv
358.819 45.5295 358.883 45.5935 359.011 45.5935 cv
359.075 45.5935 359.202 45.5935 359.33 45.5935 cv
359.458 45.5935 359.586 45.5935 359.778 45.6574 cv
359.778 46.0411 li
356.261 46.0411 li
356.261 45.6574 li
356.389 45.5935 356.581 45.5935 356.709 45.5935 cv
356.837 45.5935 356.9 45.5935 357.028 45.5935 cv
357.092 45.5935 357.156 45.5295 357.22 45.5295 cv
357.284 45.5295 357.284 45.4656 357.348 45.4656 cv
357.412 45.4656 357.412 45.4017 357.476 45.4017 cv
357.476 45.3377 357.476 45.3377 357.54 45.2737 cv
357.54 45.2098 357.54 45.1459 357.54 45.0819 cv
357.604 45.018 357.604 44.954 357.604 44.8262 cv
357.604 41.629 li
357.604 41.5011 357.54 41.4372 357.54 41.3732 cv
357.476 41.3732 357.412 41.3093 357.348 41.3093 cv
357.22 41.3093 357.092 41.3732 356.9 41.4372 cv
356.709 41.5651 356.517 41.6929 356.197 41.8848 cv
356.197 41.8208 356.133 41.7569 356.069 41.6929 cv
356.069 41.629 356.005 41.5651 356.005 41.5011 cv
356.389 41.2454 356.709 41.0535 357.092 40.8617 cv
357.476 40.6699 357.796 40.478 358.179 40.2862 cv
ef
299.991 31.6538 mo
299.224 35.3625 li
299.48 35.3625 299.799 35.3625 300.183 35.3625 cv
300.822 35.3625 301.27 35.2986 301.59 35.1068 cv
301.909 34.9789 302.229 34.7231 302.421 34.3394 cv
302.677 33.9557 302.805 33.5082 302.805 32.9327 cv
302.805 32.485 302.613 32.1653 302.357 31.9735 cv
302.101 31.7178 301.654 31.6538 301.078 31.6538 cv
cp
301.845 27.6893 mo
301.526 27.6893 301.142 27.6893 300.822 27.6893 cv
300.119 31.0783 li
301.014 31.0783 li
301.526 31.0783 301.909 31.0144 302.229 30.9504 cv
302.485 30.8226 302.741 30.6946 302.996 30.5028 cv
303.188 30.2471 303.38 30.0552 303.444 29.7994 cv
303.572 29.5437 303.636 29.2239 303.636 28.9042 cv
303.636 28.7124 303.572 28.5845 303.508 28.3927 cv
303.444 28.2648 303.38 28.073 303.188 28.009 cv
303.06 27.8812 302.869 27.7533 302.677 27.7533 cv
302.485 27.6893 302.229 27.6893 301.845 27.6893 cv
cp
299.032 27.1138 mo
302.165 27.1138 li
302.805 27.1138 303.316 27.1778 303.7 27.3057 cv
304.083 27.4335 304.339 27.6254 304.531 27.8812 cv
304.723 28.137 304.787 28.4567 304.787 28.9042 cv
304.787 29.4797 304.595 29.9274 304.275 30.3749 cv
303.956 30.7586 303.444 31.0783 302.805 31.3341 cv
302.741 31.398 li
303.188 31.5898 303.444 31.7817 303.7 32.1014 cv
303.892 32.3572 303.956 32.7408 303.956 33.0605 cv
303.956 33.636 303.828 34.1476 303.572 34.5952 cv
303.316 34.9789 302.932 35.2986 302.421 35.5543 cv
301.909 35.8101 301.206 35.938 300.183 35.938 cv
297.369 35.938 li
297.433 35.6183 li
297.625 35.5543 297.753 35.5543 297.817 35.4904 cv
297.881 35.4265 297.945 35.3625 298.009 35.2346 cv
298.073 35.1068 298.137 35.0428 298.137 34.851 cv
298.201 34.7231 298.265 34.4034 298.393 34.0197 cv
299.416 29.0322 li
299.543 28.5845 299.607 28.2648 299.607 28.009 cv
299.607 27.7533 299.543 27.6254 299.416 27.5615 cv
299.352 27.4975 299.16 27.4335 298.968 27.4335 cv
ef
307.472 29.6716 mo
307.856 29.6716 li
307.856 34.3394 li
307.856 34.6591 307.856 34.9149 307.856 35.1068 cv
307.92 35.2346 307.984 35.3625 308.048 35.4265 cv
308.176 35.4904 308.304 35.5543 308.559 35.6183 cv
308.559 35.938 li
306.066 35.938 li
306.066 35.6183 li
306.258 35.5543 306.321 35.4904 306.449 35.4904 cv
306.513 35.4265 306.577 35.3625 306.577 35.2986 cv
306.641 35.2346 306.705 35.1068 306.705 34.9789 cv
306.705 34.851 306.769 34.6591 306.769 34.3394 cv
306.769 31.5259 li
306.769 31.2062 306.769 31.0144 306.705 30.8226 cv
306.705 30.6946 306.705 30.5668 306.641 30.4389 cv
306.577 30.311 306.513 30.2471 306.449 30.1831 cv
306.321 30.1831 306.194 30.1192 306.002 30.0552 cv
306.002 29.7355 li
cp
306.705 27.1778 mo
307.856 27.1778 li
307.856 28.4567 li
306.705 28.4567 li
cp
ef
324.29 30.1192 mo
323.842 30.1192 323.458 30.375 323.075 30.8226 cv
322.691 31.2702 322.371 31.8456 322.179 32.613 cv
322.755 32.613 323.266 32.5491 323.65 32.4211 cv
324.098 32.2933 324.417 32.1654 324.673 31.9096 cv
324.865 31.7178 324.993 31.3981 324.993 30.9504 cv
324.993 30.6947 324.929 30.5029 324.801 30.375 cv
324.673 30.1832 324.545 30.1192 324.29 30.1192 cv
cp
317.703 29.6077 mo
318.087 29.6077 318.471 29.6716 318.79 29.7355 cv
319.11 29.7355 319.43 29.8634 319.75 29.9274 cv
319.43 31.3341 li
318.918 31.3341 li
318.918 30.9504 318.79 30.6307 318.599 30.4389 cv
318.343 30.2471 318.023 30.1192 317.639 30.1192 cv
317.32 30.1192 317 30.2471 316.808 30.375 cv
316.616 30.5668 316.488 30.8226 316.488 31.0784 cv
316.488 31.2702 316.552 31.3981 316.552 31.5259 cv
316.616 31.5899 316.744 31.7817 316.872 31.9096 cv
317.064 32.0375 317.32 32.2293 317.639 32.4211 cv
317.895 32.613 318.151 32.7408 318.279 32.8688 cv
318.471 32.9966 318.599 33.1245 318.663 33.2524 cv
318.726 33.3803 318.854 33.5721 318.854 33.7 cv
318.918 33.8279 318.918 34.0197 318.918 34.2115 cv
318.918 34.5952 318.854 34.9789 318.663 35.2347 cv
318.407 35.4904 318.151 35.6823 317.831 35.8101 cv
317.448 36.002 317.064 36.0659 316.616 36.0659 cv
316.297 36.0659 315.977 36.002 315.593 35.938 cv
315.274 35.8741 314.89 35.8101 314.506 35.6823 cv
314.762 34.2755 li
315.274 34.2755 li
315.274 34.6592 315.401 34.9789 315.657 35.2347 cv
315.849 35.4265 316.169 35.5544 316.616 35.5544 cv
317 35.5544 317.32 35.4265 317.576 35.2347 cv
317.767 35.0428 317.895 34.787 317.895 34.4673 cv
317.895 34.2755 317.895 34.0837 317.831 33.9558 cv
317.767 33.8279 317.639 33.7 317.512 33.5721 cv
317.384 33.4443 317.128 33.2524 316.808 33.0606 cv
316.488 32.8688 316.233 32.6769 316.041 32.5491 cv
315.849 32.3572 315.721 32.1654 315.657 31.9736 cv
315.529 31.7817 315.529 31.5899 315.529 31.3341 cv
315.529 31.0144 315.593 30.6947 315.785 30.4389 cv
315.977 30.1832 316.233 29.9913 316.552 29.8634 cv
316.872 29.7355 317.256 29.6077 317.703 29.6077 cv
cp
324.481 29.6077 mo
324.993 29.6077 325.377 29.7355 325.632 29.9274 cv
325.888 30.1832 326.016 30.5029 326.016 30.9504 cv
326.016 31.6538 325.696 32.2293 325.057 32.613 cv
324.353 32.9327 323.394 33.1245 322.052 33.1245 cv
321.988 33.3803 321.988 33.7 321.988 33.9558 cv
321.988 34.4034 322.052 34.787 322.243 34.9789 cv
322.371 35.1707 322.691 35.2986 323.075 35.2986 cv
323.458 35.2986 323.778 35.1707 324.098 35.0428 cv
324.417 34.851 324.737 34.5952 325.121 34.2115 cv
325.504 34.6592 li
325.121 35.1068 324.673 35.4265 324.29 35.6823 cv
323.842 35.938 323.33 36.002 322.819 36.002 cv
322.179 36.002 321.732 35.8101 321.412 35.4904 cv
321.028 35.1068 320.901 34.5313 320.901 33.8918 cv
320.901 33.3803 320.964 32.9327 321.156 32.3572 cv
321.284 31.8456 321.54 31.3981 321.86 30.9504 cv
322.179 30.5029 322.563 30.1832 323.075 29.9913 cv
323.522 29.7355 323.97 29.6077 324.481 29.6077 cv
cp
329.149 28.137 mo
330.044 28.137 li
329.661 29.7355 li
331.579 29.7355 li
331.451 30.375 li
329.533 30.375 li
328.957 32.9327 li
328.893 33.3803 328.829 33.764 328.766 33.9558 cv
328.766 34.1476 328.702 34.3395 328.702 34.4673 cv
328.702 34.9789 328.957 35.2986 329.405 35.2986 cv
329.597 35.2986 329.789 35.1707 329.98 35.0428 cv
330.172 34.9149 330.428 34.6592 330.684 34.3395 cv
331.068 34.7231 li
330.684 35.1707 330.364 35.4904 330.044 35.6823 cv
329.661 35.938 329.341 36.002 328.957 36.002 cv
328.062 36.002 327.615 35.5544 327.615 34.6592 cv
327.615 34.4034 327.678 34.0837 327.742 33.764 cv
328.51 30.375 li
327.423 30.375 li
327.551 29.9274 li
327.742 29.9274 327.934 29.9274 328.062 29.8634 cv
328.19 29.8634 328.318 29.7995 328.382 29.7355 cv
328.51 29.6716 328.574 29.6077 328.638 29.4798 cv
328.702 29.3519 328.766 29.224 328.829 29.0322 cv
328.893 28.9043 329.021 28.5846 329.149 28.137 cv
cp
311.565 28.137 mo
312.46 28.137 li
312.076 29.7355 li
313.995 29.7355 li
313.867 30.375 li
311.948 30.375 li
311.373 32.9327 li
311.309 33.3803 311.245 33.764 311.181 33.9558 cv
311.181 34.1476 311.181 34.3395 311.181 34.4673 cv
311.181 34.9789 311.373 35.2986 311.821 35.2986 cv
312.012 35.2986 312.204 35.1707 312.396 35.0428 cv
312.588 34.9149 312.844 34.6592 313.163 34.3395 cv
313.483 34.7231 li
313.163 35.1707 312.78 35.4904 312.46 35.6823 cv
312.076 35.938 311.757 36.002 311.373 36.002 cv
310.478 36.002 310.03 35.5544 310.03 34.6592 cv
310.03 34.4034 310.094 34.0837 310.158 33.764 cv
310.925 30.375 li
309.838 30.375 li
309.966 29.9274 li
310.222 29.9274 310.35 29.9274 310.542 29.8634 cv
310.67 29.8634 310.734 29.7995 310.861 29.7355 cv
310.925 29.6716 310.989 29.6077 311.053 29.4798 cv
311.117 29.3519 311.181 29.224 311.309 29.0322 cv
311.373 28.9043 311.437 28.5846 311.565 28.137 cv
ef
335.16 25.3874 mo
334.968 25.3874 334.776 25.4514 334.648 25.5792 cv
334.52 25.6432 334.393 25.835 334.329 26.0268 cv
334.201 26.2826 334.137 26.5384 334.137 26.8581 cv
334.073 27.1778 334.073 27.5615 334.073 27.9451 cv
334.073 28.3927 334.073 28.8403 334.137 29.16 cv
334.201 29.4797 334.265 29.7994 334.329 29.9913 cv
334.456 30.2471 334.584 30.3749 334.712 30.5029 cv
334.84 30.6307 335.032 30.6307 335.224 30.6307 cv
335.416 30.6307 335.544 30.6307 335.671 30.5029 cv
335.799 30.4389 335.927 30.2471 336.055 30.0552 cv
336.119 29.8634 336.183 29.6077 336.247 29.2879 cv
336.311 28.9682 336.311 28.5845 336.311 28.137 cv
336.311 27.6893 336.247 27.2418 336.247 26.922 cv
336.183 26.5384 336.119 26.2826 335.991 26.0268 cv
335.927 25.835 335.799 25.6432 335.671 25.5153 cv
335.544 25.4514 335.352 25.3874 335.16 25.3874 cv
cp
335.224 24.9398 mo
335.544 24.9398 335.863 25.0037 336.119 25.1316 cv
336.375 25.2595 336.631 25.4514 336.758 25.7071 cv
336.95 25.9629 337.078 26.2826 337.142 26.6663 cv
337.206 27.0499 337.27 27.4975 337.27 27.9451 cv
337.27 28.9682 337.078 29.7994 336.694 30.311 cv
336.375 30.8865 335.799 31.1423 335.16 31.1423 cv
334.456 31.1423 333.945 30.8865 333.625 30.3749 cv
333.306 29.8634 333.114 29.0961 333.114 28.073 cv
333.114 27.4975 333.178 27.0499 333.242 26.6663 cv
333.369 26.2826 333.497 25.9629 333.689 25.7071 cv
333.881 25.4514 334.137 25.2595 334.393 25.1316 cv
334.648 25.0037 334.904 24.9398 335.224 24.9398 cv
ef
246.982 111.583 mo
445.973 111.583 li
445.973 83.1921 li
246.982 83.1921 li
cp
0 0 0 0 cmyk
f
246.982 111.583 mo
445.973 111.583 li
445.973 83.1921 li
246.982 83.1921 li
cp
.868467 .537987 0 0 cmyk
@
275.629 83.192 mo
275.629 111.583 li
@
303.956 83.192 mo
303.956 111.583 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSN+SimSun-GBK-EUC-H 2 GetGlyphDirectory
75 <001C60D8A8C9B7A73DB97D2EA733FEF9D2030029A5B2CF3B73FD3A017E40
3C7A7ECCD3EBFFFEDB9F0FD5D6E05B2BF9CF9C60DE3B48CE5E3964A0DD5556E0
7AB5FFC25800B9D85F8D31AE6DBC004A862D3FEA36827FC066763E92798BD93B
BE84A3953A936A817DA4EF604378F7E928BE8E3BEFCFAEE628876516E5BA519F
A7C2BBFB50E014B454A948E6FDFBCA6203B7778D3A97BE800CFB8CBFAE7378BF
699AD0E87F7AB83A1C37403E2503C9BB82AA33A6F53E7F47786A6AD4817C1665
9B5B1B82E64EA2> |
19 <001C60D8A8C9B7A73DB9C905ADA7816CD049001EA226382BA35539028841
E84975D48249A99BA0C798EED8AF7DAB23FB008A6A6D45DA387BE258459D5BB0
83508C2D27B2D65AD80E90651F58ECE26496AF4A456B181D4DA468B2650F5157
01BEC572A6F28EDF5A4B2882F3C525D7CABBFDB2562260549105997ABE37672D
C147B23ACEF7891D> |
!
end
end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
257.725 101.671 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
263.735 103.334 mo
(\000\023)sh
332.602 83.192 mo
332.602 111.583 li
.868467 .537987 0 0 cmyk
@
360.929 83.192 mo
360.929 111.583 li
@
389.32 83.192 mo
389.32 111.583 li
@
417.647 83.192 mo
417.647 111.583 li
@
246.982 235.888 mo
445.973 235.888 li
445.973 207.562 li
246.982 207.562 li
cp
0 0 0 0 cmyk
f
246.982 235.888 mo
445.973 235.888 li
445.973 207.562 li
246.982 207.562 li
cp
.868467 .537987 0 0 cmyk
@
275.629 207.562 mo
275.629 235.888 li
@
303.956 207.562 mo
303.956 235.888 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSN+SimSun-GBK-EUC-H 1 GetGlyphDirectory
79 <001C60D8A8C9B7A73DBF05D04BEA90E6564DA8DAECFE6E6E0E58E41A32B6
C7EEAA6121366B103E1CB23C7A344868031CA8713CA1443E0D5B4E7E33421084
23E0105BBA7ED0A16547FEEBADC74FEB0AFFB91669C3DF6FECBF5695650337EA> |
!
end
end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
257.725 225.977 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
263.735 227.703 mo
(\000\023)sh
332.602 207.562 mo
332.602 235.888 li
.868467 .537987 0 0 cmyk
@
360.929 207.562 mo
360.929 235.888 li
@
389.32 207.562 mo
389.32 235.888 li
@
417.647 207.562 mo
417.647 235.888 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: DKVNSN+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/DKVNSN+SimSun-GBK-EUC-H 18 GetGlyphDirectory
20 <001C60D8A8C9B7A73DB9873C4F791E79ACFF794BEACD19C19AF494E78F88
29EFC3CC7D3628878E17C4A01E41A7E094F8C1BA4E11669947F4830A1D0A5096
2242B577F5C761E3EB42574B7809832B24AA9A0838BB8D7088A4971157A18E8F
D7> |
21 <001C60D8A8C9B7A73DB9C53BB5D0A393A2047FD47350D2E4CFE49AB7DF02
A9275C93D085D1924F3FB7EEB24FE801DDD1FF576AB770A9CF206F8FECD52181
C2F2102CA1FEA19488395EF5B471B157DADF02C13C9C4B17852D280284450C63
972064F36B02F0D9D8824170509719B2834B78DF97F8CEB4B61B8B98A4837226
F9074C06268F52A598A5AA3DEBE2A49E5876A26870011588A4C381E7BA0EE6B7
FA4F20FFB2FE1484B73A6C863D02C40E3AF645370EF6B42DFE012CC9FD6A13CC
DF3A9AF5049333A4> |
22 <001C60D8A8C9B7A73DB690C096E5829ECB7EAC0696F671A2E825F453F3A9
547E649C9C8AA9D940164AA955DAE1F274CFE0AEF581531A98237701371CB67B
5B906EFC305BD0A35FAC809384995849E312D729A85CAD44AD9DCEC7156A6E32
35066EEEBE61A7272E47F1F0F5C01BD0E43E3B14D7922DEB48F05D02ADAE380C
A38F24D149AF28B38F499D66605010BC2D7BE9EEDFF317910FE16542E05B3E6B
AFB9111EC89586C3A633B0E14E49C3EF7326EECAEBE9BC79A5F796E73B8C7219
A71173E9FEF40F71BF7E21CE840AA06D2850D06F9136E3FB1454503F1EFF2341
2ABA53EF3331ED68FEF5FCFF6E45A66251FE70235BB837DDAB27E135C1CD532F
2C0B8DF29FA0D655B26EFB80AF44DA30> |
69 <001C60D8A8C9B7A73DB938E8502802F0F159739B20F023956F6C7A371FB3
71CFA8E2025C64A394A891623C8786F6F34E6EA2A016B05E559D7CBAE3CDD408
2F786DBDAEA864E373DDE8E6D3B3041C8F2F63E3A159D0E982F446EAD63C48D2
923FB13A59574904927BB70DFB185E45935AF4DE8AAF5A4CFEAD3B613CDFB6BC
515362B86B27DF150D9898E3CAD23E4AF86AD1DFFA1DF3630E96B4C6717B734F
46A9CE602FFFBC2D7B2D0D102E14AC> |
16 <001C60D8A8C9B7A73DB6DF1C647A79F74FB5FAC3D2DC46> |
47 <001C60D8A8C9B7A73DB914F33C23AAE67CDFE632CC6CF5A267C5D97160BE
42069A1F8D8B462471A477B627AF492D9C2CAC0F2A8C8F01A649B8E9F6AE791E
DF59C5A24A1450BBC13D2BA1454E0ECEA449F92D2A0CA98E55693D097AC7036D
204C4385CF77469880E4C83E9B3B768F6133B8C64352> |
82 <001C60D8A8C9B7A73DB6985301E401DC725907D0844BFF394464D322EA46
F6487079DA667C31FA03ACB3FA808E04EE37A03FF7FDFB3A3F48EE1DF47F3714
75D3DBBAB82B4F8E851C89E16F753C27E4EEFD147D2668C06A6CC28CAD86EEDC
CBFD6A07DE9C91FB3E2BE5E3BECEC67E3BC11C338B68C7E5A41BDB217995BE6C
85F06980A83CC2> |
90 <001C60D8A8C9B7A73DB9DA4A1C780D80B5468847B29300DF869B97C2AD2A
94F39F74F04B10326D49A4B627FEB9A9EF80D60B1AC831F0CD0BBBC6903C0590
86783C244E98C81907C96994B6944D5F15712118EDED0F79639FCC131E421794
5FF3DBACAA734A02DBE00F767A4AA791B9577D2BEE9EC8DE6843A4F6BF927E4F
6702D6D48886A94C8CEA4D390FE5B11AAA5B59B6E2D5A2750C541C1EDC07FBB1
D2C8D2EF88D4ACB567066A84A5> |
3 <001C60D8A8C9B7A73D40> |
88 <001C60D8A8C9B7A73DB9114A346127958440054B45D6DD27EA8D471375D5
72445BC4C286672B1840EC5F872969EDC316D1EFFD044E5CCF1BAE826A677491
821E6325850E1DF6D4B9927F904C350BF2975D73D4323360EC025DEEE1956D77
4E3B0B361DD7B2990B623979CEF2C0E741CDD2397E25D69433398449320E4FB3
F0E49A55DB2D667D96291B3513A398EEA9D6FEFC5CDF7C1C4AB4A732A2A66C48
06AF99AABDEE8267000B4F92EF890FB1FF602BEB892FAAB7DF6692738FEB1E98
844B6E> |
70 <001C60D8A8C9B7A73DB9CB6D5D716C71BC7C8E81968EFC130C260B635485
7097DA7FE92DA981AAD523A3AC2101169C7334C9B1B5118E0EE2BCDA1F248FC5
D7FDB82DE1160A4F1E28C4CDB707E6F75A92C633B8A0BB70054B60DB1C96584F
D98A2C2EB98459415075C1489E4CBDD93EAF4322421B8D157545E6591F222090
2B9C2EED31998A37902025C9599B2093B7CEE7D98C94495CFB75D36D06B20B4C
61772C4D5E024356F729426C8E24BA> |
78 <001C60D8A8C9B7A73DB9DDE50E42414D7463C23E7DF3F7740D8399584E76
0478B4B9DAE9A58DF916D341DC2985043F40488E0B2B243567C0A9021639D2B3
B40039B69E76B214CE527D22CF4BD88F229C6200B42A9E88BFA281B7CE19D3D4
1628C77376AF3EF1471A5CA3981FA1ED4CC8D398DFB2D8FF3EFBAB070C1153DC
4655D47954A549C76579DEDC4A8638C7DAC4315FBD0F2691AFCCDC23AF6C0050
B58CCD1C807AF1D2685B243B6C15B988724F74E251488CC66F99EA7DC5A24ACF
4CA53CB593> |
72 <001C60D8A8C9B7A73DB937B4101DBBF46DCDCD3594B4AAC949BC12DB93EB
145354BBB8C08C11925AC0F46D8DED6ED48766AD9F227F80E78F994FA53412AF
E33248FD828F9162118D6670CC6A028F6D1DD6E1E39F82490DBCEFB527759926
A45C28D02E5E3C215B6E23DB6B07742833D39B4C404EB9F2FBEFF8CC0B79F18F
65B9FD4B7E27C7AFDC> |
87 <001C60D8A8C9B7A73DB95A84AC392EC3FFDC6DCF78498E55E2C751F907E0
EB0E7192CA6CD73FECFD87D1E53C0374F65CF995AC77F4672720791390DED569
3F88B9DFFBCC5CA235024CDF2294EB932A2F212801FB690EF557E4F956B291FC
A8160BCA29BCCA432186AB21CDD389A908118DA381> |
76 <001C60D8A8C9B7A73DB9569388B530AA69A814780F04C0D0891B66556132
542C171BD2EA0875B17FB62A498137AA36ED9317F24C9A2721EA3B3B3123F10D
465E3C0C3940519B1D53E494B241521837AD95C41A6B68EB1AF34EFC4D487D67
B41222FB69500F24E6D00BCB0B69D0B47A3176CA18FD9AB9DA036DC8EAC4C434
6F5DE38515260123D047837FF21F02E18B6D3BF3F907A7216BF10CEEB35C> |
86 <001C60D8A8C9B7A73DB923D5A7E1A048C12FD6EAA91CC25839041CFEAE1A
A7C202C7ED1530CE3FECBA6BDF8AAF3E91890E75110F8E216E2B37AA16BB08AE
E6700BEB5033B16635721DE92C05AF681BA202B72B2068DEAC474A1E638C3DAC
266B862E03C96D35D72068696D7D6C6381DC037E8BBAE247FF9F47D2E4538226
51D894E0874681F71FDA6448AB38D148952B5A81C467D015EC59AE9EE1530FE5
813CA13FD4B0E2772EDD241FE4D317D8CFB23840EA92D4E1CAE9D1D6E6E2E010
B23187FD71E43A9D5BD10376E8BCCDC46ED2D8C8FC7FB046A417116698C16A78
8D2397C5B42D1EE2ED8834D09DD9ED9942AB42DD8CA2D1C8F65F822421FB4EB6> |
43 <001C60D8A8C9B7A73DB68473D21241B1BC365AD3697D345663FF30DC6FDC
6D0A3D5CCCDF5EBCCE3C0990E35B0ED2618CE94DFD217B29149B4C3E2B1AD4A6
731254CB43AF3F2151D0C93BF2489BAC0F828C3A1F3F803BC3914B00E2748DD0
018ACC08EF176250F048DA7AC3C39A9A607B8D626AF32C1A6FDDEAB8F87D6DC6
84652AF58FC268139AF85B0B3F5ABCDB3676CE0AF7B312BADAC57440DE027C7C
2DA6C30BBBEFE290E494B242E7EBD22B31450C1CE27544B1AA888651826B6801
E5D4EC> |
74 <001C60D8A8C9B7A73DB91F11B451E7DBFA46ECBE25C9942EBDB0619EB037
A650021A696093BB4137719B4EDEFA299F43C49829D944591403F963EA7515F8
87222C06EA6926A6379751A80C74883E86856F14223DC365C156F55BCEDFE8D8
CC6C68F3D3797BD1D6D3F93B526AF593A416C27568ECBCD6D9994D22EE2069FB
31AF7469B1A71FE85315A8765C7420B83A8850D9641E33C98F5859A1FFB4ED3E
214FF52F6395D0CB468C0BD2F52CEB8F87145E12837A12DA28826B37C5D58ED3
5EC25398FE201D2E04906312E2E825A7D34DA222B10CC41DE5A7E6B56E391D86
975F13B646A37C58E5C9EF07D2FC3A535F5270CEA696177F07C5EA884C8E6EDC
6B3883778EF58A01CDC05727CDF7F4E3681380968DCDA9AE387E54DEA26F9BB8
9AE1A0F1B2B8BA5C60669D7FB72115F59755BE02FA4DE37DC663B24E94AB2DBD
6662F3D45BA0DF074566C1CAB5FA9E67ED736FBEEBED729FDB627107CD7FA153
53B2EC049FCEB6B9271557639C06F675A318F9DF9D0630DFAB12BD8A63667ADD
5B6B0DE4FE77D94B75CDA56B3A52D0E42299E19992A463A61413E48500950B05
C93A4CE293425248BA9C1763B72F6DC0BE> |
!
end
end end
%ADOEndSubsetFont
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
285.54 101.032 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
291.487 102.694 mo
(\000\024)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
313.291 101.032 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
319.302 102.694 mo
(\000\025)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
340.659 101.032 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
346.67 102.694 mo
(\000\026)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
286.371 225.401 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
292.382 227.064 mo
(\000\024)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
315.018 225.273 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
321.028 226.936 mo
(\000\025)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
342.385 225.465 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [7.9929 0 0 -7.9927 0 0 ]msf
348.332 227.128 mo
(\000\026)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [6.9698 0 0 -6.9696 0 0 ]msf
397.696 222.716 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [4.6678 0 0 -4.6676 0 0 ]msf
401.213 223.675 mo
(\000E\000\020\000\025)
[2.30212 2.36566 0 ]xsh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [6.9698 0 0 -6.9696 0 0 ]msf
426.918 222.908 mo
(\000O)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [4.6678 0 0 -4.6676 0 0 ]msf
430.435 223.867 mo
(\000E\000\020\000\024)
[2.30212 2.36609 0 ]xsh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [6.9698 0 0 -6.9696 0 0 ]msf
398.591 98.9857 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [4.6678 0 0 -4.6676 0 0 ]msf
402.108 99.9449 mo
(\000E\000\020\000\025)
[2.3017 2.36609 0 ]xsh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [6.9698 0 0 -6.9696 0 0 ]msf
426.982 99.1136 mo
(\000K)sh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [4.6678 0 0 -4.6676 0 0 ]msf
430.435 100.073 mo
(\000E\000\020\000\024)
[2.36609 2.30212 0 ]xsh
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
301.526 252.321 mo
(\000/\000R\000Z\000\003)sh
325.505 252.321 mo
(\000%\000X\000F\000N\000H\000W\000\003)sh
367.516 252.321 mo
(\000/\000L\000V\000W)sh
298.52 124.754 mo
(\000+\000L\000J\000K)sh
322.499 124.754 mo
(\000\003\000%\000X\000F\000N\000H\000W)sh
364.51 124.754 mo
(\000\003\000/\000L\000V\000W)sh
246.982 221.757 mo
155.416 221.757 li
155.416 39.5828 li
117.114 39.5828 li
.75021 .679683 .670222 .90164 cmyk
@
246.982 97.0038 mo
155.416 97.0038 li
@
1 /0 /CSD get_res sepcs
1 sep
/DKVNSN+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
370.392 102.183 mo
(\001\002)sh
368.986 226.806 mo
(\001\002)sh
378.13 66.311 mo
377.426 69.5721 li
377.618 69.6361 377.938 69.6361 378.258 69.6361 cv
378.833 69.6361 379.281 69.5721 379.6 69.4443 cv
379.856 69.3163 380.112 69.0606 380.304 68.7409 cv
380.559 68.3572 380.623 67.9736 380.623 67.462 cv
380.623 67.0784 380.496 66.8226 380.24 66.6307 cv
379.984 66.4389 379.6 66.311 379.153 66.311 cv
cp
379.792 62.7942 mo
379.472 62.7942 379.153 62.7942 378.897 62.7942 cv
378.258 65.7995 li
379.025 65.7995 li
379.472 65.7995 379.856 65.7995 380.112 65.6716 cv
380.368 65.6077 380.623 65.4798 380.815 65.288 cv
381.007 65.0961 381.199 64.9043 381.263 64.7125 cv
381.391 64.4567 381.391 64.2009 381.391 63.9451 cv
381.391 63.7533 381.391 63.6254 381.327 63.4336 cv
381.263 63.3057 381.135 63.1778 381.007 63.1139 cv
380.879 62.986 380.751 62.9221 380.559 62.8581 cv
380.368 62.7942 380.112 62.7942 379.792 62.7942 cv
cp
377.234 62.2826 mo
380.048 62.2826 li
380.623 62.2826 381.135 62.3466 381.455 62.4744 cv
381.838 62.6024 382.094 62.7942 382.222 62.986 cv
382.414 63.2418 382.478 63.5615 382.478 63.8812 cv
382.478 64.3928 382.286 64.8403 382.03 65.224 cv
381.71 65.5437 381.263 65.8634 380.623 66.0552 cv
380.623 66.1192 li
381.007 66.2471 381.263 66.4389 381.455 66.6947 cv
381.647 67.0144 381.71 67.2702 381.71 67.5899 cv
381.71 68.1014 381.647 68.5491 381.391 68.9327 cv
381.135 69.2524 380.815 69.5721 380.368 69.8279 cv
379.856 70.0197 379.217 70.1476 378.258 70.1476 cv
375.7 70.1476 li
375.764 69.8279 li
375.956 69.8279 376.02 69.764 376.147 69.764 cv
376.211 69.7 376.275 69.6361 376.275 69.5082 cv
376.339 69.4443 376.403 69.3163 376.467 69.1885 cv
376.467 69.0606 376.531 68.8048 376.659 68.4211 cv
377.618 64.0091 li
377.682 63.6254 377.746 63.3057 377.746 63.1139 cv
377.746 62.9221 377.682 62.7942 377.618 62.7302 cv
377.49 62.6024 377.362 62.6024 377.171 62.6024 cv
.75021 .679683 .670222 .90164 cmyk
ef
384.908 64.5846 mo
385.227 64.5846 li
385.227 68.6769 li
385.227 68.9967 385.227 69.2524 385.291 69.3803 cv
385.291 69.5082 385.355 69.6361 385.483 69.7001 cv
385.547 69.764 385.675 69.8279 385.867 69.8279 cv
385.867 70.1476 li
383.629 70.1476 li
383.629 69.8279 li
383.757 69.8279 383.885 69.764 383.948 69.7001 cv
384.012 69.7001 384.076 69.6361 384.14 69.5721 cv
384.14 69.5082 384.204 69.4443 384.204 69.3164 cv
384.268 69.1885 384.268 68.9967 384.268 68.7409 cv
384.268 66.1832 li
384.268 65.9913 384.268 65.7995 384.268 65.6077 cv
384.204 65.4798 384.204 65.3519 384.14 65.288 cv
384.14 65.1601 384.076 65.0961 383.948 65.0322 cv
383.885 65.0322 383.757 64.9683 383.565 64.9683 cv
383.565 64.6486 li
cp
384.204 62.4105 mo
385.291 62.4105 li
385.291 63.4976 li
384.204 63.4976 li
cp
ef
400.19 65.0322 mo
399.806 65.0322 399.423 65.224 399.103 65.6077 cv
398.719 65.9913 398.464 66.5029 398.272 67.1423 cv
398.783 67.1423 399.295 67.1423 399.679 67.0144 cv
400.062 66.9504 400.318 66.7586 400.574 66.5668 cv
400.766 66.375 400.829 66.1192 400.829 65.7355 cv
400.829 65.5437 400.829 65.3519 400.702 65.224 cv
400.574 65.0961 400.446 65.0322 400.19 65.0322 cv
cp
394.243 64.5845 mo
394.563 64.5845 394.883 64.5845 395.202 64.5845 cv
395.458 64.6485 395.778 64.7125 396.098 64.8403 cv
395.778 66.0552 li
395.33 66.0552 li
395.33 65.6716 395.202 65.4158 395.011 65.288 cv
394.819 65.0961 394.563 65.0322 394.179 65.0322 cv
393.86 65.0322 393.604 65.0961 393.412 65.224 cv
393.22 65.4158 393.156 65.6077 393.156 65.8634 cv
393.156 65.9913 393.156 66.1192 393.22 66.1832 cv
393.22 66.311 393.348 66.4389 393.476 66.5668 cv
393.668 66.6947 393.86 66.8226 394.179 67.0144 cv
394.435 67.1423 394.627 67.2702 394.755 67.3981 cv
394.883 67.5259 395.011 67.6538 395.075 67.7817 cv
395.202 67.9096 395.266 68.0375 395.266 68.1654 cv
395.33 68.2933 395.33 68.4211 395.33 68.613 cv
395.33 68.9966 395.266 69.2524 395.075 69.5082 cv
394.883 69.764 394.627 69.9558 394.307 70.0197 cv
393.988 70.1476 393.668 70.2115 393.284 70.2115 cv
392.964 70.2115 392.645 70.2115 392.325 70.1476 cv
392.005 70.0837 391.686 70.0197 391.302 69.8918 cv
391.558 68.6769 li
392.005 68.6769 li
392.005 68.9966 392.133 69.3163 392.325 69.5082 cv
392.517 69.7 392.837 69.764 393.22 69.764 cv
393.604 69.764 393.924 69.7 394.115 69.5082 cv
394.307 69.3803 394.435 69.1245 394.435 68.8688 cv
394.435 68.6769 394.371 68.549 394.307 68.4211 cv
394.243 68.2933 394.179 68.1654 394.052 68.0375 cv
393.924 67.9096 393.732 67.7817 393.412 67.5899 cv
393.092 67.3981 392.901 67.2702 392.709 67.1423 cv
392.581 66.9504 392.453 66.8226 392.325 66.6307 cv
392.261 66.5029 392.197 66.2471 392.197 66.0552 cv
392.197 65.7355 392.325 65.4798 392.453 65.288 cv
392.645 65.0322 392.837 64.8403 393.156 64.7125 cv
393.476 64.5845 393.796 64.5845 394.243 64.5845 cv
cp
400.382 64.5206 mo
400.893 64.5206 401.213 64.6485 401.469 64.8403 cv
401.661 65.0322 401.789 65.288 401.789 65.7355 cv
401.789 66.375 401.469 66.8226 400.893 67.1423 cv
400.254 67.462 399.359 67.6538 398.144 67.6538 cv
398.144 67.9096 398.08 68.1654 398.08 68.4211 cv
398.08 68.8048 398.208 69.1245 398.336 69.2524 cv
398.464 69.4442 398.719 69.5721 399.103 69.5721 cv
399.487 69.5721 399.806 69.4442 400.062 69.3163 cv
400.318 69.1885 400.638 68.9327 400.957 68.613 cv
401.341 68.9966 li
400.957 69.3803 400.574 69.7 400.19 69.8918 cv
399.806 70.1476 399.359 70.2115 398.847 70.2115 cv
398.336 70.2115 397.888 70.0197 397.568 69.7 cv
397.249 69.3803 397.121 68.9327 397.121 68.2933 cv
397.121 67.9096 397.185 67.462 397.313 67.0144 cv
397.504 66.5029 397.696 66.1192 398.016 65.7355 cv
398.336 65.3519 398.655 65.0322 399.103 64.8403 cv
399.487 64.6485 399.934 64.5206 400.382 64.5206 cv
cp
404.666 63.2418 mo
405.433 63.2418 li
405.114 64.6485 li
406.84 64.6485 li
406.712 65.224 li
404.986 65.224 li
404.474 67.462 li
404.41 67.9096 404.346 68.1654 404.282 68.3572 cv
404.282 68.549 404.282 68.7408 404.282 68.8688 cv
404.282 69.3163 404.474 69.5721 404.858 69.5721 cv
404.986 69.5721 405.178 69.5082 405.369 69.3803 cv
405.561 69.2524 405.817 68.9966 406.073 68.6769 cv
406.393 69.0606 li
406.073 69.4442 405.753 69.764 405.433 69.9558 cv
405.114 70.1476 404.794 70.2115 404.474 70.2115 cv
403.643 70.2115 403.259 69.8279 403.259 68.9966 cv
403.259 68.7408 403.259 68.4851 403.387 68.2293 cv
404.027 65.224 li
403.068 65.224 li
403.131 64.8403 li
403.387 64.8403 403.579 64.7764 403.643 64.7764 cv
403.771 64.7764 403.899 64.7125 403.963 64.6485 cv
404.027 64.5845 404.091 64.5206 404.155 64.3928 cv
404.218 64.3288 404.282 64.2009 404.346 64.0091 cv
404.41 63.8812 404.538 63.6254 404.666 63.2418 cv
cp
388.68 63.2418 mo
389.448 63.2418 li
389.128 64.6485 li
390.854 64.6485 li
390.726 65.224 li
389 65.224 li
388.488 67.462 li
388.361 67.9096 388.297 68.1654 388.297 68.3572 cv
388.297 68.549 388.233 68.7408 388.233 68.8688 cv
388.233 69.3163 388.488 69.5721 388.872 69.5721 cv
389 69.5721 389.192 69.5082 389.384 69.3803 cv
389.576 69.2524 389.831 68.9966 390.087 68.6769 cv
390.407 69.0606 li
390.087 69.4442 389.767 69.764 389.448 69.9558 cv
389.128 70.1476 388.808 70.2115 388.488 70.2115 cv
387.657 70.2115 387.274 69.8279 387.274 68.9966 cv
387.274 68.7408 387.274 68.4851 387.337 68.2293 cv
388.041 65.224 li
387.082 65.224 li
387.146 64.8403 li
387.401 64.8403 387.529 64.7764 387.657 64.7764 cv
387.785 64.7764 387.913 64.7125 387.977 64.6485 cv
388.041 64.5845 388.105 64.5206 388.169 64.3928 cv
388.233 64.3288 388.297 64.2009 388.361 64.0091 cv
388.425 63.8812 388.552 63.6254 388.68 63.2418 cv
ef
410.165 60.3643 mo
410.421 60.3643 410.677 60.4283 410.869 60.4922 cv
411.06 60.5562 411.252 60.6201 411.38 60.748 cv
411.508 60.8759 411.636 61.0037 411.636 61.1317 cv
411.7 61.3235 411.764 61.4514 411.764 61.6432 cv
411.764 61.7711 411.764 61.835 411.7 61.9629 cv
411.7 62.0269 411.7 62.1547 411.636 62.2187 cv
411.636 62.3466 411.572 62.4105 411.508 62.4744 cv
411.444 62.6024 411.38 62.6663 411.252 62.7942 cv
411.188 62.8581 411.124 62.986 410.996 63.1139 cv
410.869 63.2418 410.741 63.3696 410.613 63.4976 cv
410.485 63.6254 410.357 63.7533 410.229 63.8812 cv
410.037 64.0091 409.909 64.2009 409.781 64.3288 cv
409.654 64.4567 409.526 64.5846 409.398 64.7125 cv
409.27 64.9043 409.206 64.9682 409.142 65.0961 cv
410.677 65.0961 li
410.805 65.0961 410.932 65.0961 410.996 65.0961 cv
411.06 65.0961 411.124 65.0322 411.188 65.0322 cv
411.252 64.9682 411.316 64.9682 411.316 64.9043 cv
411.38 64.7764 411.38 64.7125 411.444 64.5846 cv
411.828 64.5846 li
411.828 64.7764 411.828 64.9682 411.828 65.16 cv
411.764 65.4158 411.764 65.6077 411.764 65.7995 cv
408.183 65.7995 li
408.183 65.5437 li
408.247 65.4158 408.375 65.288 408.439 65.0961 cv
408.567 64.9682 408.631 64.8403 408.758 64.6485 cv
408.886 64.5206 409.014 64.3928 409.142 64.2009 cv
409.27 64.073 409.398 63.8812 409.59 63.6894 cv
409.845 63.4336 410.101 63.2418 410.229 63.0499 cv
410.421 62.8581 410.549 62.6663 410.613 62.5384 cv
410.741 62.4105 410.805 62.2826 410.805 62.1547 cv
410.869 62.0269 410.869 61.8989 410.869 61.7711 cv
410.869 61.6432 410.869 61.4514 410.805 61.3874 cv
410.805 61.2595 410.741 61.1317 410.613 61.0677 cv
410.549 61.0037 410.485 60.9398 410.357 60.8759 cv
410.229 60.812 410.101 60.812 409.973 60.812 cv
409.718 60.812 409.462 60.8759 409.334 61.0037 cv
409.142 61.1317 409.014 61.3235 408.886 61.6432 cv
408.375 61.6432 li
408.375 60.812 li
408.694 60.6201 409.014 60.5562 409.334 60.4922 cv
409.654 60.4283 409.909 60.3643 410.165 60.3643 cv
ef
415.472 59.4691 mo
415.345 59.4691 415.217 59.5331 415.089 59.597 cv
415.025 59.597 414.897 59.7249 414.705 59.9167 cv
414.577 60.0446 414.449 60.2365 414.385 60.3643 cv
414.322 60.5562 414.194 60.748 414.13 61.0677 cv
414.066 61.3874 li
414.066 61.5153 414.066 61.6432 414.066 61.7711 cv
414.066 61.9629 414.066 62.0908 414.194 62.1547 cv
414.258 62.2826 414.385 62.2826 414.577 62.2826 cv
414.833 62.2826 415.089 62.2187 415.281 62.0269 cv
415.472 61.7711 415.664 61.5153 415.728 61.1956 cv
415.856 60.8759 415.92 60.5562 415.92 60.2365 cv
415.92 59.9807 415.856 59.7888 415.792 59.6609 cv
415.728 59.5331 415.6 59.4691 415.472 59.4691 cv
cp
414.641 57.6787 mo
414.897 57.6787 li
414.449 59.7249 li
414.705 59.4691 414.961 59.2773 415.153 59.1494 cv
415.345 59.0215 415.536 58.9576 415.792 58.9576 cv
416.048 58.9576 416.24 59.0854 416.432 59.2773 cv
416.56 59.4691 416.623 59.7888 416.623 60.1725 cv
416.623 60.5562 416.56 61.0037 416.368 61.3874 cv
416.176 61.7711 415.984 62.0908 415.664 62.3466 cv
415.345 62.5384 415.025 62.6663 414.641 62.6663 cv
414.513 62.6663 414.322 62.6663 414.194 62.6024 cv
414.066 62.6024 413.874 62.5384 413.746 62.4744 cv
413.682 62.4744 413.618 62.5384 413.554 62.5384 cv
413.426 62.6663 li
413.107 62.6024 li
414.002 58.6379 li
414.002 58.5099 414.066 58.446 414.066 58.3821 cv
414.066 58.3181 414.066 58.2542 414.066 58.1902 cv
414.066 58.1263 414.002 58.0624 413.938 57.9984 cv
413.874 57.9984 413.746 57.9984 413.554 57.9345 cv
413.618 57.6787 li
ef
419.757 60.748 mo
419.437 60.748 419.181 60.8759 418.989 61.1317 cv
418.734 61.3874 418.542 61.7072 418.414 62.0908 cv
418.861 62.0908 419.245 62.0269 419.501 61.9629 cv
419.757 61.835 419.948 61.7711 420.012 61.6432 cv
420.14 61.5153 420.14 61.3874 420.14 61.2595 cv
420.14 61.0677 420.14 60.9398 420.076 60.8759 cv
419.948 60.812 419.885 60.748 419.757 60.748 cv
cp
419.885 60.3643 mo
420.204 60.3643 420.396 60.4922 420.588 60.6201 cv
420.78 60.748 420.844 60.9398 420.844 61.1317 cv
420.844 62.0269 420.012 62.4744 418.35 62.4744 cv
418.35 62.5384 418.35 62.6663 418.35 62.8581 cv
418.35 63.1139 418.414 63.3057 418.478 63.4336 cv
418.606 63.4976 418.734 63.5615 418.989 63.5615 cv
419.181 63.5615 419.437 63.5615 419.629 63.4336 cv
419.821 63.3057 420.012 63.1779 420.268 62.9221 cv
420.524 63.2418 li
420.268 63.4976 419.948 63.7533 419.693 63.8812 cv
419.373 64.0091 419.053 64.0731 418.798 64.0731 cv
418.414 64.0731 418.094 63.9451 417.902 63.7533 cv
417.71 63.4976 417.647 63.2418 417.647 62.8581 cv
417.647 62.6024 417.647 62.2826 417.774 62.0269 cv
417.838 61.7072 418.03 61.4514 418.222 61.1956 cv
418.414 60.9398 418.67 60.748 418.925 60.6201 cv
419.245 60.4922 419.565 60.3643 419.885 60.3643 cv
ef
422.314 63.8812 mo
424.233 63.8812 li
424.233 63.2418 li
422.314 63.2418 li
cp
f
427.494 60.4283 mo
427.75 60.4283 li
427.75 60.5562 427.75 60.6841 427.75 60.812 cv
427.75 60.9398 427.75 61.0677 427.75 61.1956 cv
427.75 61.2595 427.75 61.3875 427.75 61.5153 cv
427.75 64.7125 li
427.75 64.7764 427.75 64.8403 427.75 64.9043 cv
427.75 64.9683 427.75 65.0322 427.75 65.0961 cv
427.813 65.1601 li
427.813 65.224 427.877 65.224 427.877 65.288 cv
427.941 65.288 427.941 65.288 428.005 65.3519 cv
428.069 65.3519 428.133 65.3519 428.197 65.3519 cv
428.325 65.4158 428.389 65.4158 428.517 65.4158 cv
428.645 65.4158 428.773 65.4158 428.964 65.4158 cv
428.964 65.7995 li
425.639 65.7995 li
425.639 65.4158 li
425.831 65.4158 425.959 65.4158 426.087 65.4158 cv
426.215 65.4158 426.279 65.4158 426.343 65.3519 cv
426.471 65.3519 426.535 65.3519 426.535 65.3519 cv
426.599 65.288 426.663 65.288 426.663 65.288 cv
426.726 65.224 426.79 65.224 426.79 65.224 cv
426.79 65.1601 426.854 65.1601 426.854 65.0961 cv
426.854 65.0322 426.918 64.9683 426.918 64.9043 cv
426.918 64.8403 426.918 64.7764 426.918 64.7125 cv
426.918 61.7072 li
426.918 61.5793 426.918 61.5153 426.854 61.4514 cv
426.79 61.3875 426.726 61.3875 426.663 61.3875 cv
426.599 61.3875 426.471 61.4514 426.279 61.5153 cv
426.087 61.6432 425.895 61.7711 425.639 61.899 cv
425.575 61.835 425.575 61.7711 425.512 61.7072 cv
425.512 61.6432 425.448 61.5793 425.448 61.5153 cv
425.767 61.3235 426.087 61.1317 426.471 60.9398 cv
426.79 60.812 427.11 60.6201 427.494 60.4283 cv
ef
277.035 187.995 mo
276.332 191.256 li
276.588 191.256 276.844 191.256 277.227 191.256 cv
277.803 191.256 278.186 191.192 278.506 191.064 cv
278.762 190.936 279.018 190.681 279.273 190.361 cv
279.465 190.041 279.529 189.657 279.529 189.146 cv
279.529 188.762 279.401 188.443 279.21 188.251 cv
278.954 188.059 278.57 187.995 278.059 187.995 cv
cp
278.762 184.542 mo
278.378 184.542 278.122 184.542 277.803 184.542 cv
277.163 187.483 li
277.995 187.483 li
278.442 187.483 278.762 187.483 279.018 187.355 cv
279.273 187.292 279.529 187.164 279.721 186.972 cv
279.913 186.844 280.105 186.588 280.169 186.396 cv
280.233 186.141 280.297 185.885 280.297 185.629 cv
280.297 185.437 280.297 185.309 280.233 185.181 cv
280.169 185.054 280.041 184.926 279.913 184.798 cv
279.785 184.734 279.657 184.606 279.465 184.606 cv
279.273 184.542 279.018 184.542 278.762 184.542 cv
cp
276.204 184.03 mo
279.018 184.03 li
279.593 184.03 280.041 184.094 280.361 184.222 cv
280.68 184.35 280.936 184.478 281.128 184.734 cv
281.256 184.926 281.384 185.245 281.384 185.565 cv
281.384 186.077 281.192 186.524 280.872 186.908 cv
280.616 187.228 280.169 187.547 279.529 187.739 cv
279.529 187.803 li
279.913 187.931 280.169 188.123 280.361 188.379 cv
280.552 188.634 280.616 188.954 280.616 189.274 cv
280.616 189.785 280.488 190.233 280.297 190.553 cv
280.041 190.936 279.721 191.192 279.273 191.448 cv
278.762 191.64 278.122 191.768 277.227 191.768 cv
274.67 191.768 li
274.734 191.448 li
274.925 191.448 274.989 191.448 275.053 191.384 cv
275.181 191.32 275.245 191.256 275.245 191.128 cv
275.309 191.064 275.373 190.936 275.373 190.808 cv
275.437 190.681 275.501 190.425 275.565 190.041 cv
276.524 185.693 li
276.652 185.309 276.652 185.054 276.652 184.798 cv
276.652 184.606 276.652 184.478 276.524 184.414 cv
276.46 184.35 276.332 184.286 276.14 184.286 cv
ef
283.75 186.268 mo
284.069 186.268 li
284.069 190.361 li
284.069 190.681 284.133 190.872 284.133 191 cv
284.197 191.128 284.261 191.256 284.325 191.32 cv
284.389 191.384 284.517 191.448 284.709 191.448 cv
284.709 191.768 li
282.535 191.768 li
282.535 191.448 li
282.662 191.448 282.79 191.384 282.79 191.384 cv
282.854 191.32 282.918 191.256 282.982 191.192 cv
283.046 191.128 283.046 191.064 283.11 190.936 cv
283.11 190.808 283.11 190.617 283.11 190.361 cv
283.11 187.867 li
283.11 187.675 283.11 187.419 283.11 187.292 cv
283.11 187.164 283.046 187.036 283.046 186.972 cv
282.982 186.844 282.918 186.78 282.79 186.78 cv
282.726 186.716 282.599 186.652 282.407 186.652 cv
282.407 186.332 li
cp
283.11 184.094 mo
284.133 184.094 li
284.133 185.245 li
283.11 185.245 li
cp
ef
298.904 186.716 mo
298.52 186.716 298.137 186.908 297.753 187.292 cv
297.433 187.675 297.114 188.187 296.986 188.826 cv
297.497 188.826 297.945 188.762 298.329 188.698 cv
298.712 188.57 299.032 188.443 299.224 188.251 cv
299.416 188.059 299.543 187.803 299.543 187.419 cv
299.543 187.228 299.48 187.036 299.352 186.908 cv
299.224 186.78 299.096 186.716 298.904 186.716 cv
cp
292.957 186.268 mo
293.341 186.268 293.661 186.268 293.916 186.332 cv
294.236 186.332 294.492 186.396 294.812 186.524 cv
294.556 187.739 li
294.044 187.739 li
294.044 187.355 293.916 187.1 293.725 186.972 cv
293.533 186.78 293.277 186.716 292.893 186.716 cv
292.574 186.716 292.318 186.78 292.19 186.908 cv
291.998 187.1 291.87 187.292 291.87 187.547 cv
291.87 187.675 291.934 187.803 291.934 187.867 cv
291.998 187.995 292.126 188.123 292.254 188.251 cv
292.382 188.379 292.638 188.506 292.893 188.698 cv
293.149 188.826 293.341 188.954 293.469 189.082 cv
293.661 189.21 293.725 189.338 293.853 189.466 cv
293.916 189.53 293.98 189.657 293.98 189.785 cv
294.044 189.913 294.044 190.105 294.044 190.297 cv
294.044 190.617 293.98 190.872 293.789 191.128 cv
293.597 191.384 293.341 191.576 293.085 191.704 cv
292.766 191.768 292.382 191.832 291.998 191.832 cv
291.678 191.832 291.359 191.832 291.103 191.768 cv
290.783 191.704 290.464 191.64 290.08 191.512 cv
290.336 190.297 li
290.783 190.297 li
290.783 190.681 290.911 190.936 291.103 191.128 cv
291.295 191.32 291.615 191.384 291.998 191.384 cv
292.382 191.384 292.638 191.32 292.829 191.192 cv
293.021 191 293.149 190.744 293.149 190.489 cv
293.149 190.297 293.149 190.169 293.085 190.041 cv
293.021 189.913 292.893 189.785 292.766 189.657 cv
292.638 189.594 292.446 189.466 292.19 189.274 cv
291.87 189.082 291.615 188.954 291.487 188.762 cv
291.295 188.634 291.167 188.506 291.103 188.315 cv
291.039 188.123 290.975 187.931 290.975 187.739 cv
290.975 187.419 291.039 187.164 291.231 186.972 cv
291.359 186.716 291.615 186.524 291.934 186.46 cv
292.19 186.332 292.574 186.268 292.957 186.268 cv
cp
299.096 186.268 mo
299.543 186.268 299.863 186.332 300.119 186.524 cv
300.311 186.716 300.439 186.972 300.439 187.419 cv
300.439 188.059 300.183 188.506 299.543 188.826 cv
298.968 189.146 298.073 189.338 296.858 189.338 cv
296.794 189.53 296.794 189.785 296.794 190.041 cv
296.794 190.425 296.858 190.744 297.05 190.936 cv
297.178 191.064 297.433 191.192 297.753 191.192 cv
298.137 191.192 298.456 191.128 298.712 190.936 cv
299.032 190.808 299.288 190.553 299.607 190.233 cv
299.991 190.617 li
299.607 191.064 299.224 191.32 298.84 191.512 cv
298.456 191.768 298.073 191.832 297.561 191.832 cv
296.986 191.832 296.602 191.704 296.282 191.32 cv
295.963 191 295.835 190.553 295.835 189.977 cv
295.835 189.53 295.899 189.082 296.027 188.634 cv
296.155 188.187 296.41 187.803 296.73 187.419 cv
296.986 187.036 297.369 186.78 297.753 186.524 cv
298.201 186.332 298.584 186.268 299.096 186.268 cv
cp
303.252 184.926 mo
304.02 184.926 li
303.7 186.332 li
305.426 186.332 li
305.298 186.908 li
303.572 186.908 li
303.124 189.082 li
302.996 189.53 302.932 189.849 302.932 190.041 cv
302.869 190.233 302.869 190.361 302.869 190.489 cv
302.869 190.936 303.06 191.192 303.444 191.192 cv
303.636 191.192 303.828 191.128 303.956 191 cv
304.147 190.872 304.403 190.681 304.659 190.361 cv
304.979 190.681 li
304.659 191.064 304.339 191.384 304.02 191.576 cv
303.7 191.768 303.38 191.832 303.06 191.832 cv
302.293 191.832 301.909 191.448 301.909 190.681 cv
301.909 190.425 301.909 190.105 301.973 189.849 cv
302.677 186.908 li
301.718 186.908 li
301.781 186.524 li
302.037 186.524 302.165 186.524 302.293 186.46 cv
302.421 186.46 302.485 186.396 302.613 186.332 cv
302.677 186.268 302.741 186.205 302.805 186.141 cv
302.869 186.013 302.932 185.885 302.996 185.757 cv
303.06 185.565 303.124 185.309 303.252 184.926 cv
cp
287.458 184.926 mo
288.226 184.926 li
287.906 186.332 li
289.632 186.332 li
289.504 186.908 li
287.778 186.908 li
287.33 189.082 li
287.202 189.53 287.139 189.849 287.139 190.041 cv
287.075 190.233 287.075 190.361 287.075 190.489 cv
287.075 190.936 287.266 191.192 287.65 191.192 cv
287.842 191.192 288.034 191.128 288.162 191 cv
288.353 190.872 288.609 190.681 288.865 190.361 cv
289.185 190.681 li
288.865 191.064 288.545 191.384 288.226 191.576 cv
287.906 191.768 287.586 191.832 287.266 191.832 cv
286.499 191.832 286.115 191.448 286.115 190.681 cv
286.115 190.425 286.115 190.105 286.179 189.849 cv
286.883 186.908 li
285.924 186.908 li
285.988 186.524 li
286.243 186.524 286.371 186.524 286.499 186.46 cv
286.627 186.46 286.691 186.396 286.819 186.332 cv
286.883 186.268 286.947 186.205 287.011 186.141 cv
287.075 186.013 287.139 185.885 287.202 185.757 cv
287.266 185.565 287.33 185.309 287.458 184.926 cv
ef
308.687 182.112 mo
308.943 182.112 309.199 182.176 309.391 182.24 cv
309.646 182.304 309.774 182.368 309.902 182.496 cv
310.03 182.624 310.158 182.752 310.158 182.879 cv
310.222 183.007 310.286 183.199 310.286 183.391 cv
310.286 183.519 310.286 183.583 310.222 183.711 cv
310.222 183.775 310.222 183.839 310.158 183.966 cv
310.158 184.03 310.094 184.158 310.03 184.222 cv
309.966 184.286 309.902 184.414 309.774 184.542 cv
309.71 184.606 309.646 184.67 309.519 184.798 cv
309.391 184.926 309.327 185.054 309.199 185.181 cv
309.007 185.309 308.879 185.437 308.751 185.629 cv
308.623 185.757 308.496 185.885 308.368 186.013 cv
308.176 186.141 308.112 186.332 307.984 186.46 cv
307.856 186.588 307.792 186.716 307.664 186.78 cv
309.199 186.78 li
309.327 186.78 309.455 186.78 309.519 186.78 cv
309.583 186.78 309.646 186.78 309.71 186.716 cv
309.774 186.716 309.838 186.652 309.838 186.588 cv
309.902 186.524 309.902 186.396 309.966 186.268 cv
310.35 186.268 li
310.35 186.46 310.35 186.652 310.35 186.908 cv
310.286 187.1 310.286 187.292 310.286 187.483 cv
306.769 187.483 li
306.769 187.228 li
306.833 187.1 306.897 186.972 307.025 186.844 cv
307.089 186.652 307.217 186.524 307.281 186.396 cv
307.408 186.205 307.536 186.077 307.664 185.885 cv
307.856 185.757 307.984 185.565 308.176 185.437 cv
308.432 185.181 308.623 184.926 308.815 184.734 cv
308.943 184.606 309.071 184.414 309.199 184.286 cv
309.263 184.158 309.327 183.966 309.391 183.903 cv
309.391 183.775 309.391 183.647 309.391 183.519 cv
309.391 183.327 309.391 183.199 309.327 183.071 cv
309.327 183.007 309.263 182.879 309.199 182.816 cv
309.135 182.688 309.007 182.624 308.879 182.624 cv
308.815 182.56 308.623 182.56 308.496 182.56 cv
308.24 182.56 308.048 182.624 307.856 182.752 cv
307.664 182.879 307.536 183.071 307.472 183.327 cv
306.897 183.327 li
306.897 182.56 li
307.281 182.368 307.6 182.304 307.856 182.24 cv
308.176 182.176 308.432 182.112 308.687 182.112 cv
ef
313.931 181.217 mo
313.803 181.217 313.739 181.281 313.611 181.345 cv
313.483 181.409 313.355 181.473 313.227 181.665 cv
313.036 181.792 312.972 181.984 312.844 182.112 cv
312.78 182.304 312.716 182.496 312.652 182.752 cv
312.588 183.071 li
312.524 183.263 312.524 183.391 312.524 183.519 cv
312.524 183.711 312.588 183.839 312.652 183.903 cv
312.78 183.966 312.908 184.03 313.099 184.03 cv
313.355 184.03 313.547 183.903 313.739 183.711 cv
313.995 183.519 314.123 183.263 314.25 182.943 cv
314.314 182.624 314.378 182.304 314.378 181.984 cv
314.378 181.728 314.378 181.537 314.314 181.409 cv
314.186 181.281 314.123 181.217 313.931 181.217 cv
cp
313.099 179.427 mo
313.419 179.427 li
312.908 181.473 li
312.972 181.537 li
313.227 181.217 313.419 181.025 313.611 180.961 cv
313.803 180.833 313.995 180.769 314.25 180.769 cv
314.506 180.769 314.762 180.833 314.89 181.025 cv
315.018 181.281 315.146 181.537 315.146 181.92 cv
315.146 182.304 315.018 182.752 314.826 183.135 cv
314.698 183.519 314.442 183.839 314.123 184.03 cv
313.867 184.286 313.483 184.414 313.163 184.414 cv
312.972 184.414 312.844 184.35 312.652 184.35 cv
312.524 184.286 312.396 184.222 312.268 184.158 cv
312.204 184.222 312.14 184.222 312.076 184.286 cv
311.885 184.414 li
311.629 184.286 li
312.46 180.45 li
312.524 180.322 312.524 180.194 312.524 180.13 cv
312.524 180.066 312.524 180.066 312.524 180.002 cv
312.524 179.874 312.524 179.81 312.46 179.81 cv
312.396 179.746 312.268 179.746 312.076 179.746 cv
312.14 179.49 li
ef
318.151 182.496 mo
317.895 182.496 317.639 182.624 317.384 182.879 cv
317.192 183.071 317 183.391 316.872 183.775 cv
317.32 183.775 317.639 183.775 317.895 183.647 cv
318.151 183.583 318.343 183.455 318.471 183.391 cv
318.535 183.263 318.599 183.135 318.599 182.943 cv
318.599 182.815 318.535 182.688 318.471 182.624 cv
318.407 182.56 318.279 182.496 318.151 182.496 cv
cp
318.343 182.112 mo
318.599 182.112 318.854 182.24 318.982 182.368 cv
319.174 182.496 319.238 182.688 319.238 182.879 cv
319.238 183.711 318.407 184.158 316.808 184.158 cv
316.808 184.286 316.808 184.414 316.808 184.606 cv
316.808 184.798 316.808 184.99 316.936 185.117 cv
317.064 185.245 317.192 185.309 317.384 185.309 cv
317.639 185.309 317.831 185.245 318.023 185.117 cv
318.215 185.054 318.471 184.862 318.726 184.67 cv
318.982 184.926 li
318.662 185.245 318.407 185.437 318.087 185.565 cv
317.831 185.693 317.512 185.757 317.192 185.757 cv
316.872 185.757 316.552 185.693 316.361 185.437 cv
316.169 185.245 316.041 184.926 316.041 184.542 cv
316.041 184.286 316.105 184.03 316.233 183.711 cv
316.297 183.455 316.424 183.135 316.68 182.943 cv
316.872 182.688 317.064 182.496 317.384 182.368 cv
317.639 182.24 317.959 182.112 318.343 182.112 cv
ef
320.709 185.629 mo
322.627 185.629 li
322.627 184.99 li
320.709 184.99 li
cp
f
325.824 182.176 mo
326.08 182.176 li
326.08 182.304 326.08 182.432 326.08 182.56 cv
326.08 182.688 326.08 182.816 326.08 182.879 cv
326.016 183.007 326.016 183.135 326.016 183.263 cv
326.016 186.396 li
326.016 186.46 326.08 186.524 326.08 186.588 cv
326.08 186.652 326.08 186.716 326.08 186.78 cv
326.08 186.78 326.08 186.844 326.144 186.844 cv
326.144 186.908 326.208 186.908 326.208 186.972 cv
326.208 186.972 326.272 186.972 326.336 187.036 cv
326.4 187.036 326.464 187.036 326.527 187.036 cv
326.655 187.1 326.719 187.1 326.847 187.1 cv
326.975 187.1 327.103 187.1 327.295 187.1 cv
327.295 187.483 li
324.034 187.483 li
324.034 187.1 li
324.162 187.1 324.289 187.1 324.417 187.1 cv
324.545 187.1 324.609 187.1 324.737 187.036 cv
324.801 187.036 324.865 187.036 324.929 187.036 cv
324.929 187.036 324.993 186.972 325.057 186.972 cv
325.121 186.908 li
325.185 186.844 325.185 186.844 325.185 186.78 cv
325.185 186.716 325.249 186.652 325.249 186.588 cv
325.249 186.524 325.249 186.46 325.249 186.396 cv
325.249 183.391 li
325.249 183.327 325.249 183.263 325.185 183.199 cv
325.121 183.135 325.057 183.135 324.993 183.135 cv
324.929 183.135 324.801 183.199 324.609 183.263 cv
324.481 183.327 324.226 183.455 323.97 183.647 cv
323.97 183.583 323.906 183.519 323.906 183.455 cv
323.842 183.391 323.842 183.327 323.778 183.263 cv
324.098 183.071 324.481 182.879 324.801 182.688 cv
325.121 182.496 325.44 182.368 325.824 182.176 cv
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DKVNSR+DengXian-GBK-EUC-H-Identity-H uf
/DKVNSR+DengXian-GBK-EUC-H /CIDFont ur
/DKVNSQ+SimSun-GBK-EUC-V-Identity-V uf
/DKVNSQ+SimSun-GBK-EUC-V /CIDFont ur
/DKVNSO+Calibri*1 uf
/DKVNSO+Calibri uf
/DHAAAA+Calibri uf
/DKVNSN+SimSun-GBK-EUC-H-Identity-H uf
/DKVNSN+SimSun-GBK-EUC-H /CIDFont ur
/DKVNSP+Calibri-Identity-H uf
/DKVNSP+Calibri /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
