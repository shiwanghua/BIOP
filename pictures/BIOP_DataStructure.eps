%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: BIOP_DataStructure.pdf
%%Creator: Adobe Acrobat 20.9.0
%%For: Administrator
%%CreationDate: 2021/9/19, 21:57:06
%%BoundingBox: 0 0 480 236
%%HiResBoundingBox: 0 0 479.6104 235.4676
%%CropBox: 0 0 479.6104 235.4676
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1062 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c017 91.164374, 2020/03/05-20:41:30        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2021-09-19T21:56:12+08:00"
   xmp:CreatorTool="Acrobat PDFMaker 20 Visio 版"
   xmp:ModifyDate="2021-09-19T21:56:51+08:00"
   xmp:MetadataDate="2021-09-19T21:56:51+08:00"
   pdf:Producer="Acrobat Distiller 20.0 (Windows)"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:ab37bcd5-7f9b-4214-9d8c-552c4453e0f1"
   xmpMM:InstanceID="uuid:3632a116-2e6e-4cdd-9c45-f495067556f4">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>石 望华</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -235.468 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-5 0 mo
1.52588e-5 235.468 li
479.61 235.468 li
479.61 0 li
cp
clp
gsave
191.688 .057251 mo
476.043 .057251 li
476.043 37.9116 li
191.688 37.9116 li
cp
eclp
.999645 lw
0 lc
0 lj
8 ml
[] 0 dsh
false sadj
192.135 2.80676 mo
475.532 2.80676 li
475.532 31.0696 li
192.135 31.0696 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.770321 .559594 0 0 cmyk
@
grestore
false sop
/0 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNK+DengXian-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HFDYNK+DengXian-GBK-EUC-H)
%%Title: (HFDYNK+DengXian-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HFDYNK+DengXian-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-141 -253 1151 954} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 29235 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 13 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
28639 <001C60D8A8C9B74B0CB5DF6C84CF353B772D85B4038C184407812FD2> |
28674 <001C60D8A8C9B7FE5AD20AE56213796D50B188B2C5CBFF678B1A9D104
AF97FCBEA6169C9DF4E313B2A55EC833C42B1AB0E8A13DA65F86C2C2AEDEA104
DE02E7F576D982DF30B78FB76CCFB07A8EB8179B2F3818BC620295E8F285682C
058E01E22BECBF493516051F07EB2FFD039B1F2347AD2EEC2F8D2F7E17A3B95F
D9B5890C6237E6820> |
28682 <001C60D8A8C9B6317D7763A655669C6E02448AAF388F9364FE21A14E5
285A2D62023D21C941644EE4B175DE88CF4C48ACE81BC234046568E7F7423114
120142242F4073B0692C01A1DF9EF591DB9537DD9975603936B7DBE5CAFE64FE
E70E042E0FC965DC960BE64BDF0895A91F4698C15> |
28595 <001C60D8A8C9B8581AA5> |
28629 <001C60D8A8C9B7ECD94E209CF2E001D5BD73F2D35607F6F9CFB8183DF
05975139416B10983007BAF37315FB80AF3F59A7AFD6F4F1B834AE085B526220
6D57D2525DF8F938763EDC8C63383C21ECDFE5092FB02C978A1A94F951D9B028
E65FC2284B0FFC51184F29C0959E7954453AB3D017B2FF221846C842BD6C3E1F
1DB394CFA79FF0D9FB9240F77F3981762AF037B68A10511FE361698819099> |
28680 <001C60D8A8C9B794D31A1053B9961E70BFFA47467F8C115DB76858BE9
1B87F72C52941282A1449AD31A6C6FC3341ED63E1F429CA97F8F026C9971DD20
E5603656286CABFF4097310E86D85B7B38F800E217098445F68487CB3737B3CF
9E030780CD291611690AE824EE2> |
28662 <001C60D8A8C9B776A06C6FC231F3BF82B95E430F6D347A409EECD485F
9B406FA6336964C8BF7664E2AB055B44D3A06959A7781CE4D2FEDDD996C546F2
2FC5837E64BBC80EF4699966E80B1E4ED4A9C3550A8BDD97A63B0696CF3EE432
A03807D55000A523F2214> |
28670 <001C60D8A8C9B745265EC238AF683B8F4A353D25470A8B72A26DB7844
3BE3B1F44B4CA272249F727C6F8216C093BF16FCF6CA661AE> |
28664 <001C60D8A8C9B7B9B9DE64C375A9DBACE95282B2312E3D85E750527CC
1CB7ECCD03A956DF6AAF4A7168B7148981EC76A8077847319739BD7AFC9C273C
D7ABB104CCAF232DF037808051A4E0AEF540B0A7B3AF3F3A775F4BE57DC95A2B
88BC481E3C3C5CD29A90412FD55B68E26377057408C4E5640926FF2E1A05E5CA
C44778E8205CC9A62299713EA1CA0206B13> |
28679 <001C60D8A8C9B82C91E1D9CCF2FA7601C6026EBD33736DF344E87F732
E6204D98A966E57A2BEBF7AABB5C82E1C8966BD3BF60CBD042BFA41F5E6D694B
02FA7FC2341B98FA0788772F503A3DD89703A16E741DB3660B5C616> |
28668 <001C60D8A8C9B88A65BA9079859C0FCC394F785DDA5330D8BBC923C4A
04A6379E7CCB9> |
28678 <001C60D8A8C9B70582CC565B4883086947A53D700FC22CC37B8FFB6B8
A85AF70378C60D0C6B0C2EF31395945EDFB7DDDE1D0CC898F5B0E9FE9A7A1C3A
4C1BB863EE6725F120C3FDCDE3A35D1AD416BA23B64066650F85DCA6BABE2743
5AEFC317463C12AE039762DAEB1FA885BDDABB217799AFC3B5D24F6EB793F0F5
A070427208AF010078BB18257D47DFD185F390ACEF5FCC7BCA93E3E3197F813A
1D3153232223F7C7C1200BBEA57795F95EDA23BD6ECCB2B42F454E44B3FFBA32
4E2485F90A1F8549AFBDBA375D3F087391D68792DB8B3268EAA6F0D> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HFDYNK+DengXian-GBK-EUC-H-Identity-H /Identity-H 0 [/HFDYNK+DengXian-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [11.0397 0 0 -11.0183 0 0 ]msf
199.425 20.7106 mo
(o\337p\002p\012o\263o\325p\010o\366o\376o\370p\007o\263o\337o\374p\006p\007)
[5.08928 6.39194 7.69456 2.87801 6.13809 6.04962 5.05508 5.17654 5.6413 3.47736 2.87802 5.17552 
2.56238 4.40924 0 ]xsh
.499822 lw
0 lc
0 lj
8 ml
[] 0 dsh
false sadj
277.244 31.1336 mo
277.244 2.80676 li
.770321 .559594 0 0 cmyk
@
305.507 2.80676 mo
305.507 31.1336 li
@
333.706 2.67889 mo
333.706 31.0057 li
@
362.16 31.1336 mo
362.16 2.80676 li
@
390.487 2.80676 mo
390.487 31.1336 li
@
418.942 2.67889 mo
418.942 31.0057 li
@
447.141 2.67889 mo
447.141 31.0057 li
@
288.881 9.96838 mo
289.457 9.96838 li
287.283 19.6877 li
287.155 20.2632 287.091 20.7108 287.091 20.9666 cv
287.091 21.2224 287.091 21.3503 287.219 21.4781 cv
287.283 21.606 287.411 21.67 287.539 21.67 cv
287.73 21.67 287.922 21.5421 288.114 21.4142 cv
288.306 21.2863 288.562 21.0306 288.945 20.5829 cv
289.457 21.0945 li
288.881 21.67 288.434 22.1176 288.05 22.3094 cv
287.73 22.5652 287.283 22.6292 286.835 22.6292 cv
286.452 22.6292 286.196 22.5012 285.94 22.2455 cv
285.684 21.9258 285.62 21.606 285.62 21.1584 cv
285.62 20.7748 285.684 20.1993 285.812 19.4959 cv
287.411 12.4622 li
287.475 12.1425 287.539 11.8867 287.539 11.6948 cv
287.603 11.503 287.603 11.3112 287.603 11.1833 cv
287.603 10.9915 287.603 10.8636 287.539 10.7996 cv
287.475 10.6718 287.347 10.6078 287.219 10.6078 cv
287.091 10.5439 286.899 10.5439 286.58 10.4799 cv
286.707 10.0323 li
.750179 .679652 .670192 .901488 cmyk
ef
293.869 18.5368 mo
293.549 18.5368 293.294 18.6008 293.102 18.7286 cv
292.91 18.9205 292.718 19.1123 292.59 19.432 cv
292.462 19.7517 292.398 20.1354 292.334 20.519 cv
292.334 20.9667 292.27 21.4782 292.27 22.0536 cv
292.27 22.6931 292.334 23.2047 292.398 23.7162 cv
292.462 24.1638 292.526 24.5475 292.654 24.8672 cv
292.782 25.1229 292.974 25.3787 293.166 25.5066 cv
293.357 25.6345 293.613 25.6984 293.869 25.6984 cv
294.125 25.6984 294.381 25.6345 294.572 25.5066 cv
294.764 25.3787 294.892 25.1869 295.02 24.8672 cv
295.148 24.6114 295.276 24.2277 295.34 23.8441 cv
295.404 23.3965 295.404 22.8849 295.404 22.3094 cv
295.404 21.6061 295.404 21.0945 295.276 20.583 cv
295.212 20.1354 295.148 19.7517 295.02 19.432 cv
294.892 19.1123 294.7 18.8565 294.508 18.7286 cv
294.317 18.6008 294.125 18.5368 293.869 18.5368 cv
cp
293.869 17.8974 mo
294.381 17.8974 294.828 17.9613 295.212 18.1531 cv
295.532 18.345 295.851 18.6647 296.043 18.9844 cv
296.299 19.368 296.491 19.7517 296.555 20.2632 cv
296.682 20.7748 296.746 21.3503 296.746 22.0536 cv
296.746 23.4604 296.491 24.5475 295.979 25.2509 cv
295.468 26.0181 294.764 26.3379 293.805 26.3379 cv
292.846 26.3379 292.143 26.0181 291.631 25.3148 cv
291.183 24.6114 290.928 23.5883 290.928 22.1816 cv
290.928 21.4782 291.055 20.8387 291.183 20.2632 cv
291.311 19.7517 291.503 19.3041 291.759 18.9205 cv
292.015 18.6008 292.334 18.345 292.718 18.1531 cv
293.038 17.9613 293.421 17.8974 293.869 17.8974 cv
ef
317.144 9.84052 mo
317.656 9.84052 li
315.482 19.5599 li
315.354 20.1354 315.29 20.5829 315.29 20.8387 cv
315.29 21.0945 315.354 21.2863 315.418 21.3503 cv
315.482 21.4781 315.61 21.5421 315.802 21.5421 cv
315.993 21.5421 316.121 21.4781 316.377 21.2863 cv
316.569 21.1584 316.825 20.9027 317.208 20.519 cv
317.72 20.9666 li
317.144 21.6061 316.633 21.9897 316.313 22.1815 cv
315.929 22.4373 315.546 22.5652 315.098 22.5652 cv
314.714 22.5652 314.395 22.3734 314.203 22.1176 cv
313.947 21.8618 313.819 21.4781 313.819 21.0306 cv
313.819 20.6469 313.947 20.0714 314.075 19.368 cv
315.674 12.3343 li
315.738 12.0146 315.802 11.7588 315.802 11.567 cv
315.865 11.3751 315.865 11.2473 315.865 11.0554 cv
315.865 10.8636 315.802 10.7357 315.738 10.6718 cv
315.674 10.5439 315.61 10.4799 315.482 10.4799 cv
315.354 10.416 315.162 10.416 314.842 10.3521 cv
314.906 9.90448 li
ef
322.26 17.8334 mo
322.643 17.8334 li
322.643 18.0253 322.643 18.2811 322.643 18.4728 cv
322.643 18.6647 322.643 18.7926 322.643 18.9844 cv
322.643 19.1763 322.643 19.368 322.643 19.496 cv
322.643 24.4196 li
322.643 24.5475 322.643 24.6754 322.643 24.7393 cv
322.643 24.8672 322.643 24.9312 322.643 24.9951 cv
322.707 25.059 322.707 25.123 322.771 25.1869 cv
322.771 25.1869 322.835 25.2509 322.835 25.3148 cv
322.899 25.3148 322.963 25.3787 323.091 25.3787 cv
323.155 25.4427 323.283 25.4427 323.411 25.5066 cv
323.539 25.5066 323.667 25.5066 323.858 25.5066 cv
324.05 25.5066 324.306 25.5706 324.562 25.5706 cv
324.562 26.0821 li
319.446 26.0821 li
319.446 25.5706 li
319.702 25.5706 319.894 25.5066 320.086 25.5066 cv
320.278 25.5066 320.405 25.5066 320.533 25.5066 cv
320.661 25.4427 320.789 25.4427 320.853 25.3787 cv
320.917 25.3787 320.981 25.3787 321.045 25.3148 cv
321.109 25.3148 321.173 25.2509 321.173 25.1869 cv
321.237 25.123 321.237 25.123 321.301 25.059 cv
321.301 24.9312 321.365 24.8672 321.365 24.8032 cv
321.365 24.6754 321.365 24.5475 321.365 24.4196 cv
321.365 19.8157 li
321.365 19.6238 321.365 19.496 321.301 19.432 cv
321.237 19.368 321.109 19.368 320.981 19.368 cv
320.853 19.368 320.661 19.432 320.405 19.5599 cv
320.15 19.6878 319.83 19.8796 319.382 20.1354 cv
319.318 20.0715 319.254 19.9435 319.254 19.8796 cv
319.19 19.7517 319.127 19.6878 319.063 19.5599 cv
319.638 19.2402 320.15 18.9844 320.661 18.6647 cv
321.173 18.4089 321.748 18.0892 322.26 17.8334 cv
ef
345.471 9.84052 mo
345.983 9.84052 li
343.873 19.5599 li
343.745 20.1354 343.681 20.5829 343.681 20.8387 cv
343.681 21.0945 343.681 21.2863 343.745 21.3503 cv
343.873 21.4781 344 21.5421 344.128 21.5421 cv
344.32 21.5421 344.512 21.4781 344.704 21.2863 cv
344.896 21.1584 345.151 20.9027 345.535 20.519 cv
346.047 20.9666 li
345.471 21.6061 345.024 21.9897 344.64 22.1815 cv
344.256 22.4373 343.873 22.5652 343.425 22.5652 cv
343.041 22.5652 342.722 22.3734 342.53 22.1176 cv
342.274 21.8618 342.21 21.4781 342.21 21.0306 cv
342.21 20.6469 342.274 20.0714 342.402 19.368 cv
344 12.3343 li
344.064 12.0146 344.128 11.7588 344.128 11.567 cv
344.192 11.3751 344.192 11.2473 344.192 11.0554 cv
344.192 10.8636 344.192 10.7357 344.128 10.6718 cv
344.064 10.5439 343.937 10.4799 343.809 10.4799 cv
343.681 10.416 343.489 10.416 343.169 10.3521 cv
343.297 9.90448 li
ef
350.459 17.7695 mo
350.906 17.7695 351.29 17.8334 351.61 17.8973 cv
351.929 18.0253 352.185 18.1531 352.377 18.345 cv
352.569 18.5368 352.697 18.7286 352.825 18.9205 cv
352.889 19.1762 352.953 19.432 352.953 19.7517 cv
352.953 19.8796 352.889 20.0714 352.889 20.1993 cv
352.889 20.3272 352.825 20.4551 352.761 20.6469 cv
352.697 20.7748 352.633 20.9027 352.569 21.0306 cv
352.441 21.1584 352.313 21.3503 352.185 21.4781 cv
352.057 21.6061 351.929 21.7979 351.802 21.9897 cv
351.61 22.1815 351.418 22.3734 351.226 22.5652 cv
351.034 22.757 350.778 22.9489 350.587 23.2047 cv
350.331 23.3965 350.139 23.6522 349.947 23.8441 cv
349.691 24.0999 349.5 24.2917 349.308 24.4835 cv
349.18 24.6754 348.988 24.8672 348.924 25.059 cv
351.29 25.059 li
351.482 25.059 351.674 25.059 351.802 25.059 cv
351.865 24.9951 351.993 24.9951 352.057 24.9311 cv
352.121 24.8672 352.249 24.8032 352.249 24.6754 cv
352.313 24.6114 352.377 24.4835 352.441 24.2917 cv
353.08 24.2917 li
353.016 24.5474 353.016 24.8672 353.016 25.1869 cv
353.016 25.5066 352.953 25.8263 352.953 26.0821 cv
347.517 26.0821 li
347.517 25.7624 li
347.581 25.5706 347.709 25.3148 347.837 25.059 cv
347.965 24.8672 348.157 24.6114 348.285 24.4196 cv
348.477 24.1638 348.668 23.908 348.924 23.7162 cv
349.116 23.4604 349.372 23.2047 349.627 22.8849 cv
350.011 22.5013 350.331 22.1815 350.587 21.8618 cv
350.842 21.6061 351.034 21.3503 351.226 21.0945 cv
351.354 20.9027 351.482 20.7109 351.482 20.519 cv
351.546 20.3272 351.61 20.1354 351.61 19.8796 cv
351.61 19.6877 351.546 19.4959 351.482 19.3041 cv
351.418 19.1123 351.354 18.9205 351.226 18.7925 cv
351.098 18.6647 350.97 18.6007 350.778 18.5368 cv
350.587 18.4728 350.395 18.4089 350.203 18.4089 cv
349.755 18.4089 349.436 18.5368 349.18 18.7286 cv
348.924 18.9844 348.668 19.2402 348.54 19.6877 cv
347.709 19.6877 li
347.709 18.4089 li
348.221 18.2171 348.732 18.0253 349.18 17.8973 cv
349.691 17.8334 350.075 17.7695 350.459 17.7695 cv
ef
373.862 9.84052 mo
374.373 9.84052 li
372.199 19.5599 li
372.072 20.1354 372.008 20.5829 372.008 20.8387 cv
372.008 21.0945 372.072 21.2863 372.135 21.3503 cv
372.199 21.4781 372.327 21.5421 372.455 21.5421 cv
372.647 21.5421 372.839 21.4781 373.031 21.2863 cv
373.222 21.1584 373.542 20.9027 373.862 20.519 cv
374.373 20.9666 li
373.798 21.6061 373.35 21.9897 372.967 22.1815 cv
372.647 22.4373 372.199 22.5652 371.816 22.5652 cv
371.432 22.5652 371.112 22.3734 370.857 22.1176 cv
370.665 21.8618 370.537 21.4781 370.537 21.0306 cv
370.537 20.6469 370.601 20.0714 370.793 19.368 cv
372.327 12.3343 li
372.391 12.0146 372.455 11.7588 372.519 11.567 cv
372.519 11.3751 372.519 11.2473 372.519 11.0554 cv
372.519 10.8636 372.519 10.7357 372.455 10.6718 cv
372.391 10.5439 372.263 10.4799 372.135 10.4799 cv
372.072 10.416 371.816 10.416 371.496 10.3521 cv
371.624 9.90448 li
ef
378.786 17.7695 mo
379.105 17.7695 379.425 17.8334 379.745 17.8973 cv
380.064 17.9613 380.32 18.0892 380.512 18.2171 cv
380.768 18.345 380.896 18.5368 381.024 18.7925 cv
381.151 18.9844 381.215 19.2402 381.215 19.5599 cv
381.215 19.8157 381.215 20.0714 381.088 20.2632 cv
381.024 20.4551 380.896 20.6469 380.768 20.8387 cv
380.576 21.0306 380.384 21.1584 380.128 21.2863 cv
379.937 21.4142 379.681 21.6061 379.361 21.7339 cv
379.361 21.7979 li
379.617 21.8618 379.937 21.9258 380.128 22.0536 cv
380.384 22.1176 380.64 22.3094 380.832 22.4373 cv
381.024 22.6292 381.151 22.821 381.279 23.0768 cv
381.343 23.2686 381.407 23.5244 381.407 23.8441 cv
381.407 24.1638 381.343 24.4835 381.215 24.8032 cv
381.088 25.059 380.896 25.3148 380.64 25.5066 cv
380.384 25.7624 380.064 25.8903 379.681 26.0181 cv
379.297 26.146 378.849 26.21 378.338 26.21 cv
377.954 26.21 377.571 26.21 377.123 26.0821 cv
376.739 26.0181 376.356 25.8903 375.972 25.7624 cv
375.972 24.4196 li
376.803 24.4196 li
376.867 24.6114 376.931 24.8032 377.059 24.9311 cv
377.123 25.1229 377.251 25.2508 377.379 25.3148 cv
377.507 25.4426 377.635 25.5066 377.826 25.5066 cv
377.954 25.5706 378.146 25.5706 378.402 25.5706 cv
378.913 25.5706 379.361 25.4426 379.617 25.1869 cv
379.937 24.9311 380.064 24.5474 380.064 23.972 cv
380.064 23.3965 379.873 23.0128 379.489 22.6931 cv
379.105 22.4373 378.594 22.2455 377.826 22.2455 cv
377.251 22.2455 li
377.251 21.67 li
377.699 21.6061 378.082 21.5421 378.402 21.4781 cv
378.786 21.3503 379.041 21.2224 379.233 21.0306 cv
379.489 20.9027 379.617 20.7109 379.745 20.4551 cv
379.873 20.2632 379.873 20.0075 379.873 19.7517 cv
379.873 19.3041 379.809 18.9844 379.553 18.7925 cv
379.297 18.5368 378.913 18.4089 378.466 18.4089 cv
378.082 18.4089 377.762 18.5368 377.507 18.7286 cv
377.251 18.9205 376.995 19.2402 376.867 19.6877 cv
376.036 19.6877 li
376.036 18.4089 li
376.548 18.2171 377.059 18.0253 377.507 17.9613 cv
377.954 17.8334 378.402 17.7695 378.786 17.7695 cv
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNK+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HFDYNK+DengXian-GBK-EUC-H 1 GetGlyphDirectory
28694 <001C60D8A8C9B62E09DE67EB61250D9A06B79A926C16A2D37591A26AB
67078E700175B7B58EBB0E54E50> |
!
end
end end
%ADOEndSubsetFont
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [17.9998 0 0 -17.9645 0 0 ]msf
397.713 22.373 mo
(p\026)sh
423.993 11.3112 mo
424.377 11.3112 li
422.715 18.9205 li
422.587 19.368 422.523 19.6877 422.523 19.8796 cv
422.523 20.0714 422.587 20.1993 422.651 20.3272 cv
422.715 20.3912 422.778 20.4551 422.906 20.4551 cv
423.034 20.4551 423.226 20.3912 423.354 20.2632 cv
423.546 20.1354 423.738 19.9435 423.993 19.6238 cv
424.441 20.0075 li
423.993 20.4551 423.61 20.7748 423.354 20.9666 cv
423.034 21.1584 422.715 21.2224 422.395 21.2224 cv
422.075 21.2224 421.819 21.0945 421.691 20.9027 cv
421.5 20.6469 421.372 20.3912 421.372 20.0714 cv
421.372 19.7517 421.436 19.3041 421.564 18.7286 cv
422.842 13.2295 li
422.842 13.0377 422.906 12.8458 422.906 12.6541 cv
422.97 12.5261 422.97 12.3983 422.97 12.2704 cv
422.97 12.1425 422.97 12.0146 422.906 11.9506 cv
422.842 11.8867 422.778 11.8228 422.651 11.8228 cv
422.587 11.7589 422.395 11.7589 422.203 11.7589 cv
422.267 11.3752 li
.750179 .679652 .670192 .901488 cmyk
ef
428.725 19.5599 mo
428.597 19.5599 428.405 19.6238 428.214 19.6877 cv
428.086 19.8157 427.894 19.9435 427.702 20.1354 cv
427.51 20.3272 427.382 20.5829 427.254 20.8387 cv
427.063 21.1584 426.999 21.4781 426.871 21.8618 cv
426.871 22.0536 426.807 22.1815 426.807 22.3734 cv
426.743 22.5652 426.743 22.6931 426.743 22.8849 cv
426.743 23.1407 426.807 23.3325 426.935 23.3965 cv
427.063 23.5244 427.254 23.5883 427.51 23.5883 cv
427.766 23.5883 428.022 23.5244 428.278 23.3325 cv
428.469 23.1407 428.661 22.9489 428.853 22.6292 cv
429.045 22.3734 429.173 22.0536 429.237 21.67 cv
429.301 21.3503 429.365 20.9666 429.365 20.6469 cv
429.365 20.2632 429.301 20.0075 429.237 19.8157 cv
429.109 19.6877 428.981 19.5599 428.725 19.5599 cv
cp
427.574 17.194 mo
427.958 17.194 li
427.254 20.0075 li
427.318 20.0714 li
427.446 19.8796 427.638 19.6877 427.766 19.5599 cv
427.958 19.432 428.086 19.3041 428.214 19.1762 cv
428.405 19.1122 428.533 19.0483 428.661 18.9844 cv
428.853 18.9205 428.981 18.9205 429.109 18.9205 cv
429.556 18.9205 429.812 19.0483 430.068 19.3041 cv
430.26 19.6238 430.388 20.0075 430.388 20.5829 cv
430.388 21.0306 430.26 21.4781 430.132 21.9258 cv
430.004 22.3734 429.812 22.6931 429.556 23.0128 cv
429.301 23.3325 428.981 23.5883 428.661 23.7802 cv
428.341 23.9719 427.958 24.0999 427.574 24.0999 cv
427.382 24.0999 427.127 24.0359 426.935 23.9719 cv
426.743 23.9719 426.551 23.8441 426.359 23.7802 cv
426.295 23.7802 426.167 23.8441 426.104 23.908 cv
425.976 23.9719 425.912 24.0359 425.848 24.0999 cv
425.784 24.0359 425.72 24.0359 425.656 24.0359 cv
425.592 24.0359 425.528 23.9719 425.464 23.9719 cv
426.679 18.6647 li
426.679 18.4728 426.743 18.345 426.743 18.217 cv
426.743 18.1531 426.807 18.0253 426.807 17.9613 cv
426.807 17.8973 426.743 17.8334 426.743 17.7695 cv
426.743 17.7695 426.679 17.7055 426.615 17.7055 cv
426.615 17.6416 426.551 17.6416 426.423 17.6416 cv
426.359 17.5776 426.231 17.5776 426.104 17.5776 cv
426.231 17.2579 li
ef
432.114 21.4781 mo
437.805 21.4781 li
437.805 20.7109 li
432.114 20.7109 li
cp
f
441.642 17.5137 mo
442.025 17.5137 442.281 17.5776 442.537 17.6415 cv
442.793 17.7695 442.984 17.8334 443.176 17.9613 cv
443.304 18.0892 443.432 18.281 443.496 18.4728 cv
443.56 18.6647 443.56 18.8565 443.56 19.0483 cv
443.56 19.1762 443.56 19.3041 443.56 19.4319 cv
443.56 19.4959 443.496 19.6238 443.432 19.7517 cv
443.432 19.8796 443.368 19.9435 443.304 20.0714 cv
443.176 20.1993 443.112 20.2632 442.984 20.3911 cv
442.921 20.519 442.793 20.6469 442.665 20.7748 cv
442.537 20.9026 442.409 21.0945 442.217 21.2224 cv
442.089 21.4142 441.897 21.5421 441.77 21.7339 cv
441.578 21.9258 441.386 22.0536 441.258 22.2455 cv
441.066 22.4373 440.938 22.5652 440.81 22.757 cv
440.683 22.8849 440.555 23.0128 440.491 23.1407 cv
442.281 23.1407 li
442.473 23.1407 442.601 23.1407 442.665 23.1407 cv
442.793 23.1407 442.857 23.1407 442.921 23.0767 cv
442.984 23.0128 443.048 22.9489 443.048 22.8849 cv
443.112 22.821 443.176 22.6931 443.24 22.5652 cv
443.688 22.5652 li
443.688 22.821 443.624 23.0128 443.624 23.2686 cv
443.624 23.5244 443.624 23.7162 443.56 23.9719 cv
439.34 23.9719 li
439.34 23.7162 li
439.468 23.5244 439.532 23.3964 439.659 23.2046 cv
439.723 23.0128 439.851 22.821 439.979 22.6931 cv
440.171 22.5012 440.299 22.3094 440.491 22.1176 cv
440.619 21.9258 440.81 21.7339 441.002 21.5421 cv
441.322 21.2224 441.578 20.9666 441.77 20.7108 cv
441.961 20.519 442.153 20.3271 442.217 20.1353 cv
442.345 19.9435 442.409 19.8156 442.473 19.6238 cv
442.537 19.4959 442.537 19.368 442.537 19.1762 cv
442.537 18.9844 442.537 18.8565 442.473 18.7286 cv
442.409 18.6007 442.345 18.4728 442.281 18.3449 cv
442.153 18.281 442.089 18.1531 441.897 18.0892 cv
441.77 18.0892 441.642 18.0252 441.45 18.0252 cv
441.13 18.0252 440.874 18.0892 440.683 18.281 cv
440.491 18.4728 440.299 18.6647 440.171 18.9844 cv
439.532 18.9844 li
439.532 18.0252 li
439.979 17.8973 440.363 17.7695 440.683 17.6415 cv
441.066 17.5776 441.386 17.5137 441.642 17.5137 cv
ef
452.192 11.3112 mo
452.64 11.3112 li
450.913 18.9205 li
450.849 19.368 450.786 19.6877 450.786 19.8796 cv
450.786 20.0714 450.786 20.1993 450.849 20.3272 cv
450.913 20.3912 451.041 20.4551 451.169 20.4551 cv
451.297 20.4551 451.425 20.3912 451.617 20.2632 cv
451.745 20.1354 451.937 19.9435 452.256 19.6238 cv
452.64 20.0075 li
452.192 20.4551 451.809 20.7748 451.553 20.9666 cv
451.297 21.1584 450.977 21.2224 450.594 21.2224 cv
450.338 21.2224 450.082 21.0945 449.89 20.9027 cv
449.699 20.6469 449.635 20.3912 449.635 20.0714 cv
449.635 19.7517 449.699 19.3041 449.826 18.7286 cv
451.041 13.2295 li
451.105 13.0377 451.169 12.8458 451.169 12.6541 cv
451.169 12.5261 451.169 12.3983 451.169 12.2704 cv
451.169 12.1425 451.169 12.0146 451.105 11.9506 cv
451.041 11.8867 450.977 11.8228 450.913 11.8228 cv
450.786 11.7589 450.658 11.7589 450.402 11.7589 cv
450.466 11.3752 li
ef
456.988 19.5599 mo
456.796 19.5599 456.668 19.6238 456.477 19.6877 cv
456.285 19.8157 456.093 19.9435 455.965 20.1354 cv
455.773 20.3272 455.581 20.5829 455.453 20.8387 cv
455.326 21.1584 455.198 21.4781 455.134 21.8618 cv
455.07 22.0536 455.07 22.1815 455.006 22.3734 cv
455.006 22.5652 454.942 22.6931 454.942 22.8849 cv
454.942 23.1407 455.006 23.3325 455.134 23.3965 cv
455.262 23.5244 455.453 23.5883 455.709 23.5883 cv
456.029 23.5883 456.285 23.5244 456.477 23.3325 cv
456.732 23.1407 456.924 22.9489 457.052 22.6292 cv
457.244 22.3734 457.372 22.0536 457.436 21.67 cv
457.564 21.3503 457.628 20.9666 457.628 20.6469 cv
457.628 20.2632 457.564 20.0075 457.436 19.8157 cv
457.372 19.6877 457.18 19.5599 456.988 19.5599 cv
cp
455.773 17.194 mo
456.157 17.194 li
455.453 20.0075 li
455.517 20.0714 li
455.709 19.8796 455.837 19.6877 456.029 19.5599 cv
456.157 19.432 456.349 19.3041 456.477 19.1762 cv
456.604 19.1122 456.732 19.0483 456.924 18.9844 cv
457.052 18.9205 457.18 18.9205 457.372 18.9205 cv
457.755 18.9205 458.075 19.0483 458.267 19.3041 cv
458.459 19.6238 458.587 20.0075 458.587 20.5829 cv
458.587 21.0306 458.523 21.4781 458.395 21.9258 cv
458.203 22.3734 458.011 22.6931 457.755 23.0128 cv
457.5 23.3325 457.244 23.5883 456.86 23.7802 cv
456.54 23.9719 456.221 24.0999 455.837 24.0999 cv
455.581 24.0999 455.389 24.0359 455.198 23.9719 cv
454.942 23.9719 454.75 23.8441 454.558 23.7802 cv
454.494 23.7802 454.43 23.8441 454.302 23.908 cv
454.239 23.9719 454.175 24.0359 454.047 24.0999 cv
454.047 24.0359 453.983 24.0359 453.855 24.0359 cv
453.791 24.0359 453.727 23.9719 453.727 23.9719 cv
454.878 18.6647 li
454.942 18.4728 454.942 18.345 455.006 18.217 cv
455.006 18.1531 455.006 18.0253 455.006 17.9613 cv
455.006 17.8973 455.006 17.8334 454.942 17.7695 cv
454.942 17.7695 454.942 17.7055 454.878 17.7055 cv
454.814 17.6416 454.75 17.6416 454.686 17.6416 cv
454.558 17.5776 454.494 17.5776 454.366 17.5776 cv
454.43 17.2579 li
ef
460.313 21.4781 mo
466.068 21.4781 li
466.068 20.7109 li
460.313 20.7109 li
cp
f
470.288 17.5776 mo
470.608 17.5776 li
470.608 17.7695 470.544 17.8973 470.544 18.0892 cv
470.544 18.217 470.544 18.345 470.544 18.4728 cv
470.544 18.6007 470.544 18.7286 470.544 18.9205 cv
470.544 22.6931 li
470.544 22.757 470.544 22.8849 470.544 22.9489 cv
470.544 23.0128 470.608 23.0767 470.608 23.1407 cv
470.608 23.2047 470.608 23.2047 470.672 23.2686 cv
470.736 23.3325 li
470.8 23.3965 470.864 23.3965 470.928 23.4604 cv
470.992 23.4604 471.056 23.4604 471.183 23.5244 cv
471.247 23.5244 471.375 23.5244 471.503 23.5244 cv
471.695 23.5244 471.823 23.5244 472.079 23.5244 cv
472.079 23.9719 li
468.114 23.9719 li
468.114 23.5244 li
468.306 23.5244 468.434 23.5244 468.626 23.5244 cv
468.754 23.5244 468.882 23.5244 468.945 23.5244 cv
469.073 23.4604 469.137 23.4604 469.201 23.4604 cv
469.265 23.3965 469.265 23.3965 469.329 23.3965 cv
469.393 23.3325 469.393 23.3325 469.457 23.2686 cv
469.457 23.2686 469.521 23.2047 469.521 23.1407 cv
469.585 23.0767 469.585 23.0128 469.585 22.9489 cv
469.585 22.8849 469.585 22.757 469.585 22.6931 cv
469.585 19.1122 li
469.585 18.9844 469.585 18.8565 469.521 18.8565 cv
469.457 18.7925 469.393 18.7286 469.329 18.7286 cv
469.201 18.7286 469.073 18.7925 468.882 18.9205 cv
468.626 19.0483 468.37 19.1762 468.05 19.368 cv
468.05 19.3041 467.986 19.2402 467.922 19.1762 cv
467.922 19.0483 467.858 18.9844 467.858 18.9205 cv
468.242 18.6647 468.626 18.4728 469.073 18.217 cv
469.457 18.0253 469.841 17.7695 470.288 17.5776 cv
ef
gsave
191.688 200.711 mo
476.043 200.711 li
476.043 238.629 li
191.688 238.629 li
cp
eclp
.999645 lw
192.135 203.524 mo
475.532 203.524 li
475.532 231.787 li
192.135 231.787 li
cp
.770321 .559594 0 0 cmyk
@
grestore
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNK+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HFDYNK+DengXian-GBK-EUC-H 3 GetGlyphDirectory
28635 <001C60D8A8C9B62823789F8A7672D012CAD2DD32D012654209C5EC2F3
24F864BC7BD9473B841A0850D77AD0FBF> |
28666 <001C60D8A8C9B7FD849A70FBAF5CA9A13C8E26C143A1DF6AC1FE547EA
3C5232E736DB519B3D3AA4EEB5C6BE5BAE3CF35795226E06AD4DC645F74CE709
D6D91E4316CA064CD0C4D0AE7D15A7DAFFFD0C871FB60DBABB3A2AAE10728B75
305448C7B5C7B5F2A56A6D5ABB66520DBD6D65AA03F04B1782EFFFBBC14C56FE
36F36723CB545DCDED9B40F166550D83238B31668EF901F0353888C1B5A6781A
E1D7629C16539B99012D949BB473BAE8FE8799FB00BF6C746B0B7BB5491EAECF
A034F56A464F3951098755CEB00> |
28667 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C3C724D0F5C6BF169F72E1C71967F26B4562105E8A8583BC41A15D900A2B3
FFCE9F31BD4591CB25C31293EBF9381ACF282B598F9431868A2ECD743332A8F6
186BC7793F5EA54E68DE38FBB93> |
!
end
end end
%ADOEndSubsetFont
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [11.0397 0 0 -11.0183 0 0 ]msf
199.425 221.428 mo
(o\333o\374o\372o\373o\263o\325p\010o\366o\376o\370p\007o\263o\337o\374p\006p\007)
[7.67805 2.50052 6.36447 6.09949 2.75 6.14362 6.11044 5.02866 5.11353 5.69437 3.4543 2.87799 
5.15009 2.50055 4.50977 0 ]xsh
277.244 231.787 mo
277.244 203.524 li
.770321 .559594 0 0 cmyk
@
305.507 203.524 mo
305.507 231.787 li
@
333.706 203.524 mo
333.706 231.787 li
@
362.16 231.787 mo
362.16 203.524 li
@
390.487 203.524 mo
390.487 231.787 li
@
418.942 203.524 mo
418.942 231.787 li
@
447.141 203.524 mo
447.141 231.787 li
@
288.945 210.686 mo
289.457 210.686 li
287.986 216.761 li
288.05 216.825 li
288.626 216.057 289.137 215.546 289.649 215.226 cv
290.16 214.906 290.608 214.714 291.119 214.714 cv
291.695 214.714 292.079 214.906 292.398 215.162 cv
292.718 215.482 292.846 215.929 292.846 216.505 cv
292.846 216.888 292.782 217.4 292.59 218.039 cv
292.015 220.341 li
291.823 220.981 291.759 221.428 291.759 221.748 cv
291.759 221.94 291.823 222.132 291.887 222.196 cv
291.951 222.324 292.079 222.388 292.27 222.388 cv
292.398 222.388 292.59 222.324 292.782 222.196 cv
293.038 222.004 293.294 221.748 293.677 221.365 cv
294.189 221.812 li
293.613 222.452 293.102 222.835 292.782 223.091 cv
292.398 223.283 292.015 223.411 291.567 223.411 cv
291.183 223.411 290.864 223.283 290.672 222.963 cv
290.416 222.707 290.288 222.388 290.288 221.94 cv
290.288 221.556 290.416 220.981 290.608 220.277 cv
290.992 218.743 li
291.119 218.231 291.183 217.784 291.247 217.528 cv
291.311 217.272 291.311 217.016 291.311 216.888 cv
291.311 216.505 291.247 216.185 291.119 215.993 cv
290.992 215.865 290.736 215.738 290.48 215.738 cv
290.224 215.738 289.969 215.865 289.649 216.057 cv
289.393 216.249 289.073 216.569 288.754 216.952 cv
288.434 217.336 288.178 217.784 287.986 218.103 cv
287.794 218.487 287.603 218.935 287.539 219.446 cv
286.707 223.283 li
285.173 223.283 li
287.475 213.244 li
287.603 212.604 287.667 212.157 287.667 211.901 cv
287.667 211.709 287.603 211.517 287.411 211.389 cv
287.283 211.325 287.027 211.262 286.643 211.262 cv
286.707 210.814 li
.750179 .679652 .670192 .901488 cmyk
ef
298.153 219.254 mo
297.833 219.254 297.642 219.318 297.386 219.51 cv
297.194 219.638 297.066 219.894 296.938 220.214 cv
296.81 220.469 296.746 220.853 296.682 221.301 cv
296.619 221.748 296.619 222.196 296.619 222.771 cv
296.619 223.411 296.619 223.986 296.682 224.434 cv
296.746 224.881 296.874 225.265 297.002 225.585 cv
297.13 225.904 297.258 226.096 297.514 226.224 cv
297.706 226.352 297.897 226.48 298.217 226.48 cv
298.473 226.48 298.665 226.416 298.857 226.224 cv
299.048 226.096 299.24 225.904 299.368 225.649 cv
299.496 225.329 299.56 225.009 299.624 224.562 cv
299.688 224.114 299.752 223.603 299.752 223.027 cv
299.752 222.388 299.688 221.812 299.624 221.301 cv
299.56 220.853 299.432 220.469 299.304 220.15 cv
299.176 219.83 299.048 219.638 298.857 219.446 cv
298.665 219.318 298.409 219.254 298.153 219.254 cv
cp
298.217 218.615 mo
298.729 218.615 299.112 218.743 299.496 218.935 cv
299.88 219.126 300.135 219.382 300.391 219.766 cv
300.647 220.086 300.775 220.533 300.903 221.045 cv
301.031 221.556 301.031 222.132 301.031 222.771 cv
301.031 224.178 300.775 225.265 300.327 226.032 cv
299.816 226.736 299.048 227.119 298.089 227.119 cv
297.13 227.119 296.427 226.736 295.979 226.096 cv
295.532 225.393 295.276 224.306 295.276 222.899 cv
295.276 222.196 295.34 221.556 295.468 221.045 cv
295.659 220.469 295.851 220.022 296.107 219.702 cv
296.363 219.318 296.682 219.063 297.002 218.871 cv
297.386 218.743 297.77 218.615 298.217 218.615 cv
ef
317.208 210.558 mo
317.72 210.558 li
316.185 216.697 li
316.313 216.697 li
316.889 215.993 317.4 215.418 317.912 215.098 cv
318.359 214.778 318.871 214.587 319.382 214.587 cv
319.958 214.587 320.341 214.778 320.661 215.098 cv
320.917 215.418 321.109 215.801 321.109 216.377 cv
321.109 216.761 320.981 217.272 320.853 217.976 cv
320.278 220.277 li
320.086 220.917 320.022 221.365 320.022 221.62 cv
320.022 221.812 320.086 222.004 320.15 222.132 cv
320.214 222.196 320.341 222.26 320.469 222.26 cv
320.661 222.26 320.853 222.196 321.045 222.068 cv
321.237 221.94 321.556 221.62 321.876 221.237 cv
322.388 221.748 li
321.812 222.324 321.365 222.707 321.045 222.963 cv
320.661 223.155 320.278 223.283 319.766 223.283 cv
319.446 223.283 319.127 223.155 318.871 222.899 cv
318.679 222.579 318.551 222.26 318.551 221.812 cv
318.551 221.428 318.615 220.917 318.807 220.15 cv
319.19 218.615 li
319.382 218.103 319.446 217.656 319.51 217.4 cv
319.51 217.144 319.574 216.952 319.574 216.761 cv
319.574 216.377 319.51 216.057 319.382 215.865 cv
319.19 215.738 318.999 215.61 318.679 215.61 cv
318.487 215.61 318.167 215.738 317.912 215.929 cv
317.592 216.121 317.272 216.441 316.953 216.825 cv
316.633 217.272 316.377 217.656 316.185 217.976 cv
315.993 218.359 315.865 218.807 315.738 219.318 cv
314.97 223.155 li
313.436 223.155 li
315.674 213.116 li
315.802 212.476 315.929 212.029 315.929 211.837 cv
315.929 211.581 315.802 211.389 315.674 211.262 cv
315.546 211.198 315.29 211.134 314.906 211.134 cv
314.97 210.686 li
ef
326.544 218.551 mo
326.992 218.551 li
326.928 218.807 326.928 218.999 326.928 219.19 cv
326.928 219.382 326.928 219.574 326.928 219.766 cv
326.928 219.894 326.928 220.086 326.928 220.277 cv
326.928 225.137 li
326.928 225.265 326.928 225.393 326.928 225.521 cv
326.928 225.585 326.992 225.649 326.992 225.713 cv
326.992 225.777 327.055 225.841 327.055 225.904 cv
327.119 225.968 327.119 225.968 327.183 226.032 cv
327.247 226.096 327.311 226.096 327.375 226.16 cv
327.503 226.16 327.567 226.224 327.695 226.224 cv
327.823 226.224 328.015 226.288 328.206 226.288 cv
328.398 226.288 328.59 226.288 328.846 226.288 cv
328.846 226.864 li
323.73 226.864 li
323.73 226.288 li
323.986 226.288 324.242 226.288 324.434 226.288 cv
324.562 226.224 324.754 226.224 324.881 226.224 cv
325.009 226.224 325.073 226.16 325.137 226.16 cv
325.201 226.16 325.265 226.096 325.329 226.096 cv
325.393 226.032 325.457 225.968 325.521 225.968 cv
325.521 225.904 325.585 225.841 325.585 225.777 cv
325.649 225.713 325.649 225.649 325.649 225.521 cv
325.713 225.393 325.713 225.329 325.713 225.137 cv
325.713 220.533 li
325.713 220.341 325.649 220.277 325.585 220.214 cv
325.521 220.086 325.457 220.086 325.329 220.086 cv
325.201 220.086 325.009 220.15 324.754 220.277 cv
324.434 220.405 324.114 220.597 323.73 220.917 cv
323.667 220.789 323.603 220.725 323.539 220.597 cv
323.475 220.533 323.475 220.405 323.411 220.277 cv
323.922 220.022 324.434 219.702 325.009 219.446 cv
325.521 219.127 326.032 218.871 326.544 218.551 cv
ef
345.535 210.558 mo
346.047 210.558 li
344.576 216.697 li
344.64 216.697 li
345.215 215.993 345.727 215.418 346.238 215.098 cv
346.75 214.778 347.198 214.587 347.709 214.587 cv
348.285 214.587 348.668 214.778 348.988 215.098 cv
349.308 215.418 349.436 215.801 349.436 216.377 cv
349.436 216.761 349.308 217.272 349.18 217.976 cv
348.604 220.277 li
348.413 220.917 348.349 221.365 348.349 221.62 cv
348.349 221.812 348.413 222.004 348.477 222.132 cv
348.54 222.196 348.668 222.26 348.86 222.26 cv
348.988 222.26 349.18 222.196 349.372 222.068 cv
349.628 221.94 349.883 221.62 350.267 221.237 cv
350.715 221.748 li
350.203 222.324 349.691 222.707 349.372 222.963 cv
348.988 223.155 348.604 223.283 348.157 223.283 cv
347.773 223.283 347.453 223.155 347.262 222.899 cv
347.006 222.579 346.878 222.26 346.878 221.812 cv
346.878 221.428 347.006 220.917 347.198 220.15 cv
347.581 218.615 li
347.709 218.103 347.773 217.656 347.837 217.4 cv
347.901 217.144 347.901 216.952 347.901 216.761 cv
347.901 216.377 347.837 216.057 347.709 215.865 cv
347.581 215.738 347.326 215.61 347.07 215.61 cv
346.814 215.61 346.558 215.738 346.238 215.929 cv
345.919 216.121 345.663 216.441 345.343 216.825 cv
345.024 217.272 344.768 217.656 344.576 217.976 cv
344.384 218.359 344.192 218.807 344.128 219.318 cv
343.297 223.155 li
341.762 223.155 li
344.064 213.116 li
344.192 212.476 344.256 212.029 344.256 211.837 cv
344.256 211.581 344.192 211.389 344 211.262 cv
343.873 211.198 343.617 211.134 343.233 211.134 cv
343.297 210.686 li
ef
354.807 218.487 mo
355.254 218.487 355.574 218.551 355.894 218.679 cv
356.214 218.743 356.469 218.935 356.661 219.063 cv
356.917 219.254 357.045 219.446 357.109 219.702 cv
357.237 219.958 357.237 220.214 357.237 220.469 cv
357.237 220.661 357.237 220.789 357.237 220.917 cv
357.173 221.109 357.173 221.237 357.109 221.365 cv
357.045 221.492 356.981 221.62 356.853 221.812 cv
356.789 221.94 356.661 222.068 356.533 222.26 cv
356.405 222.388 356.278 222.516 356.086 222.707 cv
355.894 222.899 355.702 223.091 355.51 223.283 cv
355.318 223.475 355.127 223.73 354.871 223.922 cv
354.679 224.178 354.423 224.37 354.231 224.626 cv
354.04 224.817 353.848 225.009 353.656 225.265 cv
353.464 225.457 353.336 225.649 353.208 225.777 cv
355.638 225.777 li
355.83 225.777 355.958 225.777 356.086 225.777 cv
356.214 225.777 356.341 225.713 356.405 225.649 cv
356.469 225.649 356.533 225.521 356.597 225.457 cv
356.661 225.329 356.725 225.201 356.789 225.009 cv
357.365 225.009 li
357.365 225.329 357.365 225.649 357.301 225.905 cv
357.301 226.224 357.301 226.544 357.237 226.864 cv
351.802 226.864 li
351.802 226.544 li
351.929 226.288 352.057 226.032 352.185 225.841 cv
352.313 225.585 352.441 225.393 352.633 225.137 cv
352.825 224.945 353.016 224.69 353.208 224.434 cv
353.464 224.178 353.656 223.922 353.976 223.667 cv
354.359 223.283 354.679 222.899 354.935 222.643 cv
355.191 222.324 355.382 222.068 355.51 221.876 cv
355.702 221.62 355.766 221.428 355.83 221.237 cv
355.894 221.045 355.894 220.853 355.894 220.661 cv
355.894 220.405 355.894 220.214 355.83 220.022 cv
355.766 219.83 355.638 219.702 355.574 219.574 cv
355.446 219.446 355.318 219.318 355.127 219.254 cv
354.935 219.19 354.743 219.127 354.487 219.127 cv
354.104 219.127 353.784 219.254 353.464 219.51 cv
353.208 219.702 353.016 220.022 352.825 220.405 cv
351.993 220.405 li
351.993 219.19 li
352.569 218.935 353.08 218.743 353.528 218.679 cv
353.976 218.551 354.423 218.487 354.807 218.487 cv
ef
373.862 210.558 mo
374.373 210.558 li
372.903 216.697 li
372.967 216.697 li
373.542 215.993 374.054 215.418 374.565 215.098 cv
375.077 214.778 375.588 214.587 376.1 214.587 cv
376.611 214.587 377.059 214.778 377.315 215.098 cv
377.635 215.418 377.762 215.801 377.762 216.377 cv
377.762 216.761 377.698 217.272 377.507 217.976 cv
376.931 220.277 li
376.803 220.917 376.675 221.365 376.675 221.62 cv
376.675 221.812 376.739 222.004 376.803 222.132 cv
376.867 222.196 376.995 222.26 377.187 222.26 cv
377.379 222.26 377.571 222.196 377.762 222.068 cv
377.954 221.94 378.21 221.62 378.594 221.237 cv
379.105 221.748 li
378.53 222.324 378.082 222.707 377.698 222.963 cv
377.315 223.155 376.931 223.283 376.484 223.283 cv
376.1 223.283 375.78 223.155 375.588 222.899 cv
375.333 222.579 375.269 222.26 375.269 221.812 cv
375.269 221.428 375.333 220.917 375.524 220.15 cv
375.908 218.615 li
376.036 218.103 376.1 217.656 376.164 217.4 cv
376.228 217.144 376.228 216.952 376.228 216.761 cv
376.228 216.377 376.164 216.057 376.036 215.865 cv
375.908 215.738 375.716 215.61 375.397 215.61 cv
375.141 215.61 374.885 215.738 374.565 215.929 cv
374.31 216.121 373.99 216.441 373.67 216.825 cv
373.35 217.272 373.095 217.656 372.903 217.976 cv
372.711 218.359 372.583 218.807 372.455 219.318 cv
371.624 223.155 li
370.153 223.155 li
372.391 213.116 li
372.519 212.476 372.583 212.029 372.583 211.837 cv
372.583 211.581 372.519 211.389 372.391 211.262 cv
372.199 211.198 371.944 211.134 371.56 211.134 cv
371.688 210.686 li
ef
383.134 218.487 mo
383.453 218.487 383.773 218.551 384.093 218.615 cv
384.349 218.679 384.604 218.807 384.86 218.935 cv
385.052 219.127 385.244 219.318 385.372 219.51 cv
385.5 219.702 385.564 219.958 385.564 220.277 cv
385.564 220.533 385.5 220.789 385.436 220.981 cv
385.372 221.237 385.244 221.428 385.052 221.556 cv
384.924 221.748 384.732 221.876 384.477 222.068 cv
384.221 222.196 383.965 222.324 383.645 222.452 cv
383.645 222.516 li
383.965 222.579 384.221 222.643 384.477 222.771 cv
384.732 222.899 384.924 223.027 385.116 223.219 cv
385.308 223.411 385.436 223.603 385.564 223.794 cv
385.691 224.05 385.755 224.306 385.755 224.562 cv
385.755 224.881 385.691 225.201 385.564 225.521 cv
385.436 225.841 385.244 226.032 384.988 226.288 cv
384.668 226.48 384.413 226.672 384.029 226.8 cv
383.645 226.928 383.198 226.992 382.686 226.992 cv
382.302 226.992 381.855 226.928 381.471 226.864 cv
381.024 226.736 380.64 226.672 380.256 226.544 cv
380.256 225.137 li
381.088 225.137 li
381.215 225.329 381.279 225.521 381.343 225.713 cv
381.471 225.841 381.535 225.968 381.663 226.032 cv
381.791 226.16 381.983 226.224 382.111 226.288 cv
382.302 226.288 382.494 226.352 382.686 226.352 cv
383.262 226.352 383.645 226.224 383.965 225.968 cv
384.221 225.649 384.413 225.265 384.413 224.754 cv
384.413 224.178 384.221 223.73 383.837 223.475 cv
383.453 223.155 382.878 223.027 382.175 223.027 cv
381.599 223.027 li
381.599 222.388 li
382.047 222.388 382.43 222.324 382.75 222.196 cv
383.07 222.068 383.326 221.94 383.581 221.812 cv
383.773 221.62 383.965 221.428 384.093 221.173 cv
384.157 220.981 384.221 220.725 384.221 220.469 cv
384.221 220.086 384.093 219.766 383.837 219.51 cv
383.581 219.254 383.262 219.127 382.814 219.127 cv
382.43 219.127 382.047 219.254 381.791 219.446 cv
381.535 219.702 381.343 220.022 381.215 220.405 cv
380.384 220.405 li
380.384 219.19 li
380.896 218.935 381.343 218.807 381.791 218.679 cv
382.238 218.551 382.686 218.487 383.134 218.487 cv
ef
1 /0 /CSD get_res sepcs
1 sep
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [17.9998 0 0 -17.9645 0 0 ]msf
397.713 223.091 mo
(p\026)sh
423.738 211.965 mo
424.121 211.965 li
423.034 216.377 li
423.098 216.377 li
423.482 215.865 423.865 215.482 424.249 215.226 cv
424.569 214.97 424.953 214.842 425.336 214.842 cv
425.72 214.842 426.04 214.97 426.231 215.226 cv
426.423 215.418 426.551 215.738 426.551 216.121 cv
426.551 216.441 426.487 216.761 426.359 217.272 cv
425.976 218.935 li
425.848 219.382 425.784 219.702 425.784 219.894 cv
425.784 220.086 425.784 220.214 425.848 220.278 cv
425.912 220.341 425.976 220.405 426.104 220.405 cv
426.231 220.405 426.359 220.341 426.551 220.214 cv
426.679 220.15 426.871 219.958 427.127 219.638 cv
427.51 220.022 li
427.063 220.405 426.743 220.725 426.487 220.853 cv
426.231 221.045 425.912 221.109 425.592 221.109 cv
425.336 221.109 425.144 221.045 424.953 220.853 cv
424.825 220.597 424.697 220.405 424.697 220.086 cv
424.697 219.766 424.761 219.382 424.953 218.871 cv
425.208 217.784 li
425.272 217.4 425.336 217.08 425.4 216.889 cv
425.4 216.697 425.464 216.569 425.464 216.441 cv
425.464 216.121 425.4 215.929 425.272 215.801 cv
425.208 215.674 425.016 215.61 424.825 215.61 cv
424.633 215.61 424.441 215.674 424.249 215.801 cv
424.057 215.993 423.802 216.185 423.61 216.505 cv
423.354 216.761 423.162 217.08 423.034 217.336 cv
422.906 217.592 422.778 217.912 422.714 218.295 cv
422.139 220.981 li
421.052 220.981 li
422.651 213.819 li
422.778 213.308 422.842 213.052 422.842 212.86 cv
422.842 212.668 422.778 212.54 422.651 212.476 cv
422.523 212.413 422.331 212.349 422.075 212.349 cv
422.139 212.029 li
.750179 .679652 .670192 .901488 cmyk
ef
431.219 219.574 mo
431.091 219.574 430.963 219.574 430.771 219.702 cv
430.58 219.766 430.452 219.894 430.26 220.086 cv
430.132 220.277 429.94 220.469 429.812 220.725 cv
429.684 221.045 429.556 221.301 429.492 221.684 cv
429.492 221.812 429.429 222.004 429.429 222.132 cv
429.365 222.324 429.365 222.452 429.365 222.579 cv
429.365 222.835 429.429 223.027 429.556 223.155 cv
429.62 223.219 429.812 223.283 430.068 223.283 cv
430.324 223.283 430.58 223.219 430.771 223.027 cv
431.027 222.899 431.155 222.643 431.347 222.388 cv
431.475 222.132 431.603 221.876 431.667 221.492 cv
431.794 221.173 431.794 220.853 431.794 220.533 cv
431.794 220.214 431.794 219.958 431.667 219.766 cv
431.603 219.638 431.411 219.574 431.219 219.574 cv
cp
430.132 217.336 mo
430.452 217.336 li
429.812 219.958 li
429.876 220.022 li
430.068 219.83 430.196 219.638 430.324 219.51 cv
430.516 219.382 430.643 219.254 430.771 219.19 cv
430.899 219.127 431.027 219.063 431.155 218.999 cv
431.283 218.935 431.475 218.935 431.603 218.935 cv
431.986 218.935 432.242 219.063 432.434 219.318 cv
432.626 219.574 432.754 219.958 432.754 220.469 cv
432.754 220.917 432.69 221.365 432.498 221.748 cv
432.37 222.132 432.178 222.452 431.986 222.771 cv
431.731 223.091 431.475 223.283 431.155 223.475 cv
430.835 223.667 430.516 223.73 430.196 223.73 cv
429.94 223.73 429.748 223.73 429.556 223.667 cv
429.365 223.603 429.173 223.539 428.981 223.411 cv
428.917 223.475 428.853 223.539 428.789 223.603 cv
428.661 223.667 428.597 223.667 428.533 223.73 cv
428.469 223.73 428.405 223.73 428.342 223.667 cv
428.278 223.667 428.278 223.667 428.214 223.667 cv
429.301 218.679 li
429.365 218.551 429.365 218.423 429.365 218.295 cv
429.365 218.231 429.429 218.103 429.429 218.039 cv
429.429 217.976 429.365 217.912 429.365 217.912 cv
429.365 217.848 429.301 217.784 429.301 217.784 cv
429.237 217.784 429.173 217.72 429.109 217.72 cv
429.045 217.72 428.917 217.72 428.789 217.72 cv
428.853 217.4 li
ef
434.288 221.301 mo
439.659 221.301 li
439.659 220.597 li
434.288 220.597 li
cp
f
443.24 217.656 mo
443.56 217.656 443.88 217.72 444.072 217.784 cv
444.327 217.848 444.519 217.912 444.647 218.039 cv
444.775 218.167 444.903 218.359 444.967 218.487 cv
445.031 218.679 445.031 218.871 445.031 219.063 cv
445.031 219.19 445.031 219.318 445.031 219.382 cv
444.967 219.51 444.967 219.638 444.903 219.702 cv
444.903 219.83 444.839 219.894 444.775 220.022 cv
444.711 220.086 444.583 220.214 444.519 220.341 cv
444.455 220.405 444.327 220.533 444.199 220.661 cv
444.072 220.789 443.944 220.917 443.816 221.109 cv
443.624 221.237 443.496 221.365 443.304 221.556 cv
443.176 221.684 443.048 221.876 442.857 222.004 cv
442.729 222.196 442.601 222.324 442.473 222.516 cv
442.345 222.643 442.217 222.771 442.153 222.899 cv
443.88 222.899 li
444.008 222.899 444.135 222.899 444.199 222.899 cv
444.263 222.835 444.327 222.835 444.391 222.835 cv
444.455 222.771 444.519 222.707 444.583 222.643 cv
444.583 222.579 444.647 222.452 444.711 222.324 cv
445.159 222.324 li
445.095 222.516 445.095 222.771 445.095 222.963 cv
445.095 223.219 445.031 223.411 445.031 223.666 cv
441.13 223.666 li
441.13 223.411 li
441.194 223.219 441.258 223.091 441.386 222.899 cv
441.45 222.771 441.578 222.579 441.706 222.452 cv
441.834 222.26 441.961 222.068 442.153 221.876 cv
442.281 221.748 442.473 221.556 442.665 221.365 cv
442.921 221.045 443.176 220.789 443.368 220.597 cv
443.56 220.405 443.688 220.214 443.816 220.086 cv
443.88 219.894 443.944 219.766 444.008 219.638 cv
444.072 219.51 444.072 219.318 444.072 219.19 cv
444.072 218.999 444.072 218.871 444.008 218.743 cv
443.944 218.615 443.88 218.487 443.816 218.423 cv
443.752 218.295 443.624 218.231 443.496 218.167 cv
443.368 218.167 443.24 218.103 443.048 218.103 cv
442.793 218.103 442.537 218.167 442.345 218.359 cv
442.153 218.487 441.961 218.743 441.897 218.999 cv
441.258 218.999 li
441.258 218.103 li
441.642 217.976 442.025 217.848 442.345 217.784 cv
442.665 217.72 442.984 217.656 443.24 217.656 cv
ef
452 211.965 mo
452.32 211.965 li
451.233 216.377 li
451.361 216.377 li
451.745 215.865 452.128 215.482 452.448 215.226 cv
452.832 214.97 453.151 214.842 453.535 214.842 cv
453.919 214.842 454.239 214.97 454.43 215.226 cv
454.686 215.418 454.75 215.738 454.75 216.121 cv
454.75 216.441 454.686 216.761 454.558 217.272 cv
454.175 218.935 li
454.047 219.382 453.983 219.702 453.983 219.894 cv
453.983 220.086 454.047 220.214 454.111 220.278 cv
454.111 220.341 454.239 220.405 454.366 220.405 cv
454.494 220.405 454.622 220.341 454.75 220.214 cv
454.878 220.15 455.07 219.958 455.326 219.638 cv
455.709 220.022 li
455.326 220.405 455.006 220.725 454.75 220.853 cv
454.43 221.045 454.175 221.109 453.855 221.109 cv
453.599 221.109 453.343 221.045 453.215 220.853 cv
453.024 220.597 452.96 220.405 452.96 220.086 cv
452.96 219.766 453.024 219.382 453.151 218.871 cv
453.407 217.784 li
453.535 217.4 453.599 217.08 453.599 216.889 cv
453.663 216.697 453.663 216.569 453.663 216.441 cv
453.663 216.121 453.599 215.929 453.535 215.801 cv
453.407 215.674 453.279 215.61 453.024 215.61 cv
452.896 215.61 452.704 215.674 452.448 215.801 cv
452.256 215.993 452.064 216.185 451.809 216.505 cv
451.553 216.761 451.425 217.08 451.233 217.336 cv
451.105 217.592 451.041 217.912 450.913 218.295 cv
450.338 220.981 li
449.251 220.981 li
450.913 213.819 li
450.977 213.308 451.041 213.052 451.041 212.86 cv
451.041 212.668 450.977 212.54 450.85 212.476 cv
450.786 212.413 450.594 212.349 450.274 212.349 cv
450.402 212.029 li
ef
459.482 219.574 mo
459.29 219.574 459.162 219.574 458.97 219.702 cv
458.842 219.766 458.651 219.894 458.523 220.086 cv
458.331 220.277 458.203 220.469 458.075 220.725 cv
457.883 221.045 457.819 221.301 457.755 221.684 cv
457.691 221.812 457.691 222.004 457.628 222.132 cv
457.628 222.324 457.628 222.452 457.628 222.579 cv
457.628 222.835 457.628 223.027 457.755 223.155 cv
457.883 223.219 458.075 223.283 458.331 223.283 cv
458.587 223.283 458.778 223.219 459.034 223.027 cv
459.226 222.899 459.418 222.643 459.546 222.388 cv
459.738 222.132 459.802 221.876 459.929 221.492 cv
459.993 221.173 460.057 220.853 460.057 220.533 cv
460.057 220.214 459.993 219.958 459.929 219.766 cv
459.802 219.638 459.674 219.574 459.482 219.574 cv
cp
458.395 217.336 mo
458.715 217.336 li
458.075 219.958 li
458.139 220.022 li
458.267 219.83 458.459 219.638 458.587 219.51 cv
458.715 219.382 458.842 219.254 458.97 219.19 cv
459.098 219.127 459.29 219.063 459.418 218.999 cv
459.546 218.935 459.674 218.935 459.802 218.935 cv
460.185 218.935 460.441 219.063 460.697 219.318 cv
460.889 219.574 460.953 219.958 460.953 220.469 cv
460.953 220.917 460.889 221.365 460.761 221.748 cv
460.633 222.132 460.441 222.452 460.185 222.771 cv
459.993 223.091 459.674 223.283 459.354 223.475 cv
459.098 223.667 458.715 223.73 458.395 223.73 cv
458.203 223.73 457.947 223.73 457.755 223.667 cv
457.564 223.603 457.436 223.539 457.244 223.411 cv
457.18 223.475 457.052 223.539 456.988 223.603 cv
456.924 223.667 456.86 223.667 456.796 223.73 cv
456.732 223.73 456.668 223.73 456.604 223.667 cv
456.54 223.667 456.477 223.667 456.413 223.667 cv
457.5 218.679 li
457.564 218.551 457.564 218.423 457.628 218.295 cv
457.628 218.231 457.628 218.103 457.628 218.039 cv
457.628 217.976 457.628 217.912 457.628 217.912 cv
457.564 217.848 457.564 217.784 457.5 217.784 cv
457.436 217.784 457.372 217.72 457.308 217.72 cv
457.244 217.72 457.116 217.72 457.052 217.72 cv
457.116 217.4 li
ef
462.551 221.301 mo
467.858 221.301 li
467.858 220.597 li
462.551 220.597 li
cp
f
471.823 217.72 mo
472.143 217.72 li
472.143 217.848 472.143 218.039 472.143 218.167 cv
472.079 218.295 472.079 218.423 472.079 218.551 cv
472.079 218.679 472.079 218.807 472.079 218.935 cv
472.079 222.452 li
472.079 222.516 472.079 222.579 472.143 222.643 cv
472.143 222.771 472.143 222.771 472.143 222.835 cv
472.143 222.899 472.143 222.963 472.207 222.963 cv
472.207 223.027 472.27 223.027 472.27 223.091 cv
472.334 223.091 472.334 223.155 472.398 223.155 cv
472.462 223.155 472.59 223.155 472.654 223.219 cv
472.782 223.219 472.846 223.219 473.038 223.219 cv
473.166 223.219 473.294 223.219 473.485 223.219 cv
473.485 223.667 li
469.841 223.667 li
469.841 223.219 li
470.032 223.219 470.16 223.219 470.288 223.219 cv
470.416 223.219 470.544 223.219 470.608 223.219 cv
470.672 223.155 470.8 223.155 470.8 223.155 cv
470.864 223.155 470.928 223.091 470.992 223.091 cv
470.992 223.027 471.056 223.027 471.056 222.963 cv
471.12 222.963 471.12 222.899 471.12 222.899 cv
471.183 222.835 471.183 222.771 471.183 222.707 cv
471.183 222.643 471.183 222.516 471.183 222.452 cv
471.183 219.127 li
471.183 218.999 471.183 218.935 471.12 218.871 cv
471.12 218.807 471.056 218.807 470.928 218.807 cv
470.864 218.807 470.672 218.807 470.544 218.935 cv
470.352 219.063 470.096 219.19 469.777 219.382 cv
469.713 219.318 469.713 219.254 469.649 219.19 cv
469.649 219.063 469.585 218.999 469.585 218.935 cv
469.969 218.743 470.352 218.551 470.672 218.295 cv
471.056 218.103 471.439 217.912 471.823 217.72 cv
ef
4.84586 176.604 mo
62.1389 176.604 li
62.1389 142.267 li
4.84586 142.267 li
cp
0 0 0 0 cmyk
f
.239787 lw
1 lc
1 lj
10 ml
4.84586 176.604 mo
62.1389 176.604 li
62.1389 142.267 li
4.84586 142.267 li
cp
.750179 .679652 .670192 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNL+SimSun-GBK-EUC-H-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HFDYNL+SimSun-GBK-EUC-H)
%%Title: (HFDYNL+SimSun-GBK-EUC-H Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HFDYNL+SimSun-GBK-EUC-H def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 5 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
37 <001C60D8A8C9B7A73DB9BF769AE369657D1B0F7247A75E7E0F995EE1EF75
369258FF953DAE669D70FBC5C1F916F62E5AE51933C872290F79AC44408D238E
612291FF5287058196492FB08F0A72ED903936BAC4FE3F8C27DB7229FFB87373
A794BDCA1B0DED0B99423524E30C2AFF81498E2649EB4D80D6B059BD81D5F3FF
9BE6155E29A6AFD3D199971B07FA3BBE6A543AA6CBEBA95EF9BCAF1EEF286C99
F05EB8EB08DE387756649A60B36FA67E9C666BF8F159A5C00D51A262E23E2F66
29EFFFD582E77B8E9E8BA18C465E70654123A0083C68B1C178E7C07C90> |
44 <001C60D8A8C9B7A73DB9696D477FC5C77CC13F785D0DEFFCFE399F815467
2C738C7542738E124DFEDA4F33708349FE4D7ECBEDDDE92AFC81C7A51B45AEEC
CE4AEBB160C3CBB2056F1DB3B4BB9EAEADC6349A0E672BA304F2323994F5EFB4
AD37BAA9> |
50 <001C60D8A8C9B7A73DB90D9D7B6F2EAACBB1E0BB43A8C97B9C7EB9EACEFA
55564EDFEF7E6244E0144A5E44A3116FE10720D1E81294E1699A6AEE7013E62B
306D092BFDBCA4F23B2DFA9DFAE29C576F6D14009D1262438A5A6441248CDB8B
8E14329C730A160536AC5D52DA3F89968225C6081F9E313312DB5EF74B9F1037
4748806E5E933E42F6> |
51 <001C60D8A8C9B7A73DB987322EDD44B1DF5405863ACED3B083D42BDC3CA1
425C498E01AE29E2F8D6006DEBE28C3E3167B8B0B15C9979E8BC6F967EAE4108
594879B55E7B2B0C1613F0727FC5D41CF3A18A5C9AF47127977CC09BADEA25A0
5207E3A29DB2A627E71F0DE62BA33B64393D52499CD3D050DB6353DA7F8BAAC4
50A2F546392BEFE2730B572B57EA1E5C6F260C4358B586673BB20F89AC3C5FB2
7145> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HFDYNL+SimSun-GBK-EUC-H-Identity-H /Identity-H 0 [/HFDYNL+SimSun-GBK-EUC-H] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HFDYNL+SimSun-GBK-EUC-H-Identity-H findfont [18.032 0 0 -18.0318 0 0 ]msf
15.5243 164.838 mo
(\000%\000,\0002\0003)
[8.99426 8.99426 8.99426 0 ]xsh
118.857 43.027 mo
118.857 35.162 112.526 28.8317 104.661 28.8317 cv
96.8601 28.8317 90.4658 35.162 90.4658 43.027 cv
90.4658 50.8281 96.8601 57.2224 104.661 57.2224 cv
112.526 57.2224 118.857 50.8281 118.857 43.027 cv
0 0 0 0 cmyk
ef
118.857 43.027 mo
118.857 35.162 112.526 28.8317 104.661 28.8317 cv
96.8601 28.8317 90.4658 35.162 90.4658 43.027 cv
90.4658 50.8281 96.8601 57.2224 104.661 57.2224 cv
112.526 57.2224 118.857 50.8281 118.857 43.027 cv
cp
.750179 .679652 .670192 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BGAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /BGAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f329dc23ae8000000cc000000606376
7420b970d8350000012c000005bc6670676d7ede0337000006e800000d2b
676c7966dd837c7400011a780000086868656164f84d79b1000014140000
0036686865610dad1e6b0000144c00000024686d74787df7b74700001470
00006ca86c6f636100d0cefc0000811800006cac6d6178702e1e2a6f0000
edc4000000206e616d65ef3e9b470000ede4000007a77072657013672219
0000f58c000024eb676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e4002effc000247b00000009000000004d53202000400000
feff0600fe0001c4079e0226200001ff0000000003b7050e000000200014
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051a001500a0fff8ff77
fff803480066015401cc00ac00a200b4008c0101006e0000000000000000
0000011f000a04e2001400b4fff6035c00140028fdda0568fea2ffef405a
868574737271706f6e6d6c6b6a696867666564625f5e5d5c5b5a59585554
535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a39383736
352f2e2d2c2826252423221f181411100f0d0b0a09080706050403020100
2c4523466020b02660b004262348482d2c452346236120b02661b0042623
48482d2c45234660b0206120b04660b004262348482d2c4523462361b020
6020b02661b02061b004262348482d2c45234660b0406120b06660b00426
2348482d2c4523462361b0406020b02661b04061b004262348482d2c0110
203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed
51582320b04d44235920b0042651582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab102
00080d2d2c2045b00325456164b050515845441b2121592d2c2045b00043
60442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8
100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb02923
44b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b212159
2d2c01b005251023208af500b0016023edec2d2c01b005251023208af500
b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c2d
2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c6423648b
b84000622d2c21b08051580c6423648bb82000621bb200402f2b59b00260
2d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c64
23648bb84000626023212d2c4523456023456023456023766818b0806220
2d2cb00426b00426b00425b0042545234520b003266062636820b0032661
658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45b1
302f4523456160b0016069442d2c4b5158b02f2370b01423421b2121592d
2c4b515820b0032545695358441b2121591b2121592d2c45b01443b00060
63b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d2c
4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b00326
458a586466b01f601b64b020606620581b21b04059b001615923586559b0
2923442310b029e01b2121212121592d2cb0164358b004254564b0206066
20581b21b04059b0016123586559b0292344b00425b00725082058021b03
59b0052510b004252046b0042523423cb0072510b006252046b00425b001
6023423c2058011b0059b0052510b00425b029e0b0072510b00625b029e0
b00425b00725082058021b0359b00425b003254348b00625b00325b00160
43481b2159212121212121212d2cb0164358b004254564b020606620581b
21b04059b0016123581b6559b0292344b00525b00825082058021b0359b0
042510b005252046b0042523423cb00425b0072508b0072510b006252046
b00425b0016023423c2058011b0059b0042510b00525b029e0b029204565
44b0072510b00625b029e0b00525b00825082058021b0359b00525b00325
4348b00425b0072508b00625b00325b0016043481b215921212121212121
2d2c02b00425202046b004252342b0052508b003254548212121212d2c02
b0032520b0042508b0022543482121212d2c452320451820b00050205823
652359236820b040505821b04059235865598a60442d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2cb000214b5458381b2121592d2cb002435458b0462b
1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b048
2b1b21212121592d2cb002435458b0492b1b212121592d2c2320b000508a
8a64b10003255458b0401bb10103255458b005438b59b04f2b5923b0622b
2321235865592d2cb108000c215460432d2c014623466023466123201020
468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b
21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a0540084009400c020d021bb10102435458b2054008
ba010000090100b30c010d011bb18002435258b2054008b80180b109401b
b901000002435258b2054008ba0180000901401bb901800002435258b205
4008b80200b109401bb2054008ba010000090100595959b9400000808855
b94000020063b8040088555a58b30c000d011bb30c000d01595959424242
42422d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2cb0022563b0206066b00225b820
00626023622d2c204569442d2c234ab1024e2b2d2c234ab1014e2b2d2c23
8a4a234564b0022564b002256164b00343525821206459b1024e2b23b000
505865592d2c238a4a234564b0022564b002256164b00343525821206459
b1014e2b23b000505865592d2c20b003254ab1024e2b8a103b2d2c20b003
254ab1014e2b8a103b2d2cb00325b003258ab0672b8a103b2d2cb00325b0
03258ab0682b8a103b2d2cb0032546b003254660b004252eb00425b00425
b0042620b000505821b06a1bb06c592bb0032546b00325466061b0806220
8a2010233a232010233a2d2cb0032547b003254760b0052547b0806361b0
0225b00625496323b005254ab080632058621b2159b0042646608a468a46
60b02063612d2cb00426b00425b00425b00426b06e2b208a2010233a2320
10233a2d2c2320b001545821b00225b1024e2bb0805020605920606020b0
01515821211b20b005515821206661b0402361b100032550b00325b00325
505a5820b00325618a535821b000591b21591bb00754582066616523211b
2121b000595959b1024e2b2d2cb00225b004254ab0005358b0001b8a8a23
8ab00159b004254620666120b00526b0062649b00526b00526b0702b2361
65b02060206661b02061652d2cb0022546208a20b000505821b1024e2b1b
452321596165b00225103b2d2cb0042620b802006220b80200638a236120
b05d602bb00525118a128a20398a58ba005d10000004266356602b232120
10204620b1024e2b23611b2321208a201049b1024e2b593b2d2cba005d10
000009256356602bb00525b00525b00526b06d2bb15d0725602bb00525b0
0525b00525b00525b06f2bba005d10000008266356602b20b0005258b050
2bb00525b00525b00725b00725b00525b0712bb0021738b00052b00225b0
01525a58b00425b0062549b00325b00525496020b0405258211bb0005258
20b0025458b00425b00425b00725b0072549b00217381bb00425b00425b0
0425b0062549b0021738595959595921212121212d2cb12801885158b940
00040063b8080088545c1bb001592d2cb12801885158b94000040063b808
0088545c1bb001592d000001000000063ae1f3c90f2d5f0f3cf500190800
00000000bbeb7ccc00000000d749774ffbfafd8009ec0836000000090002
000100000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000001b2a00>
<040e0000000000000000000001cf000004a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a1002304a10023
061bffcc061bffcc045a00ac044400610444006104440061044400610444
00610444006104ec00ac04ec009704ff001b04ff001b03e800ac03e80045
03e800ac03e8004603e8004603e8006303e8005f03e8008103e800ac03e8
00ac03ad00ac050c005b050c005b050c005b050c005b050c005b04fc00ac
04fc00ac05400020020400ac0204ff4a020400280204ff390204ff310204
ff500204ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9
042800ac042800ac035d00ac035d0081036200ac035d00ac0370001c045e
00ac06d700ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054c0063054f0063054f006306ef0063042200ac042200ac05620063
045800ac045800ac04580053045800ac03ad004703ad004703ad001503ad
001803ad004703ad004703e6000f03e6000f03e6000f03e6000f052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa052200aa048a0022071e003d071e003d071e003d071e003d
071e003d0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf
003b03bf003b03bf001a03bf003b03f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f40010055c
ffe2055cffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d
03cb006d046500a10465006a0477003204770032038000a1038000300380
00a103800020038000200380002c0380002903800042038000a1038000a1
035000a10482006c0482006c0482006c0482006c0482006c047800a10478
008c049d004001ec00a101ecff5801ec001901ecff4801ecff2701ecff55
01ecff5201ecff7101ec001101ec0018041b00a1023e0000023eff8c03c9
00a103c900a102e000a102e0008702e600a102e000a102f0003203d500a1
060600a1049100a1049100a10491009904910078049100a1046600a104aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006604ba006604ba00660606006603c500a103c500a104b1006603ed
00a103ed00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6
034f0049034f00490359001c0359fffe0359001c0359001c048d009f048d
009c048d009f048d0097048d0075048d009f048d009f048d009f048d009f
048d009f048d009f03fd0021063e0037063e0037063e0037063e0037063e
003703cc0036038300100383001003830010038300100383001003690044
03690044036900080369004403d5005c03d5005c03d5005c03d5005c03d5
001e03d5005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c
062f005c043400990362005a0362005a0362004e036200570362005a0362
005a076f005a06dd005a0601005a0601005a04340060048c0060046a0060
0434006103fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d03fb005d02710025069a002508d5002504ab0025
069b002508d50025043c0025043c0025043c0025043c0025044f0025044f
0025044f0025044f0025043c0025043c0025067600250676002506760025
06760025068900250689002506890025068900250676002506760025043c
0025043c0025067600250609002508430025043c0025043c002504830025
043c00250676002504ed002504ed0025051300250728002503c4003503c4
003503c4003503c4003503c4003504340060043400600434006004340060
04340060043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6
ff5a01d6ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085
041e008801eaffd501eaffd501eaff6303a3009903a3009903a3009901d6
009901d6002a021c009901d6004b01fb001c02fd00990664009904340099
04340099043400990434004e0434009904a2ff9d043400990438005a0438
005a0438005a0438005a0438004f0438005a0438005a0438005a0438005a
043c005a043c005a06cc005a04340099043400990434006002ca009902ca
009902cafff902ca006e03210051032100510321fffe0321fffd03210051
0321005105ae005105ae00510438009901f1009902ae002102c4002102ae
002102bc002604e600210475002104750021047500210475002104750021
047500210475002104750021047500210475002105130021074b002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002106d90021043400940434008e04340094043400860434004d0434
00890434008604340094043400940434009404340094039d002205b80035
05b8003505b8003505b8003505b8003503770029039f0022039f0022039f
0022039f0022039f00220329005903290059032900070329005903380072
036100640378005d02ac004402e5006c024e004402e5004802b8004701c1
00240297002a02e9006c01630061016dffd80297006c015e006c0456006c
02e6006c02e6004502e5006c02e5004801f6006c0230004201e3002302e9
006c0285001f03ef002c027e00280286001f023700420254000002750000
029400000000fd080000fce80256000002750000029400000000fd080000
fce803290000035f0000039400000000fc9f0000fc6703290000035f0000
039400000000fc9d0000fc6901ff0000039a000003a2000003a800000000
fc650000fc600324000002f5000003460000036700000000fca00000fc7e
0327000003490000036a00000000fc9d0000fc7d030c0000030f00000311
00000000fcac0000fca9029100000298000002a000000000fce90000fce2
02cf000002c2000002b5000003c1000003e10000040000000000fc520000
fc3101ce000001d6000001ce000001ce00000000fd4d0000fd4d02750084
0000fd7a027f00840000fd7601f700840231000004a1002304a1ff89045a
00ac035300ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e
054c0063020400ac0204feb20204ff52042800ac0495002406d700ac052a
00ac03ef0053054c0063054cff1604fc00ac042200ac03ab004603e6000f
03e6001e03e6fe6e03e6001e0613000004270030060000900550005e0550
fef903f4001003f40010040400a102fb00a103c90023038000a1038000a1
03690044047800a1047800a104b4006601ec00a101ec000001ecff5403c9
00a103e10011060600a1049100a10387005e04aa006604aa0066047800a1
03c500a1035b004b0359001c0383001003830010038300100552000003cc
00360558008704b1006604b10066048a0061048a00610440009904320064
039200180430000003a5005903a5005902c8004e044c0099044c00990441
006004780006023200940232ffec0232ff7a0232ff0f03a3009903b40000
04660099039700220302004d0303004d0438005a0438005a046c00280412
0076044100590349005c0319000304550090045500900455007d04550016
05360055053b00550369001205a900940592006405920064028900000000
fd0a03f400000000fc360205009702050097020500970224004801ff006e
01ff006e04a10023044d00ad045a00ac037000ac037000ac037600ac0527
000303e800ac03e8004503e800610668005503ca004b052200ac052200ac
052200ac020400ac0204ff50028d0007045800ac045800ac04e3000306fa
000306d700ac04fc00ac070300ac054c0063054c006304f900ac042200ac
0444006103ad004703e6000f0438000f0438000f04b80022059400000427
0030051c00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac
044000ac0462005d04610062070800ac0471005304ff000f04f2000f0504
000003f4001003ee00a2040400a1031400a1031400a1032700a10480000e
038000a1038000300380002c0578004403800057048900a1048900960489
009501ec00a101ecff55023e000003ca00a103ca00a104320001060600a1
047800a104aa006604a90066046a00a103c500a103cb006d034f00490359
001c039d001e039d001b042f0022050a000003cc0036048e00a1046900a1
03fa006d062300a1064500a1045f0017058300a103e800a103e4006b03f0
0066063200a103ff005c045f001f0463001f044d000006010001063200a1
03d5005c044300000430000003d5009902c4009902c4009902d5009901d6
ff58047700170434006003fb005d03fb005d03fb005d0583003e0362004b
04530099045300780453008801d6008501d6ff7201eaffd503b6009903b6
009904150016060200130569005f04470099062800990438005a0431005a
042a009904340086043400990362005a032100510319000a06640099039f
0022039f001803d2002204fe005103770029045500990433009903c00042
05d4009905fe0099044a000a0554009903c20099038b004d038d005d05c6
009903cb00380453fff90443fff904270018036e0000036e0000036e0000
0000fca50000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5
005e03de0064026000ed026000b10364007a0361005f01ff002a02240048
022400bb020500970586009601ff008c01ff002a01ff008c01ff002a0359
00880359002b035900880359002b01ff002a0359002b02b6007402b600c0
02b6007402b600c004190075041900ad04190075041900ad0317000102df
001f03af018a03fc01ae0317000b02df002d027300450273004503fcfff6
03fcfff6073e0095073e0095073e0095073e009503fcfff903fc00c10205
009702050097026d0085026d007a027400bf0274005a0284005602840075
024000840240007a024a00b0024a0067026d0085026d007a027400bf0274
005a028400560284007503fc009e03fc007703fc007803fc007604b0006b
043d006e03fc006a03fc003d01c4008b0335008b057500000556000007f7
000007270000073c00000727000006ad00af06ad00af040e008005a4003f
05ac004d02b6000003fc003f04b30049040e002a03fc0057040e00600434
005803fc00b903fc004a040e005303fc006d0419002b040e003403f30035
039f006103be005f039f0058039f002506210049083300ac03fc002406e3
00a10411001d0494005f02cb002303ec006203ec00510455002203d70051
0436007e03b20035043600630436005c040e0048040e00ae040e0072040e
0067040e0020040e0065040e006b040e0063040e0052040e005204430067
028d00190381005c0373005903ac00260368006103b7006e0349002f03b5
004b03bc0052039f0050039f008d039f0065039f0062039f003a039f0067
039f0061039f005e039f0051039f00500494005f02cb002303ec006203ec
00510428002203d700510436007e03b20035043600630436005c040e0048
040e00ae040e0072040e0067040e0030040e0065040e006b040e0063040e
0052040e00520321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc00580321004801f8002302b0004b02ad004102db002502a60045
02df005b0291003202e1004b02df004402ea005102df005102d0005701bc
006001bc0058029d003801f500310252003c0249002d024a001402460032
025100300238002202570025024d0023029d003801f500310252003c0249
002d024a001402460032025100300238002202570025024d002302b1ff4b
03130044055f0044056900440517004405690044052e00440553004405c9
004e05c9004e0567004705b7004705a2004705cd0027057d004505a20045
052a003505b80048084e0048057d005c07c9005c03fc004603fc004c03fc
006003fc002b03fc005e03fc006003fc005903fc004503fc006503fc004c
03fc005503fc005603fc003d05e9002c0405003506d300690443006102ed
000703fc00080484003a0550005e04660099066500660454005b0416004a
073e009a073e0096073e00c9073e00c9070e00af070e013a070e00af070e
013a0a4e009a0638009f04660028018a000001da00000466000004660000
046600000466000004660000046600000466000004660000046600000466
0000046600000466000004660000046600000466000004660000046601d0
04a1002304a1002304a1002304a1001904a1001504a1001d04a1002304a1
001c04a1001c04a1001c04a1001d04a1002303e800ac03e800ac03e80037
03e8ffe803e8ffe903e8ffe803e8ffe803e8003702040015020400a0054c
0063054c0063054c0063054c0063054c0063054c0063054c006305940063
0594006305940063059400630594006305940063052200aa052200aa05c6
00aa05c600aa05c600aa05c600aa05c600aa05c600aa03e6001e03e6001e
03e6001e03d5005c03d5005c03d5ffbb03d5ffb103d5ffb803d5ffb803d5
005703d5ffb803d5ffb803d5ffb803d5ffb803d5005c03fb005d03fb005d
03fb003003fbffdb03fbffdb03fbffd903fbffcb03fb005d01d6002601d6
00850438005a0438005a0438ffe80438ffea0438ffe80438ffea0438005a
04a0005a04a0005a04a0005a04a0005a04a0004904a0005a043400940434
009404d2009404d2009404d2008c04d2009404d2004604d20094039f0022
039f0002039f0022046a00530466003803f4001003f4001003f4ffbd03f4
ffc003f4ffbd03f4ffc803f4001003f4ffc803f4ffc803f4ffc803f4ffc8
03f40010038000a1038000a10380fff00380ffa70380ffa00380ffa20380
ff8e0380001101ec000901ec009404aa006604aa006604aa002104aa0022
04aa002104aa002204aa006604ec006604ec006604ec006604ec006604ec
006604ec0066048d009f048d009f0515009f0515009f0515009a0515009f
051500750515009f038300100383fff10383001001da0000046600000466
000004660000046600000466000004660000046600000466000004c10066
052400ac052400ac050600ac049300a1049300a1047c00a103e6000f02ae
00210359001c01d60011043c0025043c0025043c00250676002506760025
0676002502f5001c02e7008e0306005a034b008e02a8008e028c008e0344
005a035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d
0375005a02d8008e0375005a029b005702800046025700040314005702e3
001a0445002202b5001c028b001c02b800500000fdfd0000fdfd0466ffff
0466ffff0466ffff0466ffff03c1ffff03c10000030cffff030c0000030c
ffff030c0002023100000231000001ffffff01ffffff01ffffff01ffffff
0000fd090000fd0902aa008202aa008202aa009802aa009801ce008402aa
008202aa008202aa008202aa0082027f008e027f008e0324000002910084
046601fd02aa001402aa00130329000003290000032900000329ffff039a
00000327000003fcfff903fcfff9039a0000039a00000000ff080000fe4c
0000fdfb0000fdfb0000fe3f0000fe3f0000fdc20000fdc201ce008402aa
00140291008302aa001502aa009302aa0093039a014c039a00000000fdfd
0000fdfd0000fd090000fce90000fd090000feb702aa001402aa001403fc
fff90466ffff02aa0098039a0000039a0000039a0000039a0000039a0000
039a000004010014040101470000000002aaffff02aaffff01ceffff01ce
ffff030c0000030c000002aa009302aa00c802aa00c803f100c801ceffff
01ceffff01ce000001ce000002aa00a003b1008402aaffff02aaffff075c
003c075cffff075cffff075cffff075cffff075c003f06d0ffff06d0ffff
075c0003075c0003075c004001df003001df003001e7003201e7003200f8
004400f8004402070030020700300209004c0209004c019d0030019d0030
02070032020700320209004c0209004c0309004c0309004c015f004c015f
004c015200180152001801c3001601c3001601bf001c01bf001c03270051
0327005103270051032700510000ffab03bdffff041a0000041a00000416
000104160001041a0001041a0001041a0001041a00010401000204010002
0401000204010002015f004c02aa00c801ce00c803f100c804ec000f044d
00ad0440001e0462005d049d006104ff001b057e000f044d004c03e8006c
0525006403ca005a03adffd6050e005b048a001c025000ac0226001b0428
00ac070900aa052affd6054c0063062f006104e4000f045800ac03ad0047
03ab0046043f000f03e6000f0550005e052200aa0442001e03bf003b03ca
004b03ca005a040e006808ab00ac081500ac060300ac054700ac07b700ac
071400ac04a100230204ff3a054c0063052200aa052200aa052200aa0522
00aa052200aa04a1002304a10023061bffcc050c005b050c005b04280073
054c0063054c006303ca0008089500ac081500ac050c005b072800ac04d4
00ac052a00ac04a1ffef04a1002303e8ffe103e8006e0204feac0204ff4c
054c003b054c00630458ffbf0458006e0522002f052200aa03ca004b04fc
00ac052400ac040e004d03ef003b04a1002303e800ac054c0063054c0063
054c0063054c006303e6001e04a1ffd90444ffe7035d001b03e6ffb80394
0064046b001b0545001b0495002403e8ff9e02a10007050a00630469001a
04a0001b04a10023045a00ac045a00ac045a00990444006104ec00ac04ec
00ac04ec00ac04ec00ac04ec00ac03e8008403e8008403e8008203e80034
03e8008103ad00ac050c005b04fc00ac04fc00ac04fc00ac04fc002804fc
00ac0204ff360204ff71042800ac042800ac042800a0035d00ac035d0035
035d0060035d006606d700ac06d700ac06d700ac052a00ac052a00ac052a
00ac052a00ac054c0063054c0063054c0063054c0063042200ac042200ac
045800ac045800ac04580077045800ac03ad004703ad004703ad004703ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa048a0022048a0022071e003d071e003d0427
00300427003003e6001e03bf001503bf003b03bf003b035d001b03c2ff9b
0433001b045800ac052400ac047100ac03e2003b0444003803ad005903b5
00ac046a0027043400990434000403b3005a043400600430005d0271ffee
064300990434009903a300990241002703b40014044c0099053e00590434
00990321005102e0002102ae002103fc001b0329005903ca004b0366003a
03680050075d006003c00099061e009903d5005601d6ff570438005a0434
007a0434008804340088043400880434008803fb006203d5005803d50058
062f005c044cffe203c4003503a3003a0438005a0438005a03ca002e01ea
ff60075d006003c400350434009903d5ffbf03d5005c03fbffe203fb005d
01d6fece01d6ff650438ffed0438005a02caff7302ca00100434ffff0434
008703ca004b0434005104cd0060040e0052034c005903d5005c03fb005d
0438005a0438004f0438005a0438005a039f00220289009804eb009902ae
002106930060069200600362fff003210051032900590394006403fb003c
0240fff70240fff70434006002ff002703e2002203720049040e00720321
005101f300ad032900ad049700ac029b010a03d5005c0434009904340099
043400860362005a043400600434006004340060043400600434006003fb
005d03fb005d03fb005d03fb005003fb005d0271002503c4003504340099
0434009904340067043400130434009401d6ff1e01d6ff1e01d6ff5a03a3
009903a3009903a3006b01d6008901d6ff5801d6ff5801d6ff5906640099
0664009906640099043400990434009904340086043400860438004f0438
004f0438005a0438005a043400990434009902ca009902ca008a02ca000a
02caffff032100510321005103210051032100030321005102ae002102ae
002102aeffd202aeffd204340089043400550434007b0434004d04340086
039d0001039d002205b8003505b800350377002903770029039f00220329
000103290059032900000434008602aeffc605b80035039f002203d5005c
01f100530241002703d5002902aeff960463009903db00990344005903c2
00360362003b02ee003c03190099053b00550471000803ee00a203ee0014
03cb004803fc006d0477003204d3000803ee00530380007204a40066038a
00680350ffe80482006c03f300130232008e01ecfffe03c900a106320091
0491ffe804aa00660592006e0433000803ed00a1034f0053035b004b0383
00080359001c04b10066048d009f03b7001003690044039000570393006b
0398005507ce00a1085500ac055a00a105cd00ac06cf00a1076800ac03f4
001001ecff4704aa0066048d0096048d009f048d009f048d009f048d009f
03f4001003f40010055cffe20482006c0482006c03c9005204aa006604aa
00660390000007ce00a1085500ac0482006c065500a1046200a0049100a1
03f4ffc503f400100380ffb10380004d01ecfed001ecff7004aa001d04aa
006603edffa403ed0064048d0000048d009f039000570478008c049300a1
03c50057038c004403f40010038000a104aa006604aa006604aa006604aa
00660383001003f4001003cb002402e000270359ffeb0339005004040027
048d002703fd00210380ffff023e0000048b006603ed00270383000c0390
00550339005001f300ac032900ac049700ac026000ed03f40010040400a1
040400a10404006e03cb006d046500a1046500a104650081046500a10465
00950380002a0380002603800041038000000380004a035000a10482006c
047800a1047800a10478009a04780020047800a101ecff2a01ecff5503c9
00a103c900a103c9007e02e000a102e0000002e0002802e00024060600a1
060600a1060600a1049100a1049100a1049100a1049100a104aa006604aa
006604aa006604aa006603c500a103c500a103ed00a103ed00a103ed003e
03ed0091034f0049034f0049034f0049034f0000034f00490359001c0359
001c0359001803590019048d009f048d0079048d009f048d0075048d009f
03fd002103fd0021063e0037063e003703cc003603cc0036038300100369
00050369004403690020047800a10359000a063e00370383001003f40010
02e00027035effa703c5002703ed00a104b600a103ef00a10369004403cb
004803500060039900a1043c0025043c00250447002504470025043c0025
043c0025044f0025043c0025043c00250676002506760025068200250682
002506760025067600250689002506760025067600250475002104750021
0475002104750021047500210475002104750021047500210475002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d9002103d500960434006004340099043400990362003b039b005a0434
00600434006003fb006203fb0062051b00650362005a0362004b0435004b
043b005d0241fff704340060043400600451005a039d001f03d0001e0433
009404340099043400990241002701d6fff3023200940267002102e7ffa7
02f9002701d60099048600990663009406630094066400990434ffc20434
0099045300990438005a05b3005a059200640536005502ca002302ca0023
02ca002302ca009902ca0099028e0094028e002303980085039800850321
005101eaffd50242fff801eaffd5028affc402ae004102ae002104a40027
0476004904550090039d002205b80035039f00220351001f0329005903d3
005903bc004b03bb0056039400640394005e039400640362005a0507005f
03d50099043b005a046b005a04470099028affc403a30027031900990434
0060039400640394005e066f006006d400600719006004f3002103c40021
057a0021060c002504ae00990469009903ef002c03ef00700434ffd5044d
ffd503d60010050fffe3062f00620412002703cb006a0444009904590030
033f0099036f005501d60085022700000391009802f000300569005f0453
00990474005a03cb006304a9006604a800660528001406cc00560368003a
0438005a0438005a03a8009903cf005203cf0052033f001b046a009a0465
004b05c7004b0664014c03de0020060e0035034f0042032f003803210051
03d0001e02f2009903de00200450009903a80099052f0083040e000102f5
001c03f1000002e7008e02fb0027034b008e02a8008e02a800500344005a
035b008e01a6008e01cb000502e0008e025b008e046d008e0375008d0375
008d0375005a02b2004802d8008e029b0057025700040314005704450022
02ac004402ac006c02e50048042b004402e5006c02e5004802b8004702b8
004702770046027700460297002a016300610297006c0456006c02e6006c
02e60045024e003602e6004502e6004502e5006c01e3002302e9006c02db
00460456006c0285001f024a000d02be006c024600230283002803650055
025f00180163006101f6006c02e9006c0285001f02be006c0246002302e5
006c03650050025f00180694009404bbffa704bd0060030affa7069cffe5
04b4002204beffa70352ffa7031affa7039d0014030fffa70329ffc203c4
003b0304006e03c400350688002102410027026900270468002704db0027
04c40027043400990451006002710025054c0060041e009901f0006b067f
0099045100990434009902ca006a037b005102faffd5039d002203ed0029
033c0059047c005c04d800600434006003fb005d0362005a0362004b03fb
006201d600850362003b0233001e04d800940376004b02e5006b024e0044
026e004402b200440277004201c1002401c100070297002a02e9006c0192
000001aa006c0163006d0192000001e500000194006c017b00530224006e
0456006c0456006c031b0000031c006c0304006e02e60045033600450230
0042016dffd801e4002302e9000002b8002c02e6006e02e6006e0285001f
023700420294004202a600420272003c02e6004502e9006c02e9006c016d
ffd801f6006c01f6002502030025028b006c03ef002c0286001f01c40054
0334005401ff008c01ff002a01ff008c01ce008401ce0084029900650299
006c03fc004503fc0065044b0044044b0044025100f20256000002540000
025100f2032700000254000002560000023900980239009801ce008401ce
008402aa008202aa008202aa008202aa008202aa004b02aa009302610024
015e006c02300042027e00280299006c0310009603100096031000960310
009603100096045700960457009604570096045700960310004304570043
04570043045700430457004304570043045700430457002f0457002f0457
002f0457002f0457002f0310002f04570025045700250457002504570025
045700250310001a0457001a0457001a0457001a0457001a0457001a0310
004204570042045700420457004204570042045700420457009604570096
045700960457009603100042045700420457004204570042045700420457
0042045700420457002f0457002f0457002f0457002f0457002f0310002f
0457002f0457002f0457002f0457002f0457002f03100026045700260457
002604570026045700260457002603100042045700420457004204570042
045700420457004204570096045700960457009604570096031000420457
004204570042045700420457004204570042031000260457002604570026
045700260457002604570026031000230457002304570023045700230457
0023045700230310002f0457002f0457002f0457002f0457002f0457002f
0310004b0457004b0457004b0457004b0457004b0457004b045700960457
009604570096045700960310004204570042045700420457004204570042
045700420310001a0457001a0457001a0457001a0457001a0457001a0310
002404570024045700240457002404570024045700240310002f0457002f
0457002f0457002f0457002f0457002f0310004e0457004e0457004e0457
004e0457004e0457004e0457009604570096045700960457009602aa0062
02aa006203290000049a00000359002b02aa008502aa008502aa00c802aa
00c8029100840254000003c1ffff03c10000039a0000022400bb02aa0098
02aa009802aa009802aa00980440fff60440fff603020098032700000327
00000324000002aa0000071200d4071200d402ac004402b8004702e60045
027e002802b8004701d9ffff01d9ffff01d9000001d90000028900000289
000002890000028900000000fc660000fc66032900000329000003290000
032900000324000003240000032900000329000003290000032900000324
00000324000003f4000003f4000003f4000003f400000324000003240000
03270000030c000001ffffff01d900000327000003290000032900000329
00000466000004660000046600000466000003f4000003f4000003f40000
03f40000023200b6023200b6054c00630444006104440043044400610444
004303e6000e0456fec803e6000e03ad00ac054c0063045d001e059700ac
04a2000f04440061042200ac043200640375005a037500420478000604d7
00510684001404120076041200030362005a0362003b0362005a0362003b
053b0055037800940438005a0399001404c5009904a2000f0349005c01ea
ffd50476ffd504d7005104a9006603cb006d03cb004803cb006d03cb0048
0389001a0389fe6f0389001a035000a104b1005b03e2001e050000a1045d
002a03db006d03c500a104a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc6
04a1fe8b04a1fe6204a1ff2204a1ff8004a1ff5804a1002304a1002304a1
002304a1ffc504a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe62
04a1ff22066500230665ffc50665fe8a0665fe620665ff220665ffc60665
fe8b0665fe620665ff2203e8fef004bdfe8204bdfe7a03e8fef004c1fe86
04bdfe7a03e8fea403e8fe9504fcfef005d1fe8205d1fe7a0559feaa04fc
fef005d1fe8205d1fe7a0559feaa04fcfea404fcfe9504fc00ac04fcfef0
05d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a0559feaa06c0
00ac06c0fef00795fe820795fe7a071dfeaa06c0fef00795fe820795fe7a
071dfeaa0204fef002d9fe8202d9fe7a0261feaa0204fef002d9fe8202d9
fe7a0261feaa0204fea40204fe950204ff4e0204ff7a054cff0605f5fe82
060cfe7b054cff0605f2fe7f0605fe74054cfecf054cfeac0422fef003e6
fe940517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6001e03e6001e
0550ff0605f2fe7b060dfe780599feaa0550ff0605f2fe7b0611fe7c0599
feaa0550fecf0550feac0550005e0550ff0605f2fe7b060dfe780599feaa
0550ff0605f2fe7b0611fe7c0599feaa0714005e0714ff0607b6fe7b07d1
fe78075dfeaa0714ff0607b6fe7b07d5fe7c075dfeaa048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
0061048a005a048a0061048a0061048a0061048a0061048a0061048a0061
048a0061048a0061048a0061048a0061048a0061048a0061048a0061048a
005a03a5005903a5005903a5004f03a5005903a5005203a5005203a50059
03a50059044c0099044c0092044c008f044c0094044c0099044c0092044c
0092044c0094044c0099044c0099044c0059044c0099044c0099044c0092
044c008f044c0094044c0099044c0092044c0092044c0094044c0099044c
0099044c0059023200010232ff860232ff830232ff62023200000232ff86
0232ff860232ff600232ff100232fecf0232ff600232ffef0232ff7b0232
ff290232ff690232ff680438005a0438005a0438005a0438005a0438005a
0438005a0438005a0438005a041200760412007604550090045500820455
008204550084045500900455008204550082045500840455001204550010
04550080045500900455009004550041045500710455007d059200640592
006405920064059200640592006405920064059200640592006405920064
059200640592006405920064059200640592006405920064059200640592
006405920064059200640592006405920064059200640592006403f40010
03f4001003f4001003f4001003f4001003f4001003f4001003f4001003f4
001003f4001003f4001003f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f4001005b9001005b9
001005b9001005b9001005b9001005b9001005b9001005b9001005b90010
038000a10380004903800049038000a10380004903800049038000a10380
007b047800a1047800a1047800a1047800a1047800a1047800a1047800a1
047800a1047800a1047800a10478006f047800a1047800a1047800a10478
00a1047800a1047800a1047800a1047800a1047800a1063c00a1063c00a1
063c00a1063c00a1063c00a1063c00a1063c00a1063c00a1063c00a101ec
000901ecff6201ecff6201ecff6501ec000901ecff6201ecff6201ecff65
01ecff1001ecfee901ecff6401ec000001ecff8c01ecff2a01ecff5301ec
ff7004aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04aa006603c500a103c500a1038300100389001a038300100389001a0383
00100389001a038300100389001a038300100389001a038300100389001a
038300100389001a038300100389001a038300100389001a038300100389
001a0383fff50389fff5038300100389001a038300100389001a04b10066
04b1006604b1006604b1006604b1006604b1006604b1006604b1006604b1
006604b1006604b1006604b1006604b1006604b1006604b1006604b10066
04b1006604b1006604b1006604b100660675006606750066067500660675
0066067500660675006606750066067500660675006604a1002304a1ffc5
04a1fe8a04a1fe6204a1ff2204a1ffc604a1fe8b04a1fe6204a1ff2204fc
00ac04fcfef005d1fe8205d1fe7a0559feaa04fcfef005d1fe8205d1fe7a
0559feaa0550005e0550ff0605f2fe7b060dfe780599feaa0550ff0605f2
fe7b0611fe7c0599feaa066500230665ffc50665fe8a0665fe620665ff22
0665ffc60665fe8b0665fe620665ff2206c000ac06c0fef00795fe820795
fe7a06c0fe4d06c0fef00795fe820795fe7a06c0fe4d0714005e0714ff06
07b6fe7b07d1fe780714fe610714ff0607b6fe7b07d5fe7c0714fe6101d9
ffff01d900000289000002890000039a0000032900000329000003240000
03290000032900000324000003f4000003f400000324000001d900000327
0000030c0000023200b601c4007901c4007901c40079054e00ac0440000a
042200ac0366001b044100ac06b2005503ca004b04a500ac045800ac046a
001b050c000f052400ac05b100ac073800ac052b00630444006103e6000f
03e6001e03e6001e0476003005d2000f049a007404720074047200ad05f6
002805f60028020400ac06680055045f00ac050e000304fc00ac04fc00ac
04720074070700ac04a1002304a10023061bffcc03e80059052500640525
00640668005503ca001503ca004b052200ac052200ac054c0063054c0063
054c00630462004c0438000f0438000f0438000f04720071035300ac0618
00ac0366001b048500300427003004400035065d0037061d003d041a003d
070f0003072800ac0515005b0521000f03ca005a05090003045f009903df
00270434009902f90027039f009905c0003e0362004b03f4009903b60099
03eb00270447000a0471009904d8009905f10099046f00590362005a0319
000a039d0022039d002203b2002904c5000a03ea004203c0004203c00099
04c8001904c800190583003e03cf009904210016044700990454009903c0
004205b6005f020400ac03d5002e03d50058062f005c03fb005603fb0062
03fb00620583003e0362000803bc004b04530095045300970438005a0431
005a0431005a038b0004039f0022039f0022039f002203c0002902c40099
0554009902f9002703b10029037700290434006006550060059b004b03ba
004b061f001606500099044500500481000a0362005a042b001604a800a1
03e8002703c500a10314002703ec00a105d0004403800057041c00a103ca
00a103ca002704530017049800a1050100a1067700a104a2006503cb006d
0359001c0383001003830010041300360545001c041a006d03fa006d03fa
00a1054f0020054f002001ec00a10578004403ff00a1045a0001047800a1
04a100a103fa006d062f00a103f4001003f40010055cffe20380004204a2
006504a20065057800440380000303900057048900a0048900a004aa0066
04a9006604a9006603e4001e039d001e039d001e039d001e03fa00440314
00a1058300a1031400270417003603cc003603e8004a0588004a05590072
03d8007205d20001061900a10488006c0444001c03800068045c00010400
000008000000040000000800000002af0000020000000155000004500000
01bc00000199000001000000000000000000ffdc0000ff2a040e0024040e
00240329009003fcfff901ff008c0358008801c400540334005404a40054
0476010a03fcfffb0273004404ee004f044400610444006103ad0027040e
005306640099052a0020076000ac064800ac071e002005f500ac0428001b
03e6000f08a80032043afffe0482002104b2005b0495002003ad00200444
00610621004906210065057800e6059d00e603fc005e070100bc03fc0062
045201d7045200be0400fff6040001bd040001bd0400fff6040001bd0400
fff6070900aa045c005b047200ad0444007104d0003a0562007403c90010
06640094042f005f04180015035a0053040b00300441006f032600100327
00030327000303270003025400c0025400c0025400c8025400c802aaff8c
02aaff8c04e0005907f4000a07e2001407980003076c0061064100ac050b
002406a700ac05c80055073f00ac03ca00210600009004b8001c085c0063
054c003b076c0061076c006104440061056a0022053400990433001b05af
00990480001b060b0099034e001605a9009403d2ffc40745005a049c005a
06420059056a00220362005a06b8006d05c300a10453001205c000a1050b
0046066400a10380002205580087042e002207f10066050f006806b0006d
06b8006d039c006d03c7009602aa00db040e008d0000ffdc0000fe5101cf
0000022400bb01c700000163006102b1ff4b0aa000b404d5009202d50083
02d5008304d500b202d500700aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40000fc48000000000000fd17
0000000000000000039a0000039a0000032400000324000003240000039a
0000032400000324000002560000032900000329000003bdffff02aaff8c
055001e5027f008403240000039a00000256000000000027000000e10000
00ed0000001b032400000324000003240000032400000324000003240000
032400000324000003240000032400000000000000000000000000000000
0000039a0000039a0000034600000000002703c10000030f000003460000
03460000039a0000034800000348000003a2000003a2000002560000035f
00000000009e00000067000000220000009e0000009e0000009e0000009e
0000009e0517fe820513fe7e049ffeaa03e6fe4703e6fe4703e6000e03e6
000e03f4001003f4001003f4001005b8001005b8001005b80010047800a1
047800a10478006f063c00a1063c00a1063c006f0383ffc80383ffc80383
001004b1006604b1006604b100660675006606750066067500660000fdbc
0000fd1a0000fd770000fd4f0000fbfe0000fbfa0000fc000000fbfa0000
fc000000fbfa0000fc000000fbfa0000fc000000fc000000fc000000fc00
0000fc000000fc000000fc000000fc000000fdd00000fc300000fc300000
fbff0000fbff0000fbff0000fbff0000fbff0000fc000000fcac0000fcad
0000fcac0000fcac0000fd1b0000fd1b0000fd340000fd340000fd340000
fd340000fd600000fd600000fd730000fd730000fdcf0000fd5f0000fd5f
0000fd5f0000fd5f0000fd7f0000fd7f0000fca10000fd6f0000fdfd0000
fcef0000fcf20000fca00000fca00000fcae0000fcad0000fc660000fca0
0000fc2f0000fc2f0000fc660000fc5f0000fdd00000fcf10000fd6d0000
fcf30000fd710000fd710000fdb10000fc650000fcf10000fcf10000fc2f
0000fbff0000fd770000fc660000fc660000fc650000fc650000fc650000
fc650000fc460000fd790000fcde0000fcde0000fd4b0000fd4b0000fca8
0000fca80000fd710000fda60000fda60000fce30000fd4c0000fd4c0000
fd4b0000fd4b0000fd7e0000fcdf0000fcde0000fcde0000fc8f0000fc52
0000fc520000fc520000fc520000fc920000fc970000fc970000fc560000
fc560000fc910000fd820000fd820000fd700000fd700000fdfa0000fdfa
0000fd5f0000fd5f0000fd790000fd790000fd8f0000fd8f0000fd6e0000
fd6e0000fd7a0000fd7a0000fcfb0000fcfb0000fdb60000fdb60000fda8
0000fda80000fd680000fd680000fd710000fd710000fcf10000fcf10000
fcf10000fcf10000fc540000fc260000fc260000fc290000fc290000fc27
0000fc270000fc270000fc270000fc350000fc350000fc350000fc350000
fdb60000fda80000fda80000fce30000fd460000fd460000fd470000fd47
0000fd020000fd020000fd020000fd020000fc650000fc660000fc9f0000
fc9f0000fc9f0000fc9f0000fca10000fca10000fc9f0000fc9f0000fc9f
0000fc9f0000fca10000fca10000fc370000fc370000fc370000fc370000
fca00000fca00000fc9f0000fcad0000fd330000fd470000fc9f0000fc9f
0000fc9f0000fc9f0000fbff0000fc020000fbff0000fc000000fc370000
fc370000fc370000fc370000fdbd0000fdbd0000fca20000fca30000fca3
0000fdd10000fdd10000fdd10000fdd10000fc6a0000fc6a03e6fe940389
ffcb0389ffcb0389001a01d6008904340060043400600434006004340060
043c0025067600250aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa0
00b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b40aa000b4
0aa000b40aa000b40aa000b40aa000b4047d00a3040e0023040e0054040e
001b040e002e0557001e040e001e07570026027100240271002504300000
04e300ac0366000f0476006203cb005a0438ffff039fffe106d700ac04a1
0023053f00ac05a2005d02ca00350438005a03800072016dffd802f5001c
03ad004703bf003b0254007801de00640254007801de006404fc00ac0434
0099058b000f056d002103ca004b038f005a03c100220366001e04680022
0411001e035000a1034f0049084900230610005c081400220671005c07cc
0022063b005c068800230545005c068800230545005c068800230545005c
04440057036200500428001203a3ffe9042800ac03a300990428001203a3
ffe9040900ac027b0099035d001201d6fff6054cffe20438ffec05c80063
04b9005a091b0063070f005a042200120434ffea054e0037052e003705cc
0014067800250562006304340060070c006305a40060041e007803350050
04a7005303fd0032048a0022039d0022071e003e05b8003503bc004b03a7
004b0422001c0434ffea0422001c0434ffea03a300ac032000990346003c
0346003c03df001e03700014042b005c042b005c0262003c05690060031b
009907a300990569009902ca0099051900a1034e002103b70064054cfff6
04340061035f00ac02ca009903c4003503c4003503c40035035d001201d6
0099052400ac04340099035f00ac02ca0099049f005a03b7005a04fc00ac
02fe0000054f00ac046200990461ffcc038dffe10362005a043400990504
000f053f005003adffd602710025051e00630444005a053800630437005a
051e00630444005a050cffb803c400080428000803a30008052afffe0434
001c0458002602ca000c03ad003a03210051058d000f03ca004b053c0061
03ec00000428003003e6000f052e000a035b0024047b00450664009903ad
00590422005b06d700ac020400ac08d50022048afff2062f005c03a4006f
03fbfff204c80015027100250434006002a6001401d6ff1d01d6fffa0664
0099043400990434009903c7004903c70049043c007406cc005a06cc005a
06cc005a070f005a070f005a0401006403ed00a1028d009903dd00990393
001404a6001403b2003f057b003f01eaffd50434009404a4002706640099
066400990470fffa0369001203be001203690012041a00290377ff4a041a
ff4a0377fef003510022030c008402e9006c01ee0000015effc7031d0000
0434006004b100660655000305580016057900ac056c009906550052062c
00380562006304340060071e003d05b80035042800ac03a3009907210003
05db0016073800ac060c0099051f00ac0450009904d100ad043c00990512
ffec0447ffc2096e000508030017049b0005040d0017050b0003043c0016
052400280000ff8f0000ff7e0000ff300000ff100000fefc0320007c0000
ff2f0000ff310000ff530000ffb70000ff4c0000ff4d0000ffad0000fec3
0000fdc5000000000000ff4d0000ff4d000000d50000fecb0000fe4b0000
ff320000ff460000ff2f0000ff550000ff5e0000ff4d0000feb70000ff66
0000ff4d0000ff320000ff2f0000ff5f0000ff55000000000000fe4d0000
ff3700000000000000000000000000000000000000000000000000000000
00000000000000000000ffb70000ffb70000000000000000000000000000
00000000ffb70000ffc3027300450000ff3101de00a10000048400000057
022400960000ffa80000ffa80000ff190000fe6e02eb009400000000044b
006a046b006a03f3002b02f30019038f0018048f008c049a008c01da0099
02530018049d0099046e006b0477006b01da00990390001803a1001803ce
002e0378001c04ae009904b3009904a5005404ad005401da009902eb002b
048b0028043100150427005b0439005b0454006d0464006d037a002003e2
0019044b008c0451008c03900018058c004a0591004a04d7003604e50036
03b5009903b5009903b5009901ff002a0359002b01da00990000ff0603b5
0099043100150577006904bb001805bb008c04fa002e04a4001c05da0099
04bc00180603003603fc0046044b006a044b006a046b006a03f3002b03f3
002b02f3001902f30019038f0018038f0018049a008c048f008c0242001e
01da009901da00990299001e0477006b0242001e039000180390001803a1
001803ce002e03ce002e0378001c03adff6a03adff6a04ad005402eb002b
048b00280439005b0464006d0454006d03e200190451008c039000180591
004a058c004a058c004a0591004a0591004a04e5003604d7003603e8001c
042f001d05f400ac03bf00370329005903bf00370329005903ad00470321
0051025000ac02320094050e008204010064055e0050037d003208790063
073500640440ffd703c2ffcd06d7000f05df000a062600ac057b00990708
006305c6005a06f000ac058d009904a10022039d002205c800550480001b
06f000ac059b009904c8001403d20022051c002c0455001d05d20005050d
001705b7000304d1001607a900ac05f70060054c00630438005a054c0063
0438005a091b0063070f005a0655007e0000fea207e2006f074b00c807e2
002603d1007d000000640000006400000064000000640000006400000064
00000064000000640000fe480000ff32036e0000025b005e052700010477
001703b700470338005107c9004b06c2004b0706007405e6004205b50001
04ed00170530000f043d000a03e6000f0319000a051c00ac0468008503e6
000f0319000a05340014048c0014047200ad04340099071a00ac060f0099
091b0063070f005a054c00630431005a03a2006402e50064000000640409
00ac036d009903e6000f03190014052200ac04530099028d0007042800ac
045a00ac042200ac0422005b04ec00ac03e6000f03e6000f050c005b0428
00ac04280030028d0007044400610444003803bf003b03ad00ac03ad0059
06d700ac052a00ac035d00ac03ad0047045800ac0458004d04950024048a
002204fc00ac050c0094028d00a9071e003d0427003003e6001e045a0059
04a1002304a1002303e800ac03e8006c020400ac054c0063052200aa0522
00aa035d001204ec005d0205009702050097039500970395009702000097
020000970454006403970064053d00480500000c083b003205c300310382
00310a1500320a1a00320000fff6042d004b042d004b06cc000005aa00c8
06f400c803d300620266006a033e004507640031045900000266006a01ff
ffa8037e006a03ca0075005fffa80410018004100157041000ba04100047
041000c3041000b5041000950410004c0410004c041000aa057300c80223
00490243007103400056035b00c50a6d008405ce00a3045f008804100180
04100155041000b8041000430410006f04100076041000930410004c0410
004c041000aa024400b102820085035a00850175009c0200008c0200008c
02bf008c02bf008c02bf008c02bf008c02bf008c02bf008c02d0009602d0
0096020f007b0201008c0201008c02180071031e009e031e009e0282ffa8
0282ffa80282ffa804be006704be00d2028200680282ffa80282002d02a0
00000282005b0282006c0282ffa8028200680282ffa80282006d0282ffa8
0282006a0282ffa8028200ab0282ffa80410007d041000c701ee006f0243
006f03470070040600540350006f0360005d038e003903ea003903ea0039
0364003901ee006f0243006f034700700406005403d9007003dd005d0393
003803ea003903ea0039036400390398005d0329003c027000d2027000b6
027000490270001e0270004a027000410270002c0270001b0270001b0270
003902700013027000170270002302700020027000450270001202700037
02700025027000260270001e02700028027000190270001b027000140270
0019026600de026600c302660069026600250266006c0266006802660058
0266002b0266002b026600640266003c0266004202660057026600480266
00750266003e0266005e0266004f0266004f0266002e0266005102660044
02660047026600400266004404c40031000000000000000004c4003104c4
00310000ffa80000fef50000fef90000fee40000fef50000fe7a0000ff09
0000fe840000ff310000ff5e0000ff4a0000ff5e0000ff220000feeb0000
ff170000ff2a0000ff490000ff250000ff290000ff650000ff120000ff4b
0000ff480000ffaa0000ff480000ff440000ff210000ff350000ff370000
ff930000ff490000ff2a0000ff150000ffad0000fe390000fe920000ff03
0000ff190000ff3b0000ff220000fe9f0000ff7b0000ff890000ff480000
ff6a0000fe9f0000ff120000febb0000ff2a0000ff610000ff610000ff84
0000ff690000ff480000ff290000ff220000ff290000ff1e0000ff150000
ff300000ffb20000ff4c0000ff3a0000ffb20000ff4c0000ff3a0000fee5
0000feda0000fee50000ff620000ff1e0000ff2a0000ff250000ff980000
ff980000ff980000ff980000ff2d0000fed20000ff470000ff170000ff6f
0000fefc0000ff0b0000ff230000ff290000ff210000ff240000ff150000
ff2a0000ff220000ff3c0000fefc0000ff480000ff130000ff0702760000
01790005018500250185007f0179ffd10179ffda0185fffa0225007f0179
ffc70179ffcb01deffbc01dd000401de005d01de007f01ddffe001ddffd9
01de003201de007f01ddffc001ddffc40669004c0669004c0669004c0669
004c0669004c0669004c0669004c0669004c0669004c0669004c0669004c
0669004c0669004c0669004c0669004c0669004c0669004c0669004c0669
004c0669004c0669004c01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff9501f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
01f6ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ff9d0251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa806e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c
06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2004c06e2
004c06e2004c06e2004c06e2004c06e2004c06e2004c04ca004c04ca004c
04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca
004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c04ca004c
04ca004c04c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa804c5ffa804c5ffa804c5ffa8051dffa8051dffa8051dffa8051d
ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8
051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa804ba
004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c
04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba004c04ba
004c04ba004c04ba004c0347005803470058034700580347005803470058
034700580347005803470058034700580347005803470058034700580347
0058034700580347005803f1005703f1005703f1005703f1005703f10057
03f1005703f1005703f1005703f1005703f1005703f1005703f1005703f1
005703f1005703f100570358000003580000035800000358000003580000
035800000358000003580000035800000358000003580000035800000358
0000035800000358000003580000036d00000358000003a9000003a90000
03a9000003a9000003a9000003a9000003a9000003a9000003a9000003a9
000003a9000003a9000003a9000003a9000003a9000003a9000003a00000
03a90000072b004c072b004c072b004c072b004c072b004c072b004c072b
004c072b004c072b004c072b004c072b004c0507ffa80507ffa80507ffa8
0507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507ffa80507
ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa80566ffa8
0566ffa80566ffa80566ffa80566ffa80791004c0791004c0791004c0791
004c0791004c0791004c0791004c0791004c0791004c0791004c0791004c
0846004c0846004c0846004c0846004c0846004c0846004c0616ffa80616
ffa80616ffa80616ffa80616ffa80616ffa8063affa8063affa8063affa8
063affa8063affa8063affa80865004c0865004c0865004c0865004c0865
004c0865004c061c003b061c003b061c003b061c003b04d5ffa804d5ffa8
04d5ffa804d5ffa804f4ffa804f4ffa804f4ffa804f4ffa8063b003b063b
003b063b003b063b003b04b5004c04b5004c04b5004c04b5004c04b5004c
04b5004c04b5004c04b5004c03dfffa803dfffa803dfffa803dfffa803df
ffa803dfffa803dfffa803dfffa8038effa8038effa8038effa8038effa8
038effa8038effa8038effa8038effa80401004c0401004c0401004c0401
004c0401004c0401004c0401004c0401004c06c8004c06c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c06c8004c02db
ffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80351
ffa80351ffa80351ffa80351ffa80351ffa8072f004c072f004c072f004c
072f004c072f004c072f004c072f004c072f004c072f004c072f004c04f9
004c04f9004c04f9004c04f9004c04f9004c02dbffa802dbffa802dbffa8
02dbffa802dbffa80351ffa80351ffa80351ffa80351ffa80351ffa80506
004c0506004c0506004c0506004c0506004c0556003b0556003b0556003b
0556003b0556003b0556003b0720004c0720004c0720004c0720004c0720
004c0720004c0720004c0720004c0720004c0720004c0720004c0720004c
0720004c0720004c03bdffa803bdffa803bdffa803bdffa803bdffa803bd
ffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa803bdffa8
03bdffa803beffa803beffa803beffa803beffa803beffa803beffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80635004c0635004c0635004c
0635004c0635004c0635004c0736004c0736004c0736004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c08d9003b07a5ffa807d4ffa80909003b045f004c0469
004c0469004c0469004c045f004c045f004c045f004c01cdffa801d9ffa8
01d9ffa801d9ffa801cdffa801cdffa801cdffa8020cffa8020cffa8020c
ffa8020cffa8020cffa8020cffa8020cffa804ad004c04ad004c04ad004c
04ad004c04ad004c04ad004c04ad004c036e0059036e0059036e0059036e
0059032fffa8032fffa8032fffa8032fffa80392ffa80392ffa80392ffa8
0392ffa804140059041400590414005904140059045b004c045b004c045b
004c045b004c045b004c045b004c045b004c045b004c045b004c01f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80495004c0495004c0495004c0495004c0495004c0495
004c0495004c0495004c0495004c0524003b0524003b039e004c0524003b
040fffa80411ffa801f6ffa80411ffa8033effa8033effa802dcffa8033e
ffa80378004c052e003b0378004c052e003b02c6004c02c6004c02c6004c
02c6004c02c6004c0378004c0378004c039e004c039e004c0378004c037a
0000037a0000037a0000037a0000037a0000037a0000037a0000037a0000
037a0000037a0000037a0000037a0000037a0000037a0000037a0000037a
00000317004c03cb000003cb000003cb000003cb000003cb000003cb0000
03cb000003cb000003cb000003cb000003cb000003cb000003cb000003cb
000003cb000003cb000002c9004c055b004c055b004c055b003b055b0031
055b0031055b004c055b004c055b004c055b004c055b0039055b004c055b
004c055b004c055b004c055b004c055b004c055b004c01f6ffa801f6ffa8
01f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa802ab
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80497004c0497004c0497004c04970046049700460497
004c0497004c0497004c0497004c0497004c0497004c0497004c0497004c
0497004c0497004c0497004c0497004c055bff3b044bff0007dc004c07dc
004c0306004c02d0001507dc004c07dc004c01f6ffa801f6ffa80251ffa8
0251ffa802d0001502d000150301007f0301007f036e005903d8007f0433
007f0562004c05bc004c05a90000060b000005a90000060b000005a90000
060b000005a90000060b000004fa000005ab00000441ffa804fa000005ab
00000441ffa80467004c0467004c01de007f0185007f043affd9043afffd
0458003b0458003b04d4000304d4003b04f2003b04f2003b08a4004b072c
004b08a4004b072c004b09e90030083f006b0763005f06cd000009550000
0960ffe8096000000960fffe0930ffff0185ffd901de000402d2007c02d2
007c0179007f01dd007f0469004c01d9ffa8020cffa804ad004c04f5003b
04f5003b04f5003b04f5003b054e003b054e003b054e003b054e003b04f5
003b05ab000005ab00000400ffa80444ffa80444ffa80556003b0556003b
037300000373000003730000037300000373000003730000037300000373
000003730000037300000373000003730000037300000373000003730000
0373000003a0000003730000038700000387000003870000038700000387
000003870000038700000387000003870000038700000387000003870000
038700000387000003870000038700000347005803470058034700580347
0041034700580347005803470058035800000358000006c8004c06c8004c
06c8004c06c8004c06c8004c06c8004c02dbffa802dbffa802dbff8d02db
ff6f02dbffa802dbffa802dbffa803bdffa803bdffa803bdffa803bdffa8
03beffa803beffa801cdff2f032fffa801f6ff8904f5003b03b4ffa802dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff28032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa80245ff280245ff280245ff280245
ff280243ff280243ff2801f6ffa801f6ffa801f6ffa801f6ff3301f6ff23
01f6fed101f6ffa801f6ff5c01f6ff5c01f6ff2201f6ff5d01f6ff5501f6
ffa801f6ffa801f6ffa801f6ff3301f6ff2201f6ff9401f6ff2201f6ff22
01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ff3301f6ff2201f6
ff2201f6ff4e01f6ff2201f6ff2201f6ff2201f6ff2201f6ffa801f6ffa8
01f6ffa801f6ffa401f6ff9401f6ff4101f6ffa801f6ffa501f6ffa501f6
ff9201f6ff9c01f6ff9b01f6ffa801f6ffa801f6ffa801f6ffa401f6ff92
01f6ffa801f6ff9201f6ff9201f6ff9201f6ff9301f6ff9201f6ff9201f6
ffa801f6ffa401f6ff9201f6ff9201f6ff9201f6ff9201f6ff9201f6ff92
01f6ff920251ffa80251ffa80251ffa80251ffa40251ff940251ff410251
ffa80251ffa50251ffa50251ff920251ff9c0251ff9b0251ffa80251ffa8
0251ffa80251ffa40251ff920251ffa80251ff920251ff920251ff920251
ff930251ff920251ff920251ffa80251ffa40251ff920251ff920251ff92
0251ff920251ff920251ff920251ff9201fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbff9501fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa8
01fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fbffa801fb
ffa801fbffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ff9d0233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80255ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa801fbffa801fbffa8
01fbffa801fbff3301fbff2301fbfed101fbffa801fbff5c01fbff5c01fb
ff2201fbff5d01fbff8801fbffa801fbffa801fbffa801fbff3301fbff22
01fbff9401fbff2201fbff2201fbff2201fbff2201fbff2201fbff2201fb
ffa801fbff3301fbff2201fbff2201fbff5201fbff2201fbff2201fbff22
01fbff2201fbffa801fbffa801fbffa801fbffa401fbff9401fbff4101fb
ffa801fbffa501fbffa501fbff9201fbff9c01fbff9b01fbffa801fbffa8
01fbffa801fbffa401fbff9201fbffa801fbff9201fbff9201fbff9201fb
ff9301fbff9201fbff9201fbffa801fbffa401fbff9201fbff9201fbff92
01fbff9201fbff9201fbff9201fbff920233ffa80233ffa80233ffa80233
ffa40233ff940233ff410233ffa80233ffa50233ffa50233ff920233ff9c
0233ff9b0233ffa80233ffa80233ffa80233ffa40233ff920233ffa80233
ff920233ff920233ff920233ff930233ff920233ff920233ffa80233ffa4
0233ff920233ff920233ff920233ff920233ff920233ff920233ff9202dc
ff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff28
02dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dcff2802dc
ff2802dcff2802dcff2802dcff2802dcff2802f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff27032dffa8032dffa8032dffa8032dffa8032dffa8032d
ffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8
032dffa8032dffa8032dffa8032dffa8032dffa8032dffa8032dffa803ba
ffa803baffa803baffa803baffa803baffa803baffa803baffa803baffa8
03baffa803baffa803baffa803baffa803baffa803baffa803baffa803ba
ffa803baffa803baffa803baffa803baffa80245ff280245ff280245ff28
0245ff280245ff280245ff280245ff280245ff280245ff280245ff280245
ff280245ff280245ff280245ff280243ff280243ff280243ff280243ff28
0243ff280243ff2802f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3
ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff27
02f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff2702f3ff270694
004c0694004c0694004c0694004c0694004c0694004c0694004c0694004c
0694004c0694004c0694004c0694004c0694004c0694004c0736004c0736
004c0736004c0736004c0736004c0736004c0736004c0736004c0736004c
0736004c0736004c0736004c0736004c0736004c0668004c0668004c0668
004c0668004c03d0004c03d0004c03d0004c03d0004c0185ffc70185ff96
01de005d01de003201f6ffa801f6ffa801f6ffa801f6ffa801f6ffa801f6
ff8201f6ffa801f6ffa801f6ff8201f6ff8201f6ffa801f6ffa801f6ff82
01f6ff8201f6ff9401f6ff8201f6ff820251ffa80251ffa80251ffa80251
ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa80251ffa8
0251ffa80251ffa80251ffa80251ffa80251ffa801fbffa801fbffa801fb
ffa801fbffa801fbffa801fbff8201fbffa801fbffa801fbff8201fbff82
01fbffa801fbffa801fbff8201fbff8201fbff9401fbff8201fbff820233
ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa8
0233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233ffa80233
ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa804c5ffa8
04c5ffa8051dffa8051dffa8051dffa8051dffa8051dffa8051dffa8051d
ffa8051dffa803470058034700580347005803f1005703f1005703f10057
0507ffa80566ffa802dbffa80351ffa803b4ffa80458003b04f2003b0458
003b04f2003b0282ffa80000feb70000fef50000fef90000fee40000fef5
0000fe7a0000ff090000fe840000ff310000ff5e0000ff500000ff5b0000
ff2a0000feeb0000ff2b0000ff2a0000ff490000ff2a0000ff2d0000ff65
0000ff120000ff4e0000ff4e0000ffb10000ff490000ff440000ff210000
ff350000ff370000ff9e0000ff490000ff2a0000ff150000ffb10000fe39
0000fe920000ff060000ff2c0000ff3b0000ff210000fe9f0000ff7b0000
ff950000ff480000ff6a0000fe9f0000ff120000fec80000ff2d0000ff68
0000ff680000ff8b0000ff690000ff490000ff290000ff220000ff290000
ff1d0000ff1c0000ff2a0000ffba0000fedf0000feda0000fed90000ff62
0000ff140000ff2a0000ff2a0000ff980000ff980000ff980000ff980000
ff2d0000feda0000ff4f0000ff1f0000ff6f0000fefc0000ff1f0000ff27
0000ff2d0000ff210000ff2d0000ff190000ff2a0000ff2a0000ff3c0000
fefc0000ff4e0000ff180000ff1504be006704be00ee0a07006b0321ffa8
0341001e0242001e02280071024c006a024c006a0000ff1d042d004b0000
ff8e0000ff2d0000ff870000ff490000ff2d0000ff2c0000ff560000ff24
0000ff990000ff420000ff970000ff3f0000ff920000ff620000ff3f0000
ff3e0000ff650000ff2e0000ffac0000ff660000ff840000fef40000ff48
0000ff480000ff1d0000ff350000ff560000ff370000ff560000ff090000
ff090000ff1d0000fe760000fe760000ff5f0000ff5f0000000f0000000f
0000ff9f0000ffae0000ff770000ff6c0000ff590000ff6e0000ff000000
ff8e0000ff2d0000ff870000ff2d0000ff2c0000fec10000ff240000ff99
0000ff350000ff3f0000ff920000ff3f0000ff3e0000fedc0000ff2e0000
ff9f0000ff570000ffa00000ff4f0000ff4e0000ff240000ff480000ff1d
0000ff350000ff5a0000ff370000ff560000ff090000ff090000ff1d0000
ff240000fefb0000ff720000ff770000ff770000ff770000ff6e0000ff74
0458003b043a003b0461003b0443003b04f2003b04d4003b04f2003b04d4
003b05370004080700000866000009380000095d0000055500000811ffdc
0870ffdb0942ffdc0968ffdb0648004c0543004c05f7004c0659004c07d6
004c0833004c08b7004c0941004c09c9004c09cf004c08f2004c0910004c
073b004c0683004c053e004c0694004c0637004c0585004c0647004c0647
004c0557004c0557004c060c004c060b004c0617004c075b004c077b004c
079e004c07fa004c077b004c0813004c079e004c078e004c09e4004c09d7
004c068a004c048a004c071e004c06a4004c074a004c0788004c0865004c
084a004c0720004c06a8004c0720004c04ad004c0722004c0453004c0688
004c0688004c04a5004c04a5004c0688004c0688004c0405004c0405004c
0720004c051a004c0720004c0720004c05f5004c0720004c0930004c091a
004c04ba004c04cd004c064b004c070a004c0825004c067a004c0624004c
04e1004c051c004c04a5004c055a004c04ce004c04a5004c04a5004c04ba
004c04ba004c045e004c045e004c052e004c0570004c0626004c0626004c
05f5004c0668004c08f0004c07ed004c0960003b0000ffaa0000ff770410
01a6041000cc04100057041000830410007604100090041000b30410004e
04100090024300bc034700790406005e0398005e03dd005d038e004d0329
003c03ea003b0364004c027000ea02700050027000230270002902700017
0270004e0270004c0270001a02700061026600fa0266007d026600360266
0050026600420266006d0266006e0266002c0266007f0758002807d10028
0344ff6103afff630464ff640481ff6107b70028081d002807550028077a
0028075d003b0812002807a7002808160028075d003b07a70028075b0028
07a70028077b002806b60028075d003b07a7002807b70028078600280816
00280934002809ad00280993002809d8002809720028099400280957003c
09ec00280979002809d200280957003c097900280982002809c10028099d
002808a300280957003c09790028099300280963002809d20028028fff78
0091fe4401a1fe4e0203fe4e0313fe530373fe56045afe3c04effe470570
fe40058efe520453fe3e0472fe3f0284fe2e01e8fe4a008afe0901f9fe4b
017dfdc900cdfdcb018ffdda0191fddc009dfe3c009dfe3c0152fe36014f
fe3a0181fe4e02c0fe4802e0fe480303fe48035ffe4802e0fe480378fe48
0303fe480338fe4e0398fe4f06e2003c06e2003c06e2003c06e2003c06e2
003c06e2003c08e8002808e8002808e8002808e8002808e8002808e80028
0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000ffba0000
ffba072cfff104d4ffba0410009a03980064027000270266005d0598fe47
058afe4604b100ac040e00ac0669004c0669004c0669004c01f6ffa801f6
ffa8037dffa80251ffa80251ffa8036effa806e2004c06e2004c06e2004c
0358000003a9000006c8004c02dbffa80351ffa8072f004c04f9004c02db
ffa80351ffa80506004c045b004c01f6ffa80251ffa80495004c055b004c
01f6ffa80251ffa80497004c0373000002dbffa801f6ffa801f6ff3301f6
ff2201f6ffa801f6ffa401f6ff920251ffa80251ffa40251ff9201fbffa8
01fbffa8037fffa801fbffa801fbffa80233ffa80233ffa80381ffa80233
ffa80233ffa801fbffa801fbff3301fbff2201fbffa801fbffa401fbff92
0233ffa80233ffa40233ff920000fdaa0000fe5f0000ff200000ff110000
ff220000ff220000fd2d0000fc330000fc410000fcd80000fde30000fd49
0000feaf0000fe5e0000fdaa0000fe5e0000ff200000ff110000ff250000
ff250000fd2d0000fc410000fc500000fcf10000fde30000fd490000feaf
0000fe0e0000ff6a0000fe8c0000ff1f0000ff2a04dc01180a2f002d0a2f
002d051900aa04fb00aa04ff006404f7006404fb00aa053500a0046700b4
04f100aa060500aa04ff006404a100b4036700b4065500b4056400a004c9
0096045900140528009004f700640526002a053d00aa0511008c04f7ffe2
04e7007d04fb00aa04d8007305a0005f05350096053d00aa04fb00aa04e3
006404c1006404b500aa0511008c038d00b405cd006e051600000561006e
0557005a01ff008c01ff002a01c2ffe70258fffe01d30023028a000a0000
fc4006640093043400990485006004880099043400930435006003b90099
0434009905b00099048500600434009901d80099066a0099043400600434
0093043400990434007604340099043400500434009301d8ffc30434ffa1
0371001f04340099028c00260664009903fe0073044a0099043400930434
0093065e0093043400990434005f02ed0093065e00930463000e0442005f
050d0044054500930240fff7066400990868009308680093086800930868
00930a3a0093022400bb027300450205009704ed003c0802008b0802008b
04b7007104cf00690500009b050c008704b4009b066a009b04b5fff1052b
00690385fff1046d00ad061f009b049d005504b400af059700680515fff1
04ecfff106250055046f00af046400af05e300680587005503ee001404c9
00af0479005f0492008c047d00af05440069049d0055040200b00439006e
0478007304c700550625009b034800b00544009b046e005404a1009b0544
00280439005f03c90040039e003c044c006403de0037063a006e03b6003c
03a800320527ffd806690064040a006e0352ffd807bf006e041d0064041d
007d05a4006e03a8002903e3001405a6006e03fc007d05bc0055045dffd8
061d005503b6003c05a4006e0405006e041d0064040a007d04470069041d
006403e3005003be0000041d007d04df000a036f0014043b0055044d0073
0339ffba0339ffba03c40050069b006403b100460405007d04380064044a
006903fd007802ac00500393003204390069044c0064044f0028049e0064
049e0064069a00640495005004880060060800140721008205050082044b
002808c1006e04c2006404c0009606960082044b002804bb005006660078
0497009605e2005a0526ffd806a0005504a9005e0650006904bd006404b3
00500455009604eb008204ae005004520055049a002204b7009604cd001e
0413000105090082055f007304460032044600320413005a0659006904c6
006404bd0096049e006404b0006804c60064055f0073054d007804210098
04340094043400980442005f04340098066400980430ff7a0660009402e7
fff604300094066400980491005904340098066400940488ffe20488ffe2
06600094043400940433009806640094063f005f0373ffd9043400980434
0094043400940434009804340098064c005f066400980422009804340098
041dffe806620098042c00980375005004340094042e00940665005f0322
004b030a004600>
<000000000000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000017e0000017e0000017e0000017e0000017e
0000017e0000017e0000017e0000017e0000017e0000017e0000017e0000
017e0000017e0000017e0000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
027800000278000002780000027800000278000002780000027800000278
000002780000027800000278000002780000027800000278000002780000
02780000027800000278000002780000027800000278000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
000003d6000003d6000003d6000003d6000003d6000003d6000003d60000
03d6000003d6000003d6000003d6000003d6000003d6000003d6000003d6
0000055e000006f200000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
086800000868000008680000086800000868000008680000086800000868
000008680000086800000868000008680000086800000868000008680000
08680000086800000868000100001b2a043a00170118000800020010002f
00870000123624eb000700010000000e00ae000000030000000002100000
000000030000000700760210000100000000000001080286000100000000
0003000e038e0001000000000004000e039c0001000000000006000e03aa
0001000000000007003b03b80003000104090000021203f3000300010409
0001001c06050003000104090002000e06210003000104090003001c062f
0003000104090004001c064b0003000104090006001c0667000300010409
00070076068300a9002000320030003100380020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e000d004800650062007200650077
0020004f00700065006e00540079007000650020004c00610079006f0075
00740020006c006f00670069006300200063006f00700079007200690067
00680074002000a900200032003000300033002000260020003200300030
0037002c002000520061006c00700068002000480061006e0063006f0063
006b002000260020004a006f0068006e00200048007500640073006f006e
002e002000540068006900730020006c00610079006f007500740020006c
006f00670069006300200066006f00720020004200690062006c00690063
0061006c00200048006500620072006500770020006900730020006f0070
0065006e00200073006f007500720063006500200073006f006600740077
00610072006500200075006e00640065007200200074006800650020004d
004900540020004c006900630065006e00730065003b0020007300650065
00200065006d0062006500640064006500640020006c006900630065006e
007300650020006400650073006300720069007000740069006f006e0020
0066006f0072002000640065007400610069006c0073002e00430061006c
006900620072006900200069007300200061002000740072006100640065
006d00610072006b0020006f006600200074006800650020004d00690063
0072006f0073006f00660074002000670072006f007500700020006f0066
00200063006f006d00700061006e006900650073002ea92032303138204d
6963726f736f667420436f72706f726174696f6e2e20416c6c2052696768
74732052657365727665642e0d486562726577204f70656e54797065204c
61796f7574206c6f67696320636f7079726967687420a920323030332026
20323030372c2052616c70682048616e636f636b2026204a6f686e204875
64736f6e2e2054686973206c61796f7574206c6f67696320666f72204269
626c6963616c20486562726577206973206f70656e20736f757263652073
6f66747761726520756e64657220746865204d4954204c6963656e73653b
2073656520656d626564646564206c6963656e7365206465736372697074
696f6e20666f722064657461696c732e4643484d4e482b43616c69627269
4643484d4e482b43616c696272694643484d4e482b43616c696272694361
6c6962726920697320612074726164656d61726b206f6620746865204d69
63726f736f66742067726f7570206f6620636f6d70616e6965732e00a900
2000320030003100380020004d006900630072006f0073006f0066007400
200043006f00720070006f0072006100740069006f006e002e0020004100
6c006c002000520069006700680074007300200052006500730065007200
7600650064002e000d000a0048006500620072006500770020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200063006f0070007900720069006700680074002000
a9002000320030003000330020002600200032003000300037002c002000
520061006c00700068002000480061006e0063006f0063006b0020002600
20004a006f0068006e00200048007500640073006f006e002e0020005400
68006900730020006c00610079006f007500740020006c006f0067006900
6300200066006f00720020004200690062006c006900630061006c002000
48006500620072006500770020006900730020006f00700065006e002000
73006f007500720063006500200073006f00660074007700610072006500
200075006e00640065007200200074006800650020004d00490054002000
4c006900630065006e00730065003b002000730065006500200065006d00
62006500640064006500640020006c006900630065006e00730065002000
6400650073006300720069007000740069006f006e00200066006f007200
2000640065007400610069006c0073002e004600430048004d004e004800
2b00430061006c00690062007200690052006500670075006c0061007200
4600430048004d004e0048002b00430061006c0069006200720069004600
430048004d004e0048002b00430061006c00690062007200690046004300
48004d004e0048002b00430061006c006900620072006900430061006c00
690062007200690020006900730020006100200074007200610064006500
6d00610072006b0020006f006600200074006800650020004d0069006300
72006f0073006f00660074002000670072006f007500700020006f006600
200063006f006d00700061006e006900650073002e0000>
<b10903415302c802c60038001f02c702c60038001f02dd003802da005502
d9003802d7005502d8003802d7005502d6003802d5005502d4003802d300
5502d2003802d1005502bf003802be005502bd003802bc0055000402db00
3402db005402db0003003402db005402db006402db00a402db00d402db00
05006b02d50001000b02d10001001402c2004402c2006402c2007402c200
9402c2000500a402be000100a402bc000100200284b40918014a20b80283
b40918014a20b80282b40918014a20b80281b40918014a20b80280b40918
014a20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20
b8027cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279
b40918014a20b80278b40918014a20b80277b40918014a20b80276b40918
014a20b80275b40918014a20b80274b40918014a20b80273b40918014a20
b80271b40918014a20b80270b40918014a20b8026fb40918014a20b8026e
b40918014a20b8026db40918014a20b8026cb40918014a20b8026bb40918
014a20b8026ab40918014a20b80269b40918014a20b80268b40918014a20
b80267b40918014a20b80266b40918014a20b80265b40918014a20b80264
b40918014a20b80263b40918014a20b80262b40918014a20b80261b40918
014a20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20
b8025db40918014a20b8025cb40918014a20b8025bb40918014a20b8025a
b40918014a20b80259b40918014a20b80258b40918014a20b80257b40918
014a20b80256b40918014a20b80255b40918014a20b80254b40918014a20
b80253b40918014a20b80252b40918014a20b80251b40918014a20b80250
b40918014a20b8024fb40918014a20b8024eb40918014a20b8024db40918
014a20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20
b80249b40918014a20b80248b40918014a20b80247b40918014a20b80246
b40918014a20b80245b40918014a20b80244b40918014a20b80243b40918
014a20b80242b40918014a20b80241b40918014a20b80240b40918014a20
b8023fb40918014a20b8023eb40918014a20b8023db40918014a20b8023c
b40918014a20b8023bb40918014a20b8023ab40918014a20b80239b40918
014a20b80238b40918014a20b80237b40918014a20b80236b40918014a20
b80235b40918014a20b80234b40918014a20b80233b40918014a20b80232
b40918014a20b80231b40918014a20b80230b40918014a20b8022fb40918
014a20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20
b8022bb40918014a20b8022ab40918014a20b80229b40918014a20b80228
b40918014a20b80227b40918014a20b80226b40918014a20b80225b40918
014a20b80224b40918014a20b80223b40918014a20b80222b40918014a20
b80221b40918014a20b80220b40918014a20b8021fb40918014a20b8021e
b40918014a20b8021db40918014a20b8021cb40918014a20b8021bb40918
014a20b8021ab40918014a20b80219b40918014a20b80218b40918014a20
b80217b40918014a20b80216b40918014a20b80215b40918014a20b80214
b40918014a20b80213b40918014a20b80212b40918014a20b80211b40918
014a20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20
b8020db40918014a20b8020cb40918014a20b8020bb40918014a20b8020a
b40918014a20b80209b40918014a20b80208b40918014a20b80207b40918
014a20b80206b40918014a20b80205b40918014a20b80204b40918014a20
b80203b40918014a20b80202b40918014a20b80201b40918014a20b80200
b40918014a20b801ffb40918014a20b801feb40918014a20b801fdb40918
014a20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20
b801f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6
b40918014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918
014a20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20
b801efb40918014a20b801eeb40918014a20b801edb40918014a20b801ec
b40918014a20b801ebb40918014a20b801eab40918014a20b801e9b40918
014a20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20
b801e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2
b40918014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918
014a20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20
b801dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8
b40918014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918
014a20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20
b801d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ce
b40918014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918
014a20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20
b801c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4
b40918014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918
014a20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20
b801bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801ba
b40918014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918
014a20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20
b801b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0
b40918014a20b801afb40918014a20b801aeb40918014a20b801adb40918
014a20b801acb40918014a20b801abb40918014a20b801aab40918014a20
b801a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6
b40918014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918
014a20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20
b8019fb40918014a20b8019eb40918014a20b8019db40918014a20b8019c
b40918014a20b8019bb40918014a20b8019ab40918014a20b80199b40918
014a20b80198b40918014a20b80197b40918014a20b80196b40918014a20
b80195b40918014a20b80194b40918014a20b80193b40918014a20b80192
b40918014a20b80191b40918014a20b80190b40918014a20b8018fb40918
014a20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20
b8018bb40918014a20b8018ab40918014a20b80189b40918014a20b80188
b40918014a20b80187b40918014a20b80186b40918014a20b80185b40918
014a20b80184b40918014a20b80183b40918014a20b80182b40918014a20
b80181b40918014a20b80180b40918014a20b8017fb40918014a20b8017e
b40918014a20b8017db40918014a20b8017cb40918014a20b8017bb40918
014a20b8017ab40918014a20b80179b40918014a20b80178b40918014a20
b80177b40918014a20b80176b40918014a20b80175b40918014a20b80174
b40918014a20b80173b40918014a20b80172b40918014a20b80171b40918
014a20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20
b8016db40918014a20b8016cb40918014a20b8016bb40918014a20b8016a
b40918014a20b80169b40918014a20b80168b40918014a20b80167b40918
014a20b80166b40918014a20b80165b40918014a20b80164b40918014a20
b80163b40918014a20b80162b40918014a20b80161b40918014a20b80160
b40918014a20b8015fb40918014a20b8015eb40918014a20b8015db40918
014a20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20
b80159b40918014a20b80158b40918014a20b80157b40918014a20b80156
b40918014a20b80155b40918014a20b80154b40918014a20b80153b40918
014a20b80152b40918014a20b80150b40918014a20b8014fb40918014a20
b8014eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014a
b40918014a20b80149b40918014a20b80148b40918014a20b80147b40918
014a20b80146b40918014a20b80145b40918014a20b80144b40918014a20
b80143b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb8
0281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027d
b21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d
411fb80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411f
b80274b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb802
70b21d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb2
1d431fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c45
1fb80267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb8
0263b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025f
b21c451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c
451fb8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451f
b80256b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb802
52b21c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb2
1c451fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b49
1fb80249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb8
0245b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241
b21b491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b
4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1f
b80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb802
34b21b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b2
1b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c
1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb8
0227b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223
b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b
4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1f
b8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb802
16b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b2
1a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f
1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb8
0209b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205
b219511fb80204b219511fb80203b219501fb80202b219511fb80201b219
511fb80200b219511fb801ffb219511fb801feb219501fb801fdb219511f
b801fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801
f8b219511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b2
18531fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b21853
1fb801efb218541fb801eeb218541fb801edb218541fb801ecb218531fb8
01ebb218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7
b218541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218
541fb801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531f
b801deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801
dab218531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b2
17561fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b21757
1fb801d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb8
01cdb217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9
b217561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217
571fb801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571f
b801c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801
bcb217571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b2
17561fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b21757
1fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb8
01afb2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801ab
b2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b216
5b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1f
b801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb801
9eb2163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2
165b1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b
1fb80195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb8
0191b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018d
b2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b216
5b1fb80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621f
b80184b215621fb80183b215661fb80182b215661fb80181b215551fb801
80b215451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb2
15621fb8017bb215621fb8017ab215641fb80179b215661fb80178b21566
1fb80177b215661fb80176b215661fb80175b215661fb80174b215661fb8
0173b215451fb80172b215621fb80171b215621fb80170b215631fb8016f
b215641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215
661fb8016ab215661fb80169b215621fb80168b215621fb80167b215611f
b80166b215641fb80165b215641fb80164b215661fb80163b215661fb801
62b215661fb80161b215661fb80160b215661fb8015fb215661fb8015eb2
15551fb8015db215451fb8015cb215451fb8015bb215361fb8015ab21561
1fb80159b215621fb80158b215621fb80157b215631fb80156b215641fb8
0155b215661fb80154b215661fb80153b215661fb80152b215661fb80151
b214401fb80150b214551fb8014fb214561fb8014eb214831fb8014db214
2d1fb8014cb214401fb8014bb214401fb8014ab214411fb80149b214401f
b80148b214401fb80147b214411fb80146b2147e1fb80145b214871fb801
44b2147f1fb80143b214801fb80142b212461fb80141b212461fb80140b2
12461fb8013fb212461fb8013eb212441fb8013db212461fb8013cb21159
1fb8013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb8
0137b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133
b2112c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211
571fb8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1f
b8012ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb801
26b2115b1fb80125b211561fb80124b211561fb80123b211571fb80122b2
11581fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b
1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb8
0119b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115
b2105f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b210
5e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1f
b8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb801
08b2105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2
105f1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f
621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631f
f80f641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f
641ff00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641f
e90f641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e
681fe10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681f
da0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d
261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1f
cb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d
261fc30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c
711fbc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711f
b50c721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b
7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1f
a60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b
791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f
970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a
4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f
8255805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb
7d4012060a7c557a557bab7a557955775578ab7755ba028600660285403c
5576ab755504751475747503f47501ab7501447501307501020075107520
75030c7455725573ab7255007250728072b072043bb072e072020072010a
b8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a
03251f6938675568ab67556638645565ab645563386255613860555f385d
555eab5d555c385a555bab5a55593858555703251f5638545555ab545553
38515552ab51554f384e554e03251f4d384b554cab4b554a38485549ab48
55473846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142
301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f1901
6f197f198f19030f18cf18024018292c460f17cf17df17ef170413401729
2e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b3
16313546b8ffc0401f162326460f15010f151f150245ef15018600030120
01010001100120010308b8ffc0b401151f4603bd01000100000500010190
00542b4bb80800524bb008505bb00188b02553b00188b040515ab00688b0
00555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d00
1d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff53
58b20300001d42592b5e7375732b58403d0011e011f0110315bf10cf1002
0f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e313746
0f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f
0b02553f0b4f0b02400b3f4346400b2d3046000301200101000110012001
0308b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b73
74745e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e7375
5e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb1000243545841ff02840064028300640282006402810064028000
64027f0064027e0064027d0064027c0064027b0064027a00640279006402
780064027700640276006402750064027400640273006402710064027000
64026f0064026e0064026d0064026c0064026b0064026a00640269006402
680064026700640266006402650064026400640263006402620064026100
6402600064025f0064025e0064025d0064025c0064025b0064025a006402
590064025800640257006402560064025500640254006402530064025200
640251006402500064024f0064024e0064024d0064024c0064024b006402
4a0064024900640248006402470064024600640245006402440064024300
64024200640241006402400064023f0064023e0064023d0064023c006402
3b0064023a00640239006402380064023700640236006402350064023400
6402330064023200640231006402300064022f0064022e0064022d006402
2c0064022b0064022a006402290064022800640227006402260064022500
640224006402230064022200640221006402200064021f0064021e006402
1d0064021c0064021b0064021a0064021900640218006402170064021600
64021500640214006402130064021200640211006402100064020f006402
0e0064020d0064020c0064020b0064020a00640209006402080064020700
640206006402050064020441ff0064020300640202006402010064020000
6401ff006401fe006401fd006401fc006401fb006401fa006401f9006401
f8006401f7006401f6006401f5006401f4006401f3006401f2006401f100
6401f0006401ef006401ee006401ed006401ec006401eb006401ea006401
e9006401e8006401e7006401e6006401e5006401e4006401e3006401e200
6401e1006401e0006401df006401de006401dd006401dc006401db006401
da006401d9006401d8006401d7006401d6006401d5006401d4006401d300
6401d2006401d1006401d0006401cf006401ce006401cd006401cc006401
cb006401ca006401c9006401c8006401c7006401c6006401c5006401c400
6401c3006401c2006401c1006401c0006401bf006401be006401bd006401
bc006401bb006401ba006401b9006401b8006401b7006401b6006401b500
6401b4006401b3006401b2006401b1006401b0006401af006401ae006401
ad006401ac006401ab006401aa006401a9006401a8006401a7006401a600
6401a5006401a4006401a3006401a2006401a1006401a00064019f006401
9e0064019d0064019c0064019b0064019a00640199006401980064019700
640196006401950064019400640193006401920064019100640190006401
8f0064018e0064018d0064018c0064018b0064018a006401890064018800
640187006401860064018500644180018400640183006401820064018100
6401800064017f0064017e0064017d0064017c0064017b0064017a006401
790064017800640177006401760064017500640174006401730064017200
640171006401700064016f0064016e0064016d0064016c0064016b006401
6a0064016900640168006401670064016600640165006401640064016300
64016200640161006401600064015f0064015e0064015d0064015c006401
5b0064015a00640159006401580064015700640156006401550064015400
64015300640152006401500064014f0064014e0064014c0064014b006401
4a0064014900640148006401470064014600640145006401440064014300
642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f
5e0000>
[2153 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
4 982 1004 <00020048ffed03c705210013002b010bb0852b584019281201291101260d
01260c012608012507012a03012902012db8ffc040250f024d602d011418
10014d14100f014d14160d014d140a0c014d14200b014d14180c014d14bb
022d00000020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8
fff6b30c014d20b8ffe8b60c014d24200120b8022d40090a200030004000
030ab8fff040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00
b8ffc0400a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003f
ed3fed11120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b
2b2b31305d2b5d5d5d5d5d5d5d5d1bb10f1bb8010ab46c0f530525b8010a
b26c055600183f2b3f2b30315901140e0223222e0235343e0233321e0207
342e0423220e0215141e0233323e0403c72f6db0817aa7662b306cb0807b
a7662bb00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b161
57a9f7a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72
8500>BGAAAA+Calibri AddT42Char 
4 382 24 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>BGAAAA+Calibri AddT42Char 
4 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>BGAAAA+Calibri AddT42Char 
BGAAAA+Calibri /CharStrings get begin
/zero 1004 def
/D 24 def
end
BGAAAA+Calibri /Encoding get
dup 48 /zero put
dup 68 /D put
pop
end
%ADOEndSubsetFont
/HFDYNM+Calibri /BGAAAA+Calibri findfont ct_VMDictPut
/HFDYNM+Calibri*1 
[48{/.notdef}rp /zero 19{/.notdef}rp /D 187{/.notdef}rp]
HFDYNM+Calibri nf
HFDYNM+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
100.825 45.3926 mo
(D)sh
HFDYNM+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
108.178 47.0551 mo
(0)sh
118.857 88.1709 mo
118.857 80.3698 112.526 74.0394 104.661 74.0394 cv
96.8601 74.0394 90.4658 80.3698 90.4658 88.1709 cv
90.4658 96.0359 96.8601 102.366 104.661 102.366 cv
112.526 102.366 118.857 96.0359 118.857 88.1709 cv
0 0 0 0 cmyk
ef
118.857 88.1709 mo
118.857 80.3698 112.526 74.0394 104.661 74.0394 cv
96.8601 74.0394 90.4658 80.3698 90.4658 88.1709 cv
90.4658 96.0359 96.8601 102.366 104.661 102.366 cv
112.526 102.366 118.857 96.0359 118.857 88.1709 cv
cp
.750179 .679652 .670192 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BGAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HFDYNM+Calibri gcheck setglobal} if
4 1374 1005 <000100ae0000039f0517002e010cb0852b584024241e01241d01241c0123
1b01241a01241901261801261701291201291101122010014d30b8ffc040
0d0f024d60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29
b8fff0b30d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e
18200b014d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8
ffc0b310014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b01
4da01101111312b8013fb323522910b80107b10654003fed323ffdcd012f
5d2b2b2b2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d
5d5d5d5d5d5d5d1bb313402312b8013fb56c2352290610b80107b26c0654
00183f2b323f2b1acd30315925140e022321222e0235343e023321110706
06262635343e0237253e0333321e02151133321e02039f060a0d07fd5c07
0c0b0606090d08010efa13170e0503060b09012a040c12181218201206ea
080e090544131a100707101a13121a110903d8950a040d1e171118100c06
bf0304040104070b06fb8f09111a>HFDYNM+Calibri AddT42Char 
HFDYNM+Calibri /CharStrings get begin
/one 1005 def
end
HFDYNM+Calibri /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HFDYNM+Calibri*1 
[48{/.notdef}rp /zero /one 18{/.notdef}rp /D 187{/.notdef}rp]
HFDYNM+Calibri nf
HFDYNM+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
100.825 90.6003 mo
(D)sh
HFDYNM+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
108.178 92.263 mo
(1)sh
118.857 133.379 mo
118.857 125.578 112.526 119.183 104.661 119.183 cv
96.8601 119.183 90.4658 125.578 90.4658 133.379 cv
90.4658 141.18 96.8601 147.574 104.661 147.574 cv
112.526 147.574 118.857 141.18 118.857 133.379 cv
0 0 0 0 cmyk
ef
118.857 133.379 mo
118.857 125.578 112.526 119.183 104.661 119.183 cv
96.8601 119.183 90.4658 125.578 90.4658 133.379 cv
90.4658 141.18 96.8601 147.574 104.661 147.574 cv
112.526 147.574 118.857 141.18 118.857 133.379 cv
cp
.750179 .679652 .670192 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BGAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HFDYNM+Calibri gcheck setglobal} if
4 1778 1006 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>HFDYNM+Calibri AddT42Char 
HFDYNM+Calibri /CharStrings get begin
/two 1006 def
end
HFDYNM+Calibri /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HFDYNM+Calibri*1 
[48{/.notdef}rp /zero /one /two 17{/.notdef}rp /D 187{/.notdef}rp]
HFDYNM+Calibri nf
HFDYNM+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
100.825 135.744 mo
(D)sh
HFDYNM+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
108.178 137.471 mo
(2)sh
118.857 213.116 mo
118.857 205.315 112.526 198.984 104.661 198.984 cv
96.8601 198.984 90.4658 205.315 90.4658 213.116 cv
90.4658 220.981 96.8601 227.311 104.661 227.311 cv
112.526 227.311 118.857 220.981 118.857 213.116 cv
0 0 0 0 cmyk
ef
118.857 213.116 mo
118.857 205.315 112.526 198.984 104.661 198.984 cv
96.8601 198.984 90.4658 205.315 90.4658 213.116 cv
90.4658 220.981 96.8601 227.311 104.661 227.311 cv
112.526 227.311 118.857 220.981 118.857 213.116 cv
cp
.750179 .679652 .670192 .901488 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: BGAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal HFDYNM+Calibri gcheck setglobal} if
4 632 282 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>HFDYNM+Calibri AddT42Char 
HFDYNM+Calibri /CharStrings get begin
/d 282 def
end
HFDYNM+Calibri /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/HFDYNM+Calibri*1 
[48{/.notdef}rp /zero /one /two 17{/.notdef}rp /D 31{/.notdef}rp /d 
155{/.notdef}rp]
HFDYNM+Calibri nf
HFDYNM+Calibri*1 [12.0213 0 0 -12.0211 0 0 ]msf
97.5634 215.545 mo
(D)sh
HFDYNM+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
104.917 217.208 mo
(d)sh
%ADOBeginSubsetFont: DGAAAA+Calibri-Identity-H Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (DGAAAA+Calibri)
%%Title: (DGAAAA+Calibri Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /DGAAAA+Calibri def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-503 -312 1240 1026} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 6954 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C6923342525
31335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244BC77A
FB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5D8A99
AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0693AE
A3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F5302816
818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98D9F30
8DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6FECDBA
0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269E0981
B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F3688A
380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997B52F6
BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7BA3BA
965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C032449885
D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D5A11A
F573B17CF9F38> |
882 <001C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA879D
629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB55C
E7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /DGAAAA+Calibri-Identity-H /Identity-H 0 [/DGAAAA+Calibri] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HFDYNN+Calibri /DGAAAA+Calibri-Identity-H findfont ct_VMDictPut
HFDYNN+Calibri [7.8011 0 0 -7.8008 0 0 ]msf
109.075 217.208 mo
(\003r)sh
HFDYNM+Calibri*1 [7.8011 0 0 -7.8008 0 0 ]msf
111.439 217.208 mo
(1)sh
.750267 lw
62.1389 159.404 mo
72.7535 159.404 li
72.7535 43.027 li
90.4658 43.027 li
.750179 .679652 .670192 .901488 cmyk
@
62.1389 159.404 mo
72.7535 159.404 li
72.7535 88.1709 li
90.4658 88.1709 li
@
62.1389 159.404 mo
72.7535 159.404 li
72.7535 133.379 li
90.4658 133.379 li
@
62.1389 159.404 mo
72.7535 159.404 li
72.7535 213.116 li
90.4658 213.116 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNO+SimSun-GBK-EUC-V-Identity-V Initial
Adobe_CoolType_Utility begin ct_MakeOCF begin ct_saveCIDInit
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
%%DocumentNeededResources: ProcSet (CIDInit)
%%IncludeResource: ProcSet (CIDInit)
%%BeginResource: CIDFont (HFDYNO+SimSun-GBK-EUC-V)
%%Title: (HFDYNO+SimSun-GBK-EUC-V Adobe Identity 0)
%%Version: 0
/CIDInit /ProcSet findresource begin
14 dict begin
/CIDFontName /HFDYNO+SimSun-GBK-EUC-V def
/CIDFontType 0 def
/CIDSystemInfo 3 dict dup begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
end def
/FontBBox {-8 -141 1000 859} def
/FontInfo 4 dict dup begin
/FSType 8 def
end def
/CIDMapOffset 57 def
/FDBytes 1 def
/GDBytes 1 def
/CIDCount 28793 def
/CDevProc {pop pop pop pop pop 0 -1000 7 index 2 div 880} def
/FDArray 1 array
dup 0
%ADOBeginFontDict
4 dict dup begin
/FontType 1 def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
%ADOBeginPrivateDict
/Private 7 dict dup begin
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/SubrMapOffset 0 def
/SDBytes 1 def
/SubrCount 5 def
end def
%ADOEndPrivateDict
end put
%ADOEndFontDict
def
/GlyphDirectory 2 dict def
ct_GlyphDirProcs begin
GlyphDirectory
+
0 <001C60D8A8C9B5EE31F4> |
17 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A3106439273
5D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495F
FF30BC926D91EE3877> |
!
end
ct_AddStdCIDMap
%%EndResource
ct_restoreCIDInit /HFDYNO+SimSun-GBK-EUC-V-Identity-V /Identity-V 1 [/HFDYNO+SimSun-GBK-EUC-V] ct_ComposeFont pop end end
%ADOEndSubsetFont
/HFDYNO+SimSun-GBK-EUC-V-Identity-V findfont [0 12.0211 12.0213 0 0 0 ]msf
115.24 160.043 mo
(\000\021)sh
115.24 166.053 mo
(\000\021)sh
115.24 172.064 mo
(\000\021)sh
115.24 178.074 mo
(\000\021)sh
115.24 184.025 mo
(\000\021)sh
115.24 190.035 mo
(\000\021)sh
.499822 lw
118.857 88.1709 mo
124.547 88.1709 li
.750179 .679652 .670192 .901488 cmyk
@
118.857 133.379 mo
124.547 133.379 li
@
118.857 213.116 mo
124.547 213.116 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNL+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HFDYNL+SimSun-GBK-EUC-H 1 GetGlyphDirectory
17 <001C60D8A8C9B7A73DB91CE24174F2CF611360AC54B6CDE32A3106439273
5D7CA4A7A886BDB7AF1F2941CD8DBC8BE2C2D14C6C9983983EB9DFB9D2C6495F
FF30BC926D91EE3877> |
!
end
end end
%ADOEndSubsetFont
/HFDYNL+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
128.704 89.3216 mo
(\000\021\000\021\000\021)sh
128.704 134.148 mo
(\000\021\000\021\000\021)sh
128.704 213.944 mo
(\000\021\000\021\000\021)sh
.750267 lw
118.857 43.027 mo
157.158 43.027 li
157.158 16.5546 li
191.624 16.5546 li
.750179 .679652 .670192 .901488 cmyk
@
118.857 43.027 mo
157.158 43.027 li
157.158 216.569 li
@
191.624 216.313 mo
157.158 216.569 li
@
198.21 102.686 mo
471.375 102.686 li
474.508 102.686 477.066 100.128 477.066 96.9951 cv
477.066 45.8405 li
477.066 42.7073 474.508 40.2135 471.375 40.2135 cv
198.21 40.2135 li
195.077 40.2135 192.583 42.7073 192.583 45.8405 cv
192.583 96.9951 li
192.583 100.128 195.077 102.686 198.21 102.686 cv
0 0 0 0 cmyk
ef
.239787 lw
198.21 102.686 mo
471.375 102.686 li
474.508 102.686 477.066 100.128 477.066 96.9951 cv
477.066 45.8405 li
477.066 42.7073 474.508 40.2135 471.375 40.2135 cv
198.21 40.2135 li
195.077 40.2135 192.583 42.7073 192.583 45.8405 cv
192.583 96.9951 li
192.583 100.128 195.077 102.686 198.21 102.686 cv
cp
.432074 .109255 .804959 .000946059 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNK+DengXian-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HFDYNK+DengXian-GBK-EUC-H 5 GetGlyphDirectory
28673 <001C60D8A8C9B795A0BECF06305EE87369211718D3EE2DE866B243806
8E9C56279E98DF67709852BED129643D4AB00494058DE56C3A2F59EF8337CDEA
A886E2F10A16806F6D040F0BA7348192390D4410BDA51BF850E2AE66992849BB
353A6DA88D5EB6C10AE42038B49> |
28671 <001C60D8A8C9B88A65BA90E56DAA1E3841575CB45590D6> |
28681 <001C60D8A8C9B74969EE40BB25ABD91F8460DD23DB9B191A528027CD2
A43C92EB48C42770A0B496FFADA0F67DDBE4B6E31AA2489D103934A6C89> |
28660 <001C60D8A8C9B7A66FF208F1FFFF199CBF15DA40789B41A8940D81C59
F2725073E42964675E0DD202817D399E2FB17DEF0CEC97867EBCB7ADAAC507C9
72A055AF41A6B42F3641829E4746E9DE8C8DEC7FAD6AFE6EBAF1665BBE8EA5B5
A4B9F141EB4692A8EBE22B205223CA91FA890F02D7332206F1E0DCBF993E8459
4C8743CFA4B5ADE36A0FB102061281D6EFB1A65732FABB4B70E2A43CB34852E4
67727B0E2BBD33CA8A301D3BF82124C> |
28663 <001C60D8A8C9B7FD849E053B577F0EC76167B9364DDA2AA91631C3CFF
8DC23E0BF6538C74A911385270AC07DCC593E92BECBB696706EF8F8C1C4CE2EF
8295729E284A84BB380C6F5C037CA541C9414BC119A0C6BC7171A44F4E2D24AC
C188520E6BDD194B2F3287711D10FF61B4853208E1CBD0B94B4B63BC29FDB45C
C26906A021B80EDE97A058C4DE4036DD68F93905E608AD84B6128CEEED8DF392
1CD2DB7F4217EEE2DC9> |
!
end
end end
%ADOEndSubsetFont
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [14.0035 0 0 -14.0033 0 0 ]msf
199.233 55.8793 mo
(o\325o\374p\007p\006o\370p\007p\006o\263o\374p\001o\263o\377p\002p\012o\263p\011o\364o\377p\010o\370o\263o\370p\001o\367)
[7.82953 3.13828 4.45451 5.687 7.19939 4.45453 5.68698 3.8385 3.13824 7.70349 3.83846 3.13831 
8.02545 9.80389 3.8385 6.52716 7.01733 3.13831 7.71735 7.1994 3.8385 7.1994 7.70343 0 
]xsh
197.315 193.293 mo
470.416 193.293 li
473.549 193.293 476.107 190.736 476.107 187.603 cv
476.107 125.833 li
476.107 122.7 473.549 120.143 470.416 120.143 cv
197.315 120.143 li
194.182 120.143 191.624 122.7 191.624 125.833 cv
191.624 187.603 li
191.624 190.736 194.182 193.293 197.315 193.293 cv
0 0 0 0 cmyk
ef
197.315 193.293 mo
470.416 193.293 li
473.549 193.293 476.107 190.736 476.107 187.603 cv
476.107 125.833 li
476.107 122.7 473.549 120.143 470.416 120.143 cv
197.315 120.143 li
194.182 120.143 191.624 122.7 191.624 125.833 cv
191.624 187.603 li
191.624 190.736 194.182 193.293 197.315 193.293 cv
cp
.432074 .109255 .804959 .000946059 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
/HFDYNK+DengXian-GBK-EUC-H-Identity-H findfont [14.0035 0 0 -14.0033 0 0 ]msf
201.215 136.576 mo
(o\325o\374p\007p\006o\370p\007p\006o\263o\374p\001o\263o\373o\374o\372o\373o\263p\011o\364o\377p\010o\370o\263o\370p\001o\367)
[7.82803 3.13678 4.45302 5.68549 7.19791 4.45303 5.68549 3.83701 3.13675 7.70197 3.83699 7.70197 
3.13678 8.03809 7.70197 3.83698 6.5257 7.01587 3.13678 7.71582 7.19794 3.83698 7.19788 7.70197 
0 ]xsh
.499822 lw
430.707 52.3627 mo
430.707 58.6292 li
454.814 58.6292 li
454.814 52.2349 li
.750179 .679652 .670192 .901488 cmyk
@
406.921 65.7908 mo
406.921 72.0572 li
454.814 72.0572 li
454.814 65.7268 li
@
284.725 91.3041 mo
284.725 97.5706 li
454.75 97.5706 li
454.75 91.2402 li
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: HFDYNL+SimSun-GBK-EUC-H-Identity-H AddGlyphs
Adobe_CoolType_Utility begin ct_MakeOCF begin
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.
ct_GlyphDirProcs begin/HFDYNL+SimSun-GBK-EUC-H 1 GetGlyphDirectory
258 <001C60D8A8C9B5EE3102B97DA49B9C2565F96C92655401A57AAFA547FAD
B589897873059305223E2C41775B0F583433C64658E1B144B67EE6854F55B223
C3856A9158BC7D5DB6FE38E50B5F730AF4B06BAE2AA8A1A41407C8734F43BE3E
1390D92BFC39466E44971CE24916A34F3B46B526300E724AB9EAFC497462FE20
3B58E23AC12B8EF5340E96AFE817A6074E27701A50225B44BD2BFFA1A0C8C9EB
CFAE463E19964FDD8D4895384D52ED10C5231C422EA6C24E2D7FEBE1811012E7
B8BC8> |
!
end
end end
%ADOEndSubsetFont
/HFDYNL+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
421.627 89.5774 mo
(\001\002\001\002)
[12.0213 0 ]xsh
291.183 89.8973 mo
290.416 93.2863 li
290.672 93.2863 290.992 93.2863 291.311 93.2863 cv
291.951 93.2863 292.398 93.2224 292.718 93.0945 cv
292.974 92.9666 293.23 92.7108 293.485 92.3272 cv
293.677 92.0074 293.805 91.5599 293.805 91.0483 cv
293.805 90.6647 293.677 90.345 293.421 90.1531 cv
293.166 89.9613 292.718 89.8973 292.206 89.8973 cv
cp
292.91 86.2526 mo
292.59 86.2526 292.27 86.2526 291.951 86.2526 cv
291.311 89.3218 li
292.143 89.3218 li
292.59 89.3218 292.974 89.3218 293.23 89.2579 cv
293.549 89.13 293.741 89.0021 293.997 88.8103 cv
294.189 88.6185 294.317 88.4266 294.445 88.1709 cv
294.508 87.9791 294.572 87.7233 294.572 87.4036 cv
294.572 87.2117 294.572 87.0839 294.508 86.892 cv
294.445 86.7641 294.317 86.6362 294.189 86.5084 cv
294.061 86.4444 293.869 86.3805 293.677 86.3165 cv
293.485 86.2526 293.23 86.2526 292.91 86.2526 cv
cp
290.288 85.741 mo
293.23 85.741 li
293.805 85.741 294.253 85.805 294.636 85.9329 cv
295.02 86.0607 295.276 86.1887 295.404 86.4444 cv
295.595 86.7002 295.659 87.0199 295.659 87.3396 cv
295.659 87.8511 295.532 88.3627 295.212 88.7463 cv
294.892 89.13 294.445 89.3858 293.805 89.5776 cv
293.805 89.6415 li
294.125 89.8334 294.445 90.0252 294.636 90.281 cv
294.828 90.5367 294.956 90.8565 294.956 91.2402 cv
294.956 91.7517 294.828 92.1993 294.572 92.5829 cv
294.317 92.9666 293.933 93.2224 293.485 93.4781 cv
292.974 93.67 292.27 93.7979 291.375 93.7979 cv
288.69 93.7979 li
288.754 93.5421 li
288.945 93.4781 289.073 93.4781 289.137 93.4142 cv
289.201 93.3503 289.265 93.2863 289.329 93.1584 cv
289.393 93.0945 289.393 92.9666 289.457 92.8387 cv
289.521 92.7108 289.585 92.4551 289.649 92.0714 cv
290.672 87.4675 li
290.736 87.0839 290.8 86.7641 290.8 86.5723 cv
290.8 86.3805 290.736 86.1887 290.672 86.1247 cv
290.544 86.0607 290.416 85.9968 290.224 85.9968 cv
.750179 .679652 .670192 .901488 cmyk
ef
298.153 88.1069 mo
298.537 88.1069 li
298.537 92.3272 li
298.537 92.6469 298.537 92.9026 298.601 93.0306 cv
298.601 93.1584 298.665 93.2863 298.793 93.3503 cv
298.857 93.4142 298.984 93.4781 299.24 93.5421 cv
299.24 93.7979 li
296.874 93.7979 li
296.874 93.5421 li
297.066 93.4781 297.13 93.4142 297.194 93.4142 cv
297.258 93.3503 297.322 93.2863 297.386 93.2224 cv
297.45 93.1584 297.45 93.0945 297.514 92.9666 cv
297.514 92.8387 297.514 92.6469 297.514 92.3272 cv
297.514 89.7695 li
297.514 89.5137 297.514 89.3218 297.514 89.13 cv
297.514 89.0021 297.45 88.8743 297.45 88.8103 cv
297.386 88.6824 297.322 88.6185 297.194 88.5546 cv
297.13 88.5546 297.002 88.4906 296.81 88.4906 cv
296.81 88.1709 li
cp
297.514 85.805 mo
298.601 85.805 li
298.601 86.9559 li
297.514 86.9559 li
cp
ef
314.011 88.4906 mo
313.627 88.4906 313.244 88.7464 312.86 89.13 cv
312.477 89.5137 312.157 90.0892 311.965 90.7286 cv
312.54 90.7286 313.052 90.7286 313.436 90.6007 cv
313.819 90.5368 314.139 90.345 314.331 90.1531 cv
314.587 89.8973 314.651 89.6416 314.651 89.2579 cv
314.651 89.0661 314.587 88.8743 314.523 88.7464 cv
314.395 88.5546 314.203 88.4906 314.011 88.4906 cv
cp
307.809 88.043 mo
308.192 88.043 308.512 88.043 308.832 88.1069 cv
309.151 88.1709 309.407 88.2348 309.727 88.3627 cv
309.471 89.5776 li
308.96 89.5776 li
308.96 89.2579 308.832 88.9382 308.64 88.8103 cv
308.448 88.6185 308.128 88.4906 307.745 88.4906 cv
307.425 88.4906 307.169 88.6185 306.977 88.7464 cv
306.786 88.9382 306.658 89.13 306.658 89.3858 cv
306.658 89.5137 306.722 89.6416 306.786 89.7695 cv
306.786 89.8973 306.913 89.9613 307.041 90.0892 cv
307.233 90.281 307.425 90.4089 307.745 90.6007 cv
308 90.7286 308.192 90.8565 308.384 90.9844 cv
308.512 91.1122 308.64 91.2402 308.704 91.368 cv
308.832 91.4959 308.896 91.6238 308.896 91.7517 cv
308.96 91.8796 308.96 92.0714 308.96 92.2632 cv
308.96 92.6469 308.896 92.9027 308.704 93.1584 cv
308.512 93.4142 308.256 93.6061 307.937 93.7339 cv
307.617 93.8618 307.233 93.9258 306.849 93.9258 cv
306.466 93.9258 306.146 93.8618 305.826 93.8618 cv
305.507 93.7979 305.187 93.7339 304.803 93.6061 cv
305.059 92.2632 li
305.571 92.2632 li
305.571 92.6469 305.635 92.9666 305.89 93.1584 cv
306.082 93.3503 306.402 93.4142 306.786 93.4142 cv
307.169 93.4142 307.489 93.3503 307.681 93.2224 cv
307.873 93.0306 308 92.7748 308 92.4551 cv
308 92.3272 308 92.1354 307.937 92.0074 cv
307.873 91.8796 307.745 91.7517 307.617 91.6238 cv
307.489 91.5599 307.297 91.368 306.977 91.1762 cv
306.658 91.0483 306.466 90.8565 306.274 90.7286 cv
306.082 90.5368 305.954 90.4089 305.89 90.217 cv
305.762 90.0252 305.762 89.8334 305.762 89.5776 cv
305.762 89.3218 305.826 89.0021 306.018 88.8103 cv
306.146 88.5546 306.402 88.3627 306.722 88.2348 cv
307.041 88.1069 307.425 88.043 307.809 88.043 cv
cp
314.203 88.043 mo
314.714 88.043 315.034 88.1709 315.29 88.3627 cv
315.546 88.5546 315.674 88.8103 315.674 89.2579 cv
315.674 89.8973 315.354 90.4089 314.714 90.7286 cv
314.075 91.1122 313.116 91.2402 311.901 91.2402 cv
311.837 91.4959 311.837 91.7517 311.837 92.0074 cv
311.837 92.4551 311.901 92.7109 312.093 92.9027 cv
312.221 93.0945 312.477 93.2224 312.86 93.2224 cv
313.244 93.2224 313.564 93.1584 313.819 92.9666 cv
314.139 92.8387 314.459 92.5829 314.778 92.2632 cv
315.162 92.6469 li
314.778 93.0306 314.395 93.3503 314.011 93.6061 cv
313.564 93.7979 313.116 93.9258 312.604 93.9258 cv
312.029 93.9258 311.581 93.7339 311.262 93.3503 cv
310.942 93.0306 310.814 92.519 310.814 91.9435 cv
310.814 91.4959 310.878 91.0483 311.006 90.5368 cv
311.198 90.0892 311.389 89.6416 311.709 89.2579 cv
312.029 88.8743 312.413 88.5546 312.86 88.3627 cv
313.244 88.1709 313.755 88.043 314.203 88.043 cv
cp
318.551 86.7002 mo
319.382 86.7002 li
319.063 88.1709 li
320.853 88.1709 li
320.725 88.7464 li
318.935 88.7464 li
318.423 91.0483 li
318.295 91.4959 318.231 91.8157 318.231 92.0074 cv
318.167 92.1993 318.167 92.3272 318.167 92.4551 cv
318.167 92.9666 318.359 93.2224 318.807 93.2224 cv
318.935 93.2224 319.127 93.1584 319.318 93.0306 cv
319.51 92.9027 319.766 92.6469 320.022 92.3272 cv
320.405 92.7109 li
320.022 93.0945 319.702 93.4142 319.382 93.6061 cv
319.063 93.7979 318.743 93.9258 318.359 93.9258 cv
317.592 93.9258 317.144 93.4781 317.144 92.6469 cv
317.144 92.3911 317.208 92.1354 317.272 91.8157 cv
317.976 88.7464 li
316.953 88.7464 li
317.016 88.3627 li
317.272 88.3627 317.464 88.2988 317.592 88.2988 cv
317.72 88.2348 317.784 88.2348 317.848 88.1709 cv
317.976 88.1069 318.04 88.043 318.104 87.9151 cv
318.167 87.7872 318.231 87.6594 318.295 87.5314 cv
318.359 87.3396 318.423 87.0839 318.551 86.7002 cv
cp
302.054 86.7002 mo
302.885 86.7002 li
302.565 88.1709 li
304.356 88.1709 li
304.228 88.7464 li
302.437 88.7464 li
301.926 91.0483 li
301.798 91.4959 301.734 91.8157 301.67 92.0074 cv
301.67 92.1993 301.67 92.3272 301.67 92.4551 cv
301.67 92.9666 301.862 93.2224 302.246 93.2224 cv
302.437 93.2224 302.629 93.1584 302.821 93.0306 cv
303.013 92.9027 303.269 92.6469 303.524 92.3272 cv
303.844 92.7109 li
303.524 93.0945 303.205 93.4142 302.885 93.6061 cv
302.565 93.7979 302.246 93.9258 301.862 93.9258 cv
301.031 93.9258 300.647 93.4781 300.647 92.6469 cv
300.647 92.3911 300.647 92.1354 300.711 91.8157 cv
301.414 88.7464 li
300.455 88.7464 li
300.519 88.3627 li
300.775 88.3627 300.967 88.2988 301.031 88.2988 cv
301.159 88.2348 301.286 88.2348 301.35 88.1709 cv
301.414 88.1069 301.542 88.043 301.606 87.9151 cv
301.67 87.7872 301.734 87.6594 301.798 87.5314 cv
301.862 87.3396 301.926 87.0839 302.054 86.7002 cv
ef
324.242 83.7588 mo
324.562 83.7588 324.818 83.7588 325.009 83.8228 cv
325.265 83.8867 325.393 84.0146 325.521 84.1425 cv
325.649 84.2064 325.777 84.3982 325.841 84.5261 cv
325.905 84.718 325.905 84.8458 325.905 85.0377 cv
325.905 85.1655 325.905 85.2934 325.905 85.3574 cv
325.905 85.4852 325.841 85.5492 325.841 85.6771 cv
325.777 85.741 325.713 85.805 325.649 85.9329 cv
325.585 85.9968 325.521 86.1247 325.393 86.2526 cv
325.329 86.3165 325.265 86.4444 325.137 86.5723 cv
325.009 86.7002 324.881 86.8281 324.754 86.9559 cv
324.626 87.0839 324.498 87.2117 324.306 87.4036 cv
324.178 87.5314 324.05 87.6593 323.922 87.7872 cv
323.73 87.9791 323.603 88.1069 323.475 88.2348 cv
323.411 88.3627 323.283 88.4906 323.219 88.6185 cv
324.818 88.6185 li
324.945 88.6185 325.073 88.6185 325.137 88.6185 cv
325.201 88.6185 325.265 88.5545 325.329 88.5545 cv
325.393 88.4906 325.457 88.4266 325.457 88.3627 cv
325.521 88.2988 325.585 88.2348 325.585 88.1069 cv
326.032 88.1069 li
325.969 88.2988 325.969 88.4906 325.969 88.6824 cv
325.969 88.9382 325.969 89.13 325.905 89.3218 cv
322.26 89.3218 li
322.26 89.13 li
322.324 88.9382 322.388 88.8103 322.516 88.6185 cv
322.579 88.4906 322.707 88.3627 322.835 88.1709 cv
322.963 88.043 323.091 87.8511 323.219 87.7233 cv
323.347 87.5314 323.539 87.3396 323.73 87.2117 cv
323.986 86.892 324.178 86.7002 324.37 86.5084 cv
324.562 86.3165 324.69 86.1247 324.754 85.9968 cv
324.881 85.805 324.945 85.6771 324.945 85.5492 cv
325.009 85.4213 325.009 85.2934 325.009 85.1655 cv
325.009 85.0377 325.009 84.9098 324.945 84.7819 cv
324.881 84.654 324.881 84.5261 324.754 84.4622 cv
324.69 84.3343 324.626 84.2703 324.498 84.2703 cv
324.37 84.2064 324.242 84.1425 324.05 84.1425 cv
323.794 84.1425 323.603 84.2703 323.411 84.3982 cv
323.219 84.5261 323.091 84.718 322.963 85.0377 cv
322.388 85.0377 li
322.388 84.2064 li
322.771 84.0146 323.091 83.8867 323.411 83.8228 cv
323.73 83.7588 323.986 83.7588 324.242 83.7588 cv
ef
329.741 82.7997 mo
329.613 82.7997 329.485 82.8636 329.421 82.9276 cv
329.294 82.9915 329.166 83.0555 328.974 83.2473 cv
328.846 83.3752 328.718 83.567 328.654 83.7589 cv
328.526 83.8867 328.462 84.1425 328.398 84.3983 cv
328.334 84.7819 li
328.27 84.9098 328.27 85.0377 328.27 85.1656 cv
328.27 85.3574 328.334 85.4853 328.398 85.6132 cv
328.526 85.6771 328.654 85.7411 328.846 85.7411 cv
329.102 85.7411 329.357 85.6132 329.549 85.4213 cv
329.805 85.2296 329.933 84.9098 330.061 84.5901 cv
330.189 84.2064 330.253 83.8867 330.253 83.567 cv
330.253 83.3112 330.189 83.1194 330.125 82.9915 cv
330.061 82.8636 329.933 82.7997 329.741 82.7997 cv
cp
328.91 80.9453 mo
329.23 80.9453 li
328.654 83.0555 li
328.718 83.1194 li
328.974 82.7997 329.23 82.6078 329.421 82.48 cv
329.613 82.3521 329.805 82.2881 330.061 82.2881 cv
330.381 82.2881 330.572 82.416 330.764 82.6078 cv
330.892 82.7997 330.956 83.1194 330.956 83.567 cv
330.956 83.9507 330.892 84.3983 330.7 84.7819 cv
330.508 85.1656 330.253 85.4853 329.933 85.7411 cv
329.677 85.9968 329.294 86.1248 328.91 86.1248 cv
328.718 86.1248 328.59 86.0608 328.462 86.0608 cv
328.27 85.9968 328.143 85.9329 327.951 85.869 cv
327.951 85.9329 327.887 85.9329 327.823 85.9968 cv
327.631 86.1248 li
327.311 85.9968 li
328.206 81.9684 li
328.27 81.8405 328.27 81.7766 328.27 81.7126 cv
328.27 81.6487 328.27 81.5848 328.27 81.5208 cv
328.27 81.3929 328.27 81.329 328.206 81.329 cv
328.143 81.2651 328.015 81.2651 327.823 81.2651 cv
327.887 80.9453 li
ef
334.153 84.1425 mo
333.897 84.1425 333.642 84.2703 333.386 84.5261 cv
333.13 84.7819 332.938 85.1016 332.81 85.4853 cv
333.258 85.4853 333.642 85.4213 333.897 85.3574 cv
334.153 85.2935 334.345 85.1655 334.473 85.0377 cv
334.537 84.9098 334.601 84.7819 334.601 84.5901 cv
334.601 84.4622 334.601 84.3343 334.473 84.2703 cv
334.409 84.2064 334.281 84.1425 334.153 84.1425 cv
cp
334.345 83.7588 mo
334.665 83.7588 334.857 83.8228 335.048 83.9506 cv
335.24 84.0785 335.304 84.2703 335.304 84.5261 cv
335.304 85.4213 334.473 85.8689 332.746 85.8689 cv
332.746 85.9968 332.746 86.1247 332.746 86.3165 cv
332.746 86.5723 332.746 86.7641 332.874 86.892 cv
333.002 87.0199 333.13 87.0199 333.386 87.0199 cv
333.642 87.0199 333.833 87.0199 334.025 86.892 cv
334.217 86.7641 334.473 86.6362 334.729 86.3805 cv
334.984 86.7002 li
334.665 86.9559 334.409 87.2117 334.089 87.3396 cv
333.77 87.4675 333.514 87.5314 333.194 87.5314 cv
332.81 87.5314 332.491 87.4675 332.299 87.2117 cv
332.107 86.9559 331.979 86.7002 331.979 86.3165 cv
331.979 85.9968 332.043 85.741 332.107 85.4213 cv
332.235 85.1016 332.363 84.8458 332.555 84.5901 cv
332.81 84.3343 333.066 84.1425 333.322 83.9506 cv
333.642 83.8228 333.961 83.7588 334.345 83.7588 cv
ef
336.519 84.2703 mo
340.803 84.2703 li
340.803 83.6309 li
336.519 83.6309 li
cp
f
343.809 81.6487 mo
344.064 81.6487 li
344.064 81.7126 344.064 81.8405 344.064 82.0323 cv
344.064 82.2242 344.064 82.416 344.064 82.6078 cv
344.064 85.1016 li
344.064 85.2295 344.064 85.3574 344.064 85.4213 cv
344.128 85.4853 344.128 85.5492 344.192 85.5492 cv
344.256 85.6132 344.384 85.6132 344.512 85.6771 cv
344.64 85.6771 344.832 85.6771 345.151 85.6771 cv
345.151 86.0608 li
342.21 86.0608 li
342.21 85.6771 li
342.466 85.6771 342.722 85.6771 342.849 85.6771 cv
342.977 85.6132 343.105 85.6132 343.105 85.5492 cv
343.169 85.5492 343.233 85.4853 343.297 85.4213 cv
343.297 85.3574 343.297 85.2295 343.297 85.1016 cv
343.297 82.7357 li
343.297 82.6718 343.297 82.6078 343.297 82.6078 cv
343.233 82.5439 343.169 82.5439 343.105 82.5439 cv
343.041 82.5439 342.913 82.5439 342.786 82.6078 cv
342.658 82.7357 342.466 82.7997 342.21 82.9915 cv
342.018 82.6078 li
ef
361.969 68.924 mo
361.201 72.377 li
361.457 72.4409 361.777 72.4409 362.16 72.4409 cv
362.736 72.4409 363.247 72.377 363.567 72.2491 cv
363.823 72.0573 364.143 71.8015 364.334 71.4818 cv
364.59 71.0981 364.654 70.6505 364.654 70.1389 cv
364.654 69.7552 364.526 69.4355 364.27 69.1798 cv
364.015 68.988 363.567 68.924 363.056 68.924 cv
cp
363.823 65.1514 mo
363.439 65.1514 363.119 65.1514 362.8 65.1514 cv
362.096 68.3485 li
362.992 68.3485 li
363.439 68.3485 363.823 68.2846 364.143 68.2206 cv
364.398 68.1567 364.654 68.0288 364.846 67.837 cv
365.102 67.6451 365.23 67.3894 365.357 67.1336 cv
365.421 66.9418 365.485 66.6221 365.485 66.3024 cv
365.485 66.1744 365.485 65.9826 365.421 65.8547 cv
365.357 65.6629 365.23 65.535 365.102 65.4711 cv
364.91 65.3432 364.782 65.2792 364.59 65.2153 cv
364.398 65.1514 364.143 65.1514 363.823 65.1514 cv
cp
361.009 64.5759 mo
364.079 64.5759 li
364.718 64.5759 365.166 64.6398 365.549 64.7677 cv
365.933 64.8956 366.189 65.0874 366.381 65.3432 cv
366.572 65.5989 366.636 65.9187 366.636 66.3024 cv
366.636 66.8139 366.445 67.3254 366.125 67.7091 cv
365.805 68.0928 365.294 68.4125 364.654 68.6043 cv
364.654 68.6682 li
365.038 68.86 365.357 69.0519 365.549 69.3077 cv
365.741 69.6274 365.869 69.9471 365.869 70.2668 cv
365.869 70.8423 365.741 71.2899 365.485 71.6736 cv
365.23 72.0573 364.846 72.377 364.334 72.6327 cv
363.823 72.8245 363.119 72.9525 362.16 72.9525 cv
359.411 72.9525 li
359.475 72.6967 li
359.667 72.6327 359.794 72.6327 359.858 72.5688 cv
359.922 72.5048 359.986 72.4409 360.05 72.313 cv
360.114 72.2491 360.114 72.1212 360.178 71.9933 cv
360.242 71.8015 360.306 71.5457 360.37 71.162 cv
361.457 66.4302 li
361.521 65.9826 361.585 65.6629 361.585 65.4711 cv
361.585 65.2792 361.521 65.0874 361.457 65.0235 cv
361.329 64.9595 361.201 64.8956 360.945 64.8956 cv
ef
369.194 67.0696 mo
369.578 67.0696 li
369.578 71.4178 li
369.578 71.8015 369.642 72.0572 369.642 72.1851 cv
369.706 72.313 369.77 72.4409 369.833 72.5048 cv
369.897 72.5687 370.089 72.6327 370.281 72.6967 cv
370.281 72.9524 li
367.851 72.9524 li
367.851 72.6967 li
368.043 72.6327 368.171 72.5687 368.235 72.5687 cv
368.299 72.5048 368.363 72.4409 368.363 72.377 cv
368.427 72.313 368.491 72.249 368.491 72.0572 cv
368.555 71.9293 368.555 71.7375 368.555 71.4817 cv
368.555 68.7961 li
368.555 68.5403 368.555 68.2845 368.555 68.1567 cv
368.491 67.9648 368.491 67.837 368.427 67.773 cv
368.363 67.6451 368.299 67.5812 368.235 67.5812 cv
368.107 67.5173 367.979 67.4533 367.787 67.4533 cv
367.787 67.1336 li
cp
368.491 64.7037 mo
369.642 64.7037 li
369.642 65.9186 li
368.491 65.9186 li
cp
ef
385.564 67.5173 mo
385.18 67.5173 384.796 67.7091 384.413 68.0928 cv
384.029 68.5403 383.709 69.1158 383.517 69.8192 cv
384.093 69.8192 384.604 69.7553 384.988 69.6274 cv
385.436 69.5635 385.755 69.3716 385.947 69.1798 cv
386.203 68.924 386.267 68.6683 386.267 68.2846 cv
386.267 68.0288 386.203 67.837 386.139 67.7091 cv
386.011 67.5812 385.819 67.5173 385.564 67.5173 cv
cp
379.169 67.0057 mo
379.553 67.0057 379.937 67.0057 380.256 67.0696 cv
380.512 67.1336 380.832 67.1976 381.151 67.3254 cv
380.896 68.6043 li
380.384 68.6043 li
380.32 68.2206 380.256 67.9649 380.064 67.7731 cv
379.809 67.5812 379.553 67.5173 379.105 67.5173 cv
378.786 67.5173 378.53 67.5812 378.338 67.7091 cv
378.146 67.9009 378.018 68.0928 378.018 68.4125 cv
378.018 68.5403 378.082 68.6683 378.082 68.7961 cv
378.146 68.924 378.274 68.988 378.402 69.1798 cv
378.594 69.3077 378.786 69.4355 379.169 69.6274 cv
379.425 69.8192 379.617 69.9471 379.745 70.075 cv
379.937 70.2029 380.064 70.3307 380.128 70.4587 cv
380.192 70.5865 380.256 70.7144 380.32 70.8423 cv
380.384 70.9702 380.384 71.162 380.384 71.3539 cv
380.384 71.7375 380.32 72.0573 380.064 72.313 cv
379.873 72.5688 379.617 72.7606 379.297 72.8885 cv
378.977 73.0164 378.594 73.0803 378.146 73.0803 cv
377.826 73.0803 377.507 73.0803 377.187 73.0164 cv
376.803 72.9525 376.484 72.8885 376.036 72.7606 cv
376.356 71.4178 li
376.867 71.4178 li
376.867 71.8015 376.995 72.1212 377.187 72.313 cv
377.379 72.5048 377.699 72.5688 378.146 72.5688 cv
378.53 72.5688 378.85 72.5048 379.041 72.313 cv
379.297 72.1851 379.361 71.9293 379.361 71.6096 cv
379.361 71.4178 379.361 71.226 379.297 71.0981 cv
379.233 70.9702 379.169 70.8423 378.977 70.7144 cv
378.85 70.5865 378.658 70.4587 378.338 70.2668 cv
378.018 70.075 377.763 69.8832 377.571 69.7553 cv
377.379 69.6274 377.251 69.4355 377.187 69.2437 cv
377.123 69.0519 377.059 68.8601 377.059 68.6043 cv
377.059 68.2846 377.123 68.0288 377.315 67.7731 cv
377.507 67.5173 377.763 67.3254 378.082 67.1976 cv
378.402 67.0696 378.786 67.0057 379.169 67.0057 cv
cp
385.819 67.0057 mo
386.331 67.0057 386.651 67.1336 386.906 67.3254 cv
387.162 67.5173 387.29 67.837 387.29 68.2206 cv
387.29 68.924 386.97 69.4355 386.331 69.8192 cv
385.691 70.1389 384.668 70.3307 383.389 70.3307 cv
383.389 70.5865 383.326 70.8423 383.326 71.0981 cv
383.326 71.5457 383.453 71.8654 383.581 72.0573 cv
383.773 72.2491 384.029 72.377 384.413 72.377 cv
384.796 72.377 385.116 72.2491 385.436 72.1212 cv
385.755 71.9293 386.075 71.6736 386.395 71.3539 cv
386.779 71.7375 li
386.395 72.1851 386.011 72.5048 385.564 72.7606 cv
385.18 72.9525 384.668 73.0803 384.157 73.0803 cv
383.581 73.0803 383.07 72.8885 382.75 72.5048 cv
382.43 72.1851 382.302 71.6736 382.302 71.0341 cv
382.302 70.5865 382.366 70.1389 382.494 69.6274 cv
382.686 69.1158 382.942 68.6683 383.262 68.2846 cv
383.581 67.837 383.965 67.5812 384.413 67.3254 cv
384.86 67.1336 385.308 67.0057 385.819 67.0057 cv
cp
390.359 65.599 mo
391.191 65.599 li
390.871 67.1336 li
392.725 67.1336 li
392.597 67.7091 li
390.679 67.7091 li
390.167 70.1389 li
390.04 70.5865 389.976 70.9063 389.976 71.0981 cv
389.912 71.2899 389.912 71.4818 389.912 71.6096 cv
389.912 72.1212 390.104 72.377 390.551 72.377 cv
390.743 72.377 390.935 72.313 391.127 72.1212 cv
391.318 71.9933 391.574 71.8015 391.83 71.4178 cv
392.214 71.8015 li
391.83 72.2491 391.51 72.5688 391.191 72.7606 cv
390.871 72.9525 390.487 73.0803 390.167 73.0803 cv
389.272 73.0803 388.825 72.6328 388.825 71.8015 cv
388.825 71.4818 388.889 71.226 388.953 70.9063 cv
389.656 67.7091 li
388.633 67.7091 li
388.761 67.3254 li
389.016 67.3254 389.144 67.2615 389.272 67.2615 cv
389.4 67.1976 389.528 67.1976 389.592 67.1336 cv
389.72 67.0696 389.784 67.0057 389.848 66.8779 cv
389.912 66.7499 389.976 66.6221 390.04 66.4942 cv
390.104 66.3024 390.231 65.9827 390.359 65.599 cv
cp
373.223 65.599 mo
374.118 65.599 li
373.734 67.1336 li
375.588 67.1336 li
375.461 67.7091 li
373.606 67.7091 li
373.095 70.1389 li
372.967 70.5865 372.903 70.9063 372.839 71.0981 cv
372.839 71.2899 372.839 71.4818 372.839 71.6096 cv
372.839 72.1212 373.031 72.377 373.478 72.377 cv
373.606 72.377 373.798 72.313 374.054 72.1212 cv
374.246 71.9933 374.501 71.8015 374.757 71.4178 cv
375.077 71.8015 li
374.757 72.2491 374.437 72.5688 374.054 72.7606 cv
373.734 72.9525 373.414 73.0803 373.031 73.0803 cv
372.199 73.0803 371.752 72.6328 371.752 71.8015 cv
371.752 71.4818 371.816 71.226 371.88 70.9063 cv
372.583 67.7091 li
371.56 67.7091 li
371.624 67.3254 li
371.88 67.3254 372.072 67.2615 372.199 67.2615 cv
372.327 67.1976 372.455 67.1976 372.519 67.1336 cv
372.583 67.0696 372.647 67.0057 372.711 66.8779 cv
372.839 66.7499 372.903 66.6221 372.967 66.4942 cv
373.031 66.3024 373.095 65.9827 373.223 65.599 cv
ef
396.306 62.5936 mo
396.562 62.5936 li
396.562 62.7215 396.562 62.9133 396.562 63.0413 cv
396.562 63.1691 396.562 63.297 396.562 63.4249 cv
396.562 63.4888 396.562 63.6167 396.562 63.7446 cv
396.562 67.1336 li
396.562 67.2615 396.562 67.3254 396.562 67.3893 cv
396.562 67.4533 396.562 67.5173 396.562 67.5812 cv
396.562 67.5812 396.626 67.6451 396.626 67.7091 cv
396.626 67.7091 396.69 67.7091 396.69 67.773 cv
396.754 67.773 396.818 67.837 396.881 67.837 cv
396.881 67.837 397.009 67.9009 397.073 67.9009 cv
397.201 67.9009 397.265 67.9009 397.393 67.9009 cv
397.521 67.9648 397.713 67.9648 397.905 67.9648 cv
397.905 68.3485 li
394.324 68.3485 li
394.324 67.9648 li
394.516 67.9648 394.643 67.9009 394.771 67.9009 cv
394.899 67.9009 395.027 67.9009 395.091 67.9009 cv
395.155 67.9009 395.219 67.837 395.283 67.837 cv
395.347 67.837 395.411 67.837 395.411 67.773 cv
395.475 67.773 395.539 67.7091 395.539 67.7091 cv
395.603 67.6451 395.603 67.6451 395.603 67.5812 cv
395.667 67.5173 395.667 67.4533 395.667 67.3893 cv
395.667 67.3254 395.667 67.2615 395.667 67.1336 cv
395.667 63.9365 li
395.667 63.8085 395.667 63.7446 395.603 63.6807 cv
395.539 63.6807 395.475 63.6167 395.411 63.6167 cv
395.347 63.6167 395.155 63.6807 395.027 63.7446 cv
394.835 63.8725 394.579 64.0004 394.324 64.1922 cv
394.26 64.1282 394.196 64.0643 394.196 64.0004 cv
394.132 63.9365 394.132 63.8725 394.068 63.8085 cv
394.452 63.5528 394.835 63.361 395.155 63.1691 cv
395.539 62.9773 395.922 62.7855 396.306 62.5936 cv
ef
385.883 53.3218 mo
385.116 57.0305 li
385.372 57.0305 385.691 57.0305 386.075 57.0305 cv
386.714 57.0305 387.226 56.9666 387.546 56.8387 cv
387.865 56.6469 388.185 56.3911 388.441 56.0074 cv
388.633 55.6238 388.761 55.1762 388.761 54.6007 cv
388.761 54.217 388.633 53.8334 388.313 53.6415 cv
388.057 53.4497 387.61 53.3218 387.034 53.3218 cv
cp
387.802 49.3574 mo
387.482 49.3574 387.098 49.3574 386.778 49.3574 cv
386.075 52.7463 li
386.97 52.7463 li
387.482 52.7463 387.865 52.6824 388.185 52.6185 cv
388.505 52.5545 388.761 52.3627 388.953 52.1708 cv
389.208 51.979 389.4 51.7233 389.464 51.4675 cv
389.592 51.2117 389.656 50.9559 389.656 50.6362 cv
389.656 50.4444 389.592 50.2526 389.528 50.0607 cv
389.464 49.9329 389.336 49.805 389.208 49.6771 cv
389.016 49.5492 388.889 49.4852 388.633 49.4213 cv
388.441 49.3574 388.185 49.3574 387.802 49.3574 cv
cp
384.924 48.7819 mo
388.121 48.7819 li
388.761 48.7819 389.272 48.8458 389.72 48.9737 cv
390.103 49.1016 390.359 49.2934 390.551 49.6132 cv
390.743 49.8689 390.807 50.1886 390.807 50.5723 cv
390.807 51.1478 390.679 51.6593 390.295 52.043 cv
389.976 52.4906 389.464 52.8103 388.761 53.0021 cv
388.761 53.066 li
389.144 53.2579 389.464 53.4497 389.656 53.7695 cv
389.912 54.0892 389.976 54.4089 389.976 54.7925 cv
389.976 55.368 389.848 55.8156 389.592 56.2632 cv
389.336 56.6469 388.953 56.9666 388.441 57.2224 cv
387.865 57.4781 387.098 57.606 386.075 57.606 cv
383.198 57.606 li
383.262 57.2863 li
383.453 57.2863 383.581 57.2224 383.645 57.1584 cv
383.709 57.0945 383.837 57.0305 383.837 56.9026 cv
383.901 56.8387 383.965 56.7108 384.029 56.5829 cv
384.093 56.3911 384.157 56.1353 384.221 55.6877 cv
385.308 50.7002 li
385.436 50.2526 385.5 49.9329 385.5 49.6771 cv
385.5 49.4852 385.436 49.2934 385.308 49.2295 cv
385.244 49.1655 385.052 49.1016 384.86 49.1016 cv
ef
393.556 51.3397 mo
393.94 51.3397 li
393.94 56.0075 li
393.94 56.3912 394.004 56.647 394.004 56.7748 cv
394.068 56.9027 394.132 57.0306 394.196 57.0945 cv
394.324 57.1585 394.452 57.2224 394.707 57.2864 cv
394.707 57.6061 li
392.15 57.6061 li
392.15 57.2864 li
392.341 57.2224 392.405 57.2224 392.533 57.1585 cv
392.597 57.0945 392.661 57.0945 392.661 57.0306 cv
392.725 56.9027 392.789 56.8387 392.789 56.7109 cv
392.853 56.519 392.853 56.3272 392.853 56.0075 cv
392.853 53.194 li
392.853 52.9382 392.853 52.6825 392.853 52.5546 cv
392.853 52.3627 392.789 52.2349 392.725 52.107 cv
392.661 52.043 392.597 51.9791 392.533 51.9152 cv
392.405 51.8512 392.278 51.7873 392.022 51.7873 cv
392.022 51.4036 li
cp
392.789 48.9098 mo
394.004 48.9098 li
394.004 50.1248 li
392.789 50.1248 li
cp
ef
410.821 51.8511 mo
410.437 51.8511 409.99 52.043 409.606 52.4905 cv
409.159 52.9382 408.903 53.5137 408.647 54.281 cv
409.286 54.281 409.798 54.217 410.246 54.0892 cv
410.693 54.0252 411.013 53.8334 411.205 53.5776 cv
411.461 53.3857 411.588 53.066 411.588 52.6824 cv
411.588 52.4266 411.524 52.1708 411.397 52.043 cv
411.269 51.9151 411.077 51.8511 410.821 51.8511 cv
cp
404.107 51.3396 mo
404.491 51.3396 404.874 51.3396 405.194 51.4035 cv
405.514 51.4675 405.833 51.5314 406.153 51.6593 cv
405.897 53.0021 li
405.386 53.0021 li
405.322 52.6185 405.194 52.2988 405.002 52.1069 cv
404.746 51.9151 404.427 51.8511 403.979 51.8511 cv
403.659 51.8511 403.404 51.9151 403.212 52.1069 cv
402.956 52.2348 402.892 52.4905 402.892 52.8103 cv
402.892 52.9382 402.892 53.066 402.956 53.194 cv
403.02 53.3218 403.084 53.4497 403.276 53.5776 cv
403.404 53.7055 403.659 53.8973 404.043 54.0892 cv
404.299 54.281 404.555 54.4089 404.683 54.5367 cv
404.874 54.6646 405.002 54.8564 405.066 54.9844 cv
405.194 55.1122 405.258 55.2401 405.258 55.368 cv
405.322 55.5598 405.322 55.6877 405.322 55.9435 cv
405.322 56.3271 405.258 56.6469 405.066 56.9026 cv
404.81 57.1584 404.555 57.4142 404.235 57.5421 cv
403.851 57.67 403.468 57.7339 403.02 57.7339 cv
402.636 57.7339 402.317 57.67 401.933 57.67 cv
401.613 57.606 401.23 57.4781 400.782 57.3502 cv
401.102 55.9435 li
401.613 55.9435 li
401.613 56.3911 401.741 56.7108 401.933 56.9026 cv
402.189 57.0945 402.508 57.2224 403.02 57.2224 cv
403.404 57.2224 403.723 57.0945 403.979 56.9666 cv
404.171 56.7748 404.299 56.519 404.299 56.1353 cv
404.299 55.9435 404.299 55.8156 404.235 55.6877 cv
404.171 55.4959 404.043 55.368 403.915 55.2401 cv
403.723 55.1122 403.532 54.9844 403.212 54.7925 cv
402.828 54.5367 402.572 54.4089 402.381 54.217 cv
402.189 54.0252 402.061 53.8973 401.997 53.7055 cv
401.869 53.5137 401.805 53.2579 401.805 53.0021 cv
401.805 52.6824 401.933 52.3627 402.125 52.1069 cv
402.317 51.8511 402.572 51.6593 402.892 51.5314 cv
403.212 51.4035 403.659 51.3396 404.107 51.3396 cv
cp
411.077 51.3396 mo
411.588 51.3396 411.972 51.4035 412.292 51.6593 cv
412.548 51.8511 412.675 52.1708 412.675 52.6185 cv
412.675 53.3857 412.292 53.8973 411.588 54.281 cv
410.949 54.6646 409.926 54.8564 408.519 54.8564 cv
408.519 55.1122 408.455 55.368 408.455 55.6877 cv
408.455 56.1353 408.583 56.455 408.711 56.6469 cv
408.903 56.8387 409.223 56.9666 409.606 56.9666 cv
409.99 56.9666 410.373 56.9026 410.693 56.7108 cv
411.013 56.519 411.333 56.2632 411.716 55.8796 cv
412.1 56.3271 li
411.716 56.7748 411.269 57.1584 410.821 57.3502 cv
410.373 57.606 409.926 57.7339 409.35 57.7339 cv
408.711 57.7339 408.199 57.5421 407.88 57.1584 cv
407.56 56.7748 407.368 56.2632 407.368 55.5598 cv
407.368 55.1122 407.432 54.6007 407.624 54.0892 cv
407.752 53.5137 408.008 53.066 408.391 52.6185 cv
408.711 52.2348 409.095 51.9151 409.606 51.6593 cv
410.054 51.4035 410.565 51.3396 411.077 51.3396 cv
cp
415.873 49.8049 mo
416.768 49.8049 li
416.384 51.4035 li
418.366 51.4035 li
418.239 52.1069 li
416.256 52.1069 li
415.681 54.6007 li
415.553 55.1122 415.489 55.4319 415.489 55.6238 cv
415.425 55.8796 415.425 56.0074 415.425 56.1353 cv
415.425 56.7108 415.617 56.9666 416.064 56.9666 cv
416.256 56.9666 416.448 56.9026 416.704 56.7748 cv
416.896 56.5829 417.151 56.3271 417.471 56.0074 cv
417.855 56.3911 li
417.471 56.8387 417.088 57.1584 416.768 57.4142 cv
416.384 57.606 416 57.7339 415.681 57.7339 cv
414.722 57.7339 414.274 57.2863 414.274 56.3271 cv
414.274 56.0714 414.338 55.7516 414.402 55.4319 cv
415.169 52.1069 li
414.082 52.1069 li
414.21 51.6593 li
414.466 51.6593 414.658 51.5953 414.786 51.5953 cv
414.913 51.5314 414.977 51.4675 415.105 51.4035 cv
415.169 51.4035 415.233 51.2756 415.361 51.1478 cv
415.425 51.0838 415.489 50.892 415.553 50.7641 cv
415.617 50.5723 415.745 50.2526 415.873 49.8049 cv
cp
397.777 49.8049 mo
398.672 49.8049 li
398.352 51.4035 li
400.334 51.4035 li
400.143 52.1069 li
398.224 52.1069 li
397.649 54.6007 li
397.521 55.1122 397.457 55.4319 397.393 55.6238 cv
397.393 55.8796 397.393 56.0074 397.393 56.1353 cv
397.393 56.7108 397.585 56.9666 398.032 56.9666 cv
398.224 56.9666 398.416 56.9026 398.608 56.7748 cv
398.864 56.5829 399.12 56.3271 399.375 56.0074 cv
399.759 56.3911 li
399.375 56.8387 399.056 57.1584 398.672 57.4142 cv
398.352 57.606 397.969 57.7339 397.585 57.7339 cv
396.69 57.7339 396.242 57.2863 396.242 56.3271 cv
396.242 56.0714 396.306 55.7516 396.37 55.4319 cv
397.137 52.1069 li
396.05 52.1069 li
396.114 51.6593 li
396.37 51.6593 396.562 51.5953 396.69 51.5953 cv
396.818 51.5314 396.945 51.4675 397.009 51.4035 cv
397.137 51.4035 397.201 51.2756 397.265 51.1478 cv
397.329 51.0838 397.393 50.892 397.521 50.7641 cv
397.585 50.5723 397.649 50.2526 397.777 49.8049 cv
ef
422.075 47.0554 mo
421.819 47.0554 421.628 47.1194 421.5 47.2473 cv
421.372 47.3751 421.244 47.5031 421.116 47.7588 cv
421.052 47.9506 420.988 48.2064 420.988 48.5261 cv
420.924 48.8458 420.924 49.2295 420.924 49.6132 cv
420.924 50.1247 420.924 50.5084 420.988 50.8281 cv
420.988 51.2117 421.116 51.4675 421.18 51.7233 cv
421.308 51.9151 421.372 52.1069 421.564 52.1709 cv
421.691 52.2988 421.883 52.3627 422.075 52.3627 cv
422.267 52.3627 422.395 52.2988 422.587 52.1709 cv
422.715 52.1069 422.842 51.9151 422.906 51.7233 cv
423.034 51.5314 423.098 51.2757 423.098 50.9559 cv
423.162 50.6362 423.226 50.2526 423.226 49.805 cv
423.226 49.3574 423.162 48.9098 423.098 48.59 cv
423.034 48.2064 422.97 47.9506 422.906 47.6948 cv
422.778 47.5031 422.715 47.3112 422.523 47.2473 cv
422.395 47.1194 422.203 47.0554 422.075 47.0554 cv
cp
422.075 46.6078 mo
422.459 46.6078 422.778 46.6718 423.034 46.7996 cv
423.29 46.9915 423.482 47.1833 423.674 47.4391 cv
423.865 47.6948 423.993 48.0146 424.057 48.3983 cv
424.121 48.718 424.185 49.1655 424.185 49.6132 cv
424.185 50.7002 423.993 51.4675 423.61 52.043 cv
423.226 52.5545 422.715 52.8103 422.011 52.8103 cv
421.308 52.8103 420.796 52.5545 420.413 52.043 cv
420.093 51.5314 419.901 50.7641 419.901 49.741 cv
419.901 49.2295 419.965 48.7819 420.093 48.3343 cv
420.157 47.9506 420.349 47.6309 420.54 47.3751 cv
420.732 47.1194 420.924 46.9276 421.18 46.7996 cv
421.436 46.6718 421.755 46.6078 422.075 46.6078 cv
ef
277.627 147.702 mo
277.627 153.968 li
301.734 153.968 li
301.734 147.574 li
@
277.627 160.938 mo
277.627 167.205 li
325.521 167.205 li
325.521 160.81 li
@
277.627 184.022 mo
277.627 190.352 li
447.652 190.352 li
447.652 183.958 li
@
1 /0 /CSD get_res sepcs
1 sep
/HFDYNL+SimSun-GBK-EUC-H-Identity-H findfont [12.0213 0 0 -12.0211 0 0 ]msf
284.853 181.272 mo
(\001\002\001\002)
[12.0213 0 ]xsh
.750267 lw
118.857 43.027 mo
157.158 43.027 li
157.158 71.4178 li
192.583 71.4178 li
.750179 .679652 .670192 .901488 cmyk
@
118.857 43.027 mo
157.158 43.027 li
157.158 156.718 li
191.624 156.718 li
@
390.423 182.039 mo
389.656 185.428 li
389.912 185.428 390.231 185.428 390.551 185.428 cv
391.19 185.428 391.638 185.365 391.958 185.237 cv
392.214 185.109 392.469 184.853 392.725 184.533 cv
392.917 184.15 393.045 183.702 393.045 183.19 cv
393.045 182.807 392.917 182.551 392.661 182.295 cv
392.405 182.103 391.958 182.039 391.446 182.039 cv
cp
392.15 178.395 mo
391.83 178.395 391.51 178.395 391.19 178.395 cv
390.551 181.528 li
391.382 181.528 li
391.83 181.528 392.214 181.464 392.469 181.4 cv
392.789 181.336 392.981 181.144 393.237 180.952 cv
393.429 180.761 393.556 180.569 393.684 180.313 cv
393.748 180.121 393.812 179.865 393.812 179.546 cv
393.812 179.354 393.812 179.226 393.748 179.034 cv
393.684 178.906 393.556 178.778 393.429 178.714 cv
393.301 178.587 393.109 178.523 392.917 178.459 cv
392.725 178.395 392.469 178.395 392.15 178.395 cv
cp
389.528 177.883 mo
392.469 177.883 li
393.045 177.883 393.492 177.947 393.876 178.075 cv
394.26 178.203 394.516 178.395 394.643 178.587 cv
394.835 178.842 394.899 179.162 394.899 179.482 cv
394.899 180.057 394.771 180.505 394.452 180.889 cv
394.132 181.272 393.684 181.528 393.045 181.72 cv
393.045 181.848 li
393.365 181.976 393.684 182.167 393.876 182.423 cv
394.068 182.743 394.132 182.999 394.132 183.382 cv
394.132 183.894 394.068 184.341 393.812 184.725 cv
393.556 185.109 393.173 185.365 392.725 185.62 cv
392.214 185.812 391.51 185.94 390.615 185.94 cv
387.929 185.94 li
387.993 185.684 li
388.185 185.62 388.313 185.62 388.377 185.556 cv
388.441 185.492 388.505 185.428 388.569 185.301 cv
388.569 185.237 388.633 185.109 388.697 184.981 cv
388.761 184.853 388.825 184.597 388.889 184.214 cv
389.912 179.61 li
389.976 179.226 390.04 178.906 390.04 178.714 cv
390.04 178.523 389.976 178.395 389.912 178.267 cv
389.784 178.203 389.656 178.203 389.464 178.139 cv
ef
397.393 180.249 mo
397.777 180.249 li
397.777 184.469 li
397.777 184.789 397.777 185.045 397.841 185.173 cv
397.841 185.301 397.905 185.428 398.032 185.492 cv
398.096 185.556 398.224 185.62 398.416 185.684 cv
398.416 185.94 li
396.114 185.94 li
396.114 185.684 li
396.242 185.62 396.37 185.556 396.434 185.556 cv
396.498 185.492 396.562 185.428 396.626 185.365 cv
396.69 185.301 396.69 185.237 396.69 185.109 cv
396.754 184.981 396.754 184.789 396.754 184.469 cv
396.754 181.912 li
396.754 181.656 396.754 181.464 396.754 181.272 cv
396.754 181.144 396.69 181.016 396.69 180.952 cv
396.626 180.825 396.562 180.761 396.434 180.697 cv
396.37 180.697 396.242 180.633 396.05 180.633 cv
396.05 180.313 li
cp
396.754 177.947 mo
397.841 177.947 li
397.841 179.098 li
396.754 179.098 li
cp
ef
413.251 180.633 mo
412.803 180.633 412.42 180.888 412.1 181.272 cv
411.716 181.656 411.397 182.231 411.205 182.871 cv
411.78 182.871 412.292 182.871 412.675 182.743 cv
413.059 182.679 413.379 182.487 413.571 182.295 cv
413.826 182.103 413.89 181.784 413.89 181.4 cv
413.89 181.208 413.826 181.016 413.762 180.888 cv
413.635 180.761 413.443 180.633 413.251 180.633 cv
cp
407.048 180.185 mo
407.432 180.185 407.752 180.249 408.072 180.249 cv
408.327 180.313 408.647 180.377 408.967 180.505 cv
408.711 181.72 li
408.199 181.72 li
408.135 181.4 408.072 181.144 407.88 180.952 cv
407.688 180.761 407.368 180.633 406.984 180.633 cv
406.665 180.633 406.409 180.761 406.217 180.888 cv
406.025 181.08 405.897 181.272 405.897 181.528 cv
405.897 181.656 405.961 181.784 406.025 181.912 cv
406.025 182.039 406.153 182.167 406.281 182.295 cv
406.473 182.423 406.665 182.551 406.984 182.743 cv
407.24 182.871 407.432 183.063 407.624 183.126 cv
407.752 183.254 407.88 183.382 407.944 183.51 cv
408.072 183.638 408.135 183.766 408.135 183.894 cv
408.199 184.022 408.199 184.214 408.199 184.405 cv
408.199 184.789 408.135 185.045 407.944 185.301 cv
407.752 185.556 407.496 185.748 407.176 185.876 cv
406.857 186.004 406.473 186.068 406.025 186.068 cv
405.706 186.068 405.386 186.004 405.066 186.004 cv
404.746 185.94 404.427 185.876 404.043 185.748 cv
404.299 184.469 li
404.81 184.469 li
404.81 184.789 404.874 185.109 405.13 185.301 cv
405.322 185.492 405.642 185.62 406.025 185.62 cv
406.409 185.62 406.729 185.492 406.921 185.365 cv
407.112 185.173 407.24 184.917 407.24 184.597 cv
407.24 184.469 407.24 184.277 407.176 184.15 cv
407.112 184.022 406.984 183.894 406.857 183.766 cv
406.729 183.702 406.537 183.51 406.217 183.382 cv
405.897 183.19 405.642 182.999 405.514 182.871 cv
405.322 182.679 405.194 182.551 405.13 182.359 cv
405.002 182.167 405.002 181.976 405.002 181.72 cv
405.002 181.464 405.066 181.144 405.258 180.952 cv
405.386 180.697 405.642 180.505 405.961 180.377 cv
406.281 180.249 406.601 180.185 407.048 180.185 cv
cp
413.443 180.185 mo
413.954 180.185 414.274 180.313 414.53 180.505 cv
414.786 180.697 414.913 180.952 414.913 181.4 cv
414.913 182.039 414.594 182.551 413.954 182.871 cv
413.315 183.254 412.356 183.382 411.141 183.382 cv
411.077 183.638 411.077 183.894 411.077 184.15 cv
411.077 184.597 411.141 184.917 411.269 185.109 cv
411.461 185.237 411.716 185.365 412.1 185.365 cv
412.484 185.365 412.803 185.301 413.059 185.109 cv
413.379 184.981 413.699 184.725 414.018 184.405 cv
414.402 184.789 li
414.018 185.173 413.635 185.492 413.187 185.748 cv
412.803 185.94 412.356 186.068 411.844 186.068 cv
411.269 186.068 410.821 185.876 410.501 185.556 cv
410.182 185.173 410.054 184.661 410.054 184.086 cv
410.054 183.638 410.118 183.19 410.246 182.679 cv
410.437 182.231 410.629 181.784 410.949 181.4 cv
411.269 181.016 411.652 180.697 412.1 180.505 cv
412.484 180.313 412.931 180.185 413.443 180.185 cv
cp
417.791 178.842 mo
418.622 178.842 li
418.302 180.313 li
420.093 180.313 li
419.965 180.888 li
418.175 180.888 li
417.663 183.19 li
417.535 183.638 417.471 183.958 417.471 184.15 cv
417.407 184.341 417.407 184.533 417.407 184.597 cv
417.407 185.109 417.599 185.365 418.047 185.365 cv
418.175 185.365 418.366 185.301 418.558 185.173 cv
418.75 185.045 419.006 184.789 419.262 184.469 cv
419.645 184.853 li
419.262 185.237 418.942 185.556 418.622 185.748 cv
418.302 185.94 417.983 186.068 417.599 186.068 cv
416.768 186.068 416.384 185.62 416.384 184.789 cv
416.384 184.533 416.448 184.277 416.512 183.958 cv
417.215 180.888 li
416.192 180.888 li
416.256 180.505 li
416.512 180.505 416.704 180.441 416.832 180.441 cv
416.96 180.377 417.024 180.377 417.088 180.313 cv
417.215 180.249 417.279 180.185 417.343 180.057 cv
417.407 179.929 417.471 179.801 417.535 179.674 cv
417.599 179.482 417.663 179.226 417.791 178.842 cv
cp
401.294 178.842 mo
402.125 178.842 li
401.805 180.313 li
403.596 180.313 li
403.468 180.888 li
401.677 180.888 li
401.102 183.19 li
401.038 183.638 400.974 183.958 400.91 184.15 cv
400.91 184.341 400.91 184.533 400.91 184.597 cv
400.91 185.109 401.102 185.365 401.485 185.365 cv
401.677 185.365 401.869 185.301 402.061 185.173 cv
402.253 185.045 402.508 184.789 402.764 184.469 cv
403.084 184.853 li
402.764 185.237 402.445 185.556 402.125 185.748 cv
401.805 185.94 401.485 186.068 401.102 186.068 cv
400.27 186.068 399.887 185.62 399.887 184.789 cv
399.887 184.533 399.887 184.277 399.951 183.958 cv
400.654 180.888 li
399.695 180.888 li
399.759 180.505 li
400.015 180.505 400.143 180.441 400.27 180.441 cv
400.398 180.377 400.526 180.377 400.59 180.313 cv
400.654 180.249 400.782 180.185 400.846 180.057 cv
400.91 179.929 400.974 179.801 401.038 179.674 cv
401.102 179.482 401.166 179.226 401.294 178.842 cv
ef
423.482 175.901 mo
423.802 175.901 424.057 175.901 424.249 175.965 cv
424.441 176.029 424.633 176.157 424.761 176.285 cv
424.889 176.349 425.016 176.54 425.08 176.668 cv
425.144 176.86 425.144 176.988 425.144 177.18 cv
425.144 177.308 425.144 177.436 425.144 177.499 cv
425.144 177.627 425.08 177.691 425.016 177.819 cv
425.016 177.883 424.953 178.011 424.889 178.075 cv
424.825 178.203 424.761 178.267 424.633 178.395 cv
424.569 178.459 424.505 178.587 424.377 178.714 cv
424.249 178.842 424.121 178.97 423.993 179.098 cv
423.865 179.226 423.738 179.354 423.546 179.546 cv
423.418 179.674 423.29 179.801 423.162 179.993 cv
422.97 180.121 422.842 180.249 422.715 180.377 cv
422.651 180.505 422.523 180.633 422.459 180.761 cv
424.057 180.761 li
424.185 180.761 424.313 180.761 424.377 180.761 cv
424.441 180.761 424.505 180.697 424.569 180.697 cv
424.633 180.633 424.697 180.633 424.697 180.505 cv
424.761 180.441 424.825 180.377 424.825 180.249 cv
425.272 180.249 li
425.208 180.441 425.208 180.633 425.208 180.825 cv
425.208 181.08 425.144 181.272 425.144 181.464 cv
421.5 181.464 li
421.5 181.272 li
421.564 181.08 421.628 180.952 421.755 180.761 cv
421.819 180.633 421.947 180.505 422.075 180.313 cv
422.139 180.185 422.331 179.993 422.459 179.865 cv
422.587 179.674 422.778 179.482 422.906 179.354 cv
423.226 179.034 423.418 178.842 423.61 178.65 cv
423.738 178.459 423.929 178.267 423.993 178.139 cv
424.121 178.011 424.185 177.819 424.185 177.691 cv
424.249 177.563 424.249 177.436 424.249 177.308 cv
424.249 177.18 424.249 177.052 424.185 176.924 cv
424.121 176.796 424.121 176.668 423.993 176.604 cv
423.929 176.476 423.865 176.412 423.738 176.412 cv
423.61 176.349 423.482 176.285 423.29 176.285 cv
423.034 176.285 422.778 176.412 422.651 176.54 cv
422.459 176.668 422.331 176.86 422.203 177.18 cv
421.628 177.18 li
421.628 176.349 li
422.011 176.157 422.331 176.029 422.651 175.965 cv
422.97 175.901 423.226 175.901 423.482 175.901 cv
ef
428.981 174.942 mo
428.853 174.942 428.725 175.006 428.661 175.07 cv
428.533 175.134 428.405 175.198 428.214 175.389 cv
428.086 175.581 427.958 175.709 427.894 175.901 cv
427.766 176.029 427.702 176.285 427.638 176.54 cv
427.574 176.924 li
427.51 177.052 427.51 177.244 427.51 177.308 cv
427.51 177.5 427.574 177.691 427.638 177.755 cv
427.766 177.819 427.894 177.883 428.086 177.883 cv
428.341 177.883 428.597 177.755 428.789 177.563 cv
429.045 177.372 429.173 177.052 429.301 176.732 cv
429.429 176.412 429.429 176.029 429.429 175.709 cv
429.429 175.453 429.429 175.261 429.365 175.134 cv
429.301 175.006 429.173 174.942 428.981 174.942 cv
cp
428.15 173.087 mo
428.405 173.087 li
427.894 175.198 li
427.958 175.261 li
428.214 174.942 428.469 174.75 428.661 174.622 cv
428.853 174.494 429.045 174.43 429.301 174.43 cv
429.62 174.43 429.812 174.558 430.004 174.75 cv
430.132 175.006 430.196 175.261 430.196 175.709 cv
430.196 176.093 430.132 176.54 429.94 176.924 cv
429.748 177.308 429.492 177.691 429.173 177.883 cv
428.853 178.139 428.533 178.267 428.15 178.267 cv
427.958 178.267 427.83 178.203 427.702 178.203 cv
427.51 178.139 427.382 178.075 427.191 178.011 cv
427.191 178.075 427.127 178.075 427.063 178.139 cv
426.871 178.267 li
426.551 178.139 li
427.446 174.111 li
427.51 173.983 427.51 173.919 427.51 173.855 cv
427.51 173.791 427.51 173.727 427.51 173.663 cv
427.51 173.535 427.51 173.471 427.446 173.471 cv
427.382 173.407 427.254 173.407 427.063 173.407 cv
427.127 173.087 li
ef
433.393 176.285 mo
433.137 176.285 432.881 176.412 432.626 176.668 cv
432.37 176.924 432.178 177.244 432.05 177.627 cv
432.498 177.627 432.881 177.563 433.137 177.5 cv
433.393 177.436 433.585 177.308 433.713 177.18 cv
433.777 177.052 433.841 176.924 433.841 176.796 cv
433.841 176.604 433.841 176.476 433.713 176.412 cv
433.649 176.349 433.521 176.285 433.393 176.285 cv
cp
433.585 175.901 mo
433.841 175.901 434.096 175.965 434.288 176.093 cv
434.48 176.285 434.544 176.476 434.544 176.668 cv
434.544 177.563 433.713 178.011 431.986 178.011 cv
431.986 178.139 431.922 178.267 431.922 178.459 cv
431.922 178.714 431.986 178.906 432.114 179.034 cv
432.242 179.162 432.37 179.226 432.626 179.226 cv
432.881 179.226 433.073 179.162 433.265 179.034 cv
433.457 178.97 433.713 178.778 433.969 178.523 cv
434.224 178.842 li
433.905 179.098 433.649 179.354 433.329 179.482 cv
433.009 179.61 432.754 179.674 432.434 179.674 cv
432.05 179.674 431.73 179.61 431.539 179.354 cv
431.347 179.162 431.219 178.842 431.219 178.459 cv
431.219 178.139 431.283 177.883 431.347 177.563 cv
431.475 177.244 431.603 176.988 431.794 176.732 cv
432.05 176.476 432.306 176.285 432.562 176.093 cv
432.881 175.965 433.201 175.901 433.585 175.901 cv
ef
435.759 176.412 mo
440.043 176.412 li
440.043 175.773 li
435.759 175.773 li
cp
f
443.048 173.855 mo
443.304 173.855 li
443.304 173.855 443.304 173.983 443.304 174.174 cv
443.304 174.366 443.304 174.558 443.304 174.75 cv
443.304 177.244 li
443.304 177.436 443.304 177.5 443.304 177.563 cv
443.368 177.627 443.368 177.691 443.432 177.755 cv
443.496 177.755 443.624 177.819 443.752 177.819 cv
443.88 177.819 444.072 177.819 444.391 177.819 cv
444.391 178.203 li
441.45 178.203 li
441.45 177.819 li
441.706 177.819 441.961 177.819 442.089 177.819 cv
442.217 177.819 442.281 177.755 442.345 177.755 cv
442.409 177.691 442.473 177.627 442.537 177.563 cv
442.537 177.5 442.537 177.436 442.537 177.244 cv
442.537 174.878 li
442.537 174.814 442.537 174.75 442.473 174.75 cv
442.473 174.686 442.409 174.686 442.345 174.686 cv
442.281 174.686 442.153 174.686 442.025 174.75 cv
441.897 174.878 441.706 174.942 441.45 175.134 cv
441.258 174.75 li
ef
336.008 164.008 mo
335.24 167.524 li
335.496 167.524 335.816 167.524 336.199 167.524 cv
336.839 167.524 337.286 167.46 337.606 167.333 cv
337.926 167.205 338.182 166.949 338.373 166.565 cv
338.629 166.246 338.757 165.798 338.757 165.222 cv
338.757 164.839 338.629 164.519 338.31 164.327 cv
338.054 164.135 337.67 164.008 337.095 164.008 cv
cp
337.862 160.235 mo
337.478 160.235 337.159 160.235 336.839 160.299 cv
336.135 163.432 li
337.031 163.432 li
337.478 163.432 337.862 163.432 338.182 163.368 cv
338.437 163.24 338.693 163.112 338.949 162.92 cv
339.141 162.729 339.333 162.537 339.397 162.281 cv
339.524 162.025 339.524 161.77 339.524 161.45 cv
339.524 161.258 339.524 161.13 339.461 160.938 cv
339.397 160.81 339.269 160.682 339.141 160.555 cv
339.013 160.427 338.821 160.363 338.629 160.299 cv
338.437 160.299 338.182 160.235 337.862 160.235 cv
cp
335.112 159.723 mo
338.118 159.723 li
338.757 159.723 339.269 159.787 339.588 159.915 cv
339.972 160.043 340.228 160.235 340.42 160.491 cv
340.611 160.746 340.675 161.002 340.675 161.386 cv
340.675 161.961 340.548 162.409 340.228 162.793 cv
339.844 163.24 339.397 163.496 338.757 163.752 cv
338.693 163.816 li
339.077 163.944 339.397 164.135 339.588 164.455 cv
339.78 164.711 339.908 165.031 339.908 165.414 cv
339.908 165.926 339.78 166.373 339.524 166.821 cv
339.269 167.205 338.885 167.46 338.437 167.716 cv
337.926 167.972 337.159 168.1 336.199 168.1 cv
333.45 168.1 li
333.578 167.78 li
333.706 167.78 333.833 167.716 333.897 167.652 cv
333.961 167.588 334.025 167.524 334.089 167.46 cv
334.153 167.333 334.217 167.205 334.217 167.077 cv
334.281 166.949 334.345 166.629 334.473 166.246 cv
335.496 161.514 li
335.56 161.13 335.624 160.81 335.624 160.555 cv
335.624 160.363 335.56 160.235 335.496 160.171 cv
335.368 160.043 335.24 160.043 335.048 160.043 cv
ef
343.297 162.153 mo
343.681 162.153 li
343.681 166.565 li
343.681 166.885 343.681 167.141 343.681 167.269 cv
343.745 167.397 343.809 167.524 343.873 167.588 cv
344 167.652 344.128 167.716 344.32 167.78 cv
344.32 168.1 li
341.954 168.1 li
341.954 167.78 li
342.082 167.716 342.21 167.716 342.274 167.652 cv
342.338 167.588 342.402 167.588 342.466 167.524 cv
342.466 167.46 342.53 167.333 342.53 167.205 cv
342.594 167.077 342.594 166.821 342.594 166.565 cv
342.594 163.88 li
342.594 163.624 342.594 163.432 342.594 163.24 cv
342.594 163.112 342.53 162.984 342.53 162.857 cv
342.466 162.793 342.402 162.729 342.274 162.665 cv
342.146 162.601 342.018 162.601 341.826 162.537 cv
341.826 162.217 li
cp
342.53 159.787 mo
343.681 159.787 li
343.681 161.002 li
342.53 161.002 li
cp
ef
359.667 162.601 mo
359.219 162.601 358.835 162.793 358.452 163.24 cv
358.068 163.624 357.748 164.199 357.556 164.903 cv
358.132 164.903 358.643 164.839 359.091 164.775 cv
359.475 164.647 359.794 164.519 359.986 164.263 cv
360.242 164.071 360.37 163.752 360.37 163.368 cv
360.37 163.176 360.306 162.92 360.178 162.793 cv
360.05 162.665 359.858 162.601 359.667 162.601 cv
cp
353.272 162.089 mo
353.656 162.089 353.976 162.153 354.295 162.217 cv
354.615 162.217 354.935 162.281 355.254 162.409 cv
354.935 163.688 li
354.423 163.688 li
354.423 163.368 354.295 163.048 354.104 162.857 cv
353.912 162.665 353.592 162.601 353.144 162.601 cv
352.825 162.601 352.569 162.665 352.377 162.857 cv
352.185 162.984 352.057 163.24 352.057 163.496 cv
352.057 163.624 352.121 163.752 352.185 163.88 cv
352.185 164.007 352.313 164.135 352.441 164.263 cv
352.633 164.391 352.889 164.583 353.208 164.775 cv
353.464 164.903 353.656 165.031 353.848 165.158 cv
353.976 165.286 354.104 165.414 354.167 165.542 cv
354.295 165.67 354.359 165.798 354.359 165.99 cv
354.423 166.118 354.423 166.309 354.423 166.501 cv
354.423 166.821 354.359 167.141 354.167 167.396 cv
353.976 167.652 353.72 167.844 353.336 167.972 cv
353.016 168.1 352.633 168.164 352.249 168.164 cv
351.865 168.164 351.546 168.164 351.226 168.1 cv
350.906 168.036 350.523 167.972 350.139 167.844 cv
350.395 166.501 li
350.906 166.501 li
350.906 166.885 351.034 167.205 351.226 167.396 cv
351.418 167.588 351.738 167.716 352.185 167.716 cv
352.569 167.716 352.889 167.588 353.144 167.46 cv
353.336 167.269 353.464 167.013 353.464 166.693 cv
353.464 166.501 353.4 166.373 353.336 166.246 cv
353.272 166.118 353.208 165.99 353.08 165.862 cv
352.889 165.734 352.697 165.542 352.377 165.414 cv
352.057 165.158 351.802 165.031 351.674 164.839 cv
351.482 164.711 351.354 164.519 351.226 164.327 cv
351.162 164.199 351.098 163.944 351.098 163.752 cv
351.098 163.432 351.226 163.112 351.354 162.857 cv
351.546 162.665 351.802 162.473 352.121 162.345 cv
352.441 162.217 352.825 162.089 353.272 162.089 cv
cp
359.858 162.089 mo
360.37 162.089 360.754 162.217 361.009 162.409 cv
361.265 162.601 361.329 162.92 361.329 163.368 cv
361.329 164.071 361.009 164.583 360.37 164.903 cv
359.73 165.286 358.771 165.414 357.492 165.414 cv
357.429 165.67 357.365 165.926 357.365 166.246 cv
357.365 166.693 357.492 166.949 357.62 167.141 cv
357.812 167.333 358.068 167.46 358.452 167.46 cv
358.835 167.46 359.219 167.396 359.475 167.205 cv
359.794 167.077 360.114 166.821 360.434 166.437 cv
360.818 166.885 li
360.434 167.269 360.05 167.652 359.603 167.844 cv
359.219 168.036 358.771 168.164 358.196 168.164 cv
357.62 168.164 357.173 167.972 356.853 167.652 cv
356.533 167.269 356.341 166.757 356.341 166.118 cv
356.341 165.67 356.405 165.222 356.597 164.711 cv
356.725 164.199 356.981 163.752 357.301 163.368 cv
357.62 162.984 358.004 162.665 358.452 162.473 cv
358.899 162.217 359.347 162.089 359.858 162.089 cv
cp
364.398 160.682 mo
365.23 160.682 li
364.91 162.217 li
366.764 162.217 li
366.636 162.857 li
364.782 162.857 li
364.207 165.222 li
364.143 165.67 364.015 165.99 364.015 166.182 cv
364.015 166.437 363.951 166.565 363.951 166.693 cv
363.951 167.205 364.207 167.46 364.59 167.46 cv
364.782 167.46 364.974 167.396 365.166 167.269 cv
365.357 167.141 365.613 166.885 365.933 166.565 cv
366.253 166.949 li
365.933 167.333 365.549 167.652 365.23 167.844 cv
364.91 168.1 364.526 168.164 364.207 168.164 cv
363.311 168.164 362.928 167.716 362.928 166.885 cv
362.928 166.629 362.928 166.309 362.992 165.99 cv
363.759 162.857 li
362.736 162.857 li
362.8 162.409 li
363.056 162.409 363.247 162.409 363.375 162.345 cv
363.503 162.345 363.567 162.281 363.695 162.217 cv
363.759 162.153 363.823 162.089 363.887 161.961 cv
363.951 161.897 364.015 161.769 364.079 161.578 cv
364.143 161.386 364.27 161.13 364.398 160.682 cv
cp
347.326 160.682 mo
348.157 160.682 li
347.837 162.217 li
349.691 162.217 li
349.564 162.857 li
347.645 162.857 li
347.134 165.222 li
347.006 165.67 346.942 165.99 346.942 166.182 cv
346.878 166.437 346.878 166.565 346.878 166.693 cv
346.878 167.205 347.07 167.46 347.517 167.46 cv
347.709 167.46 347.901 167.396 348.093 167.269 cv
348.285 167.141 348.54 166.885 348.796 166.565 cv
349.18 166.949 li
348.796 167.333 348.477 167.652 348.157 167.844 cv
347.773 168.1 347.453 168.164 347.07 168.164 cv
346.238 168.164 345.791 167.716 345.791 166.885 cv
345.791 166.629 345.855 166.309 345.919 165.99 cv
346.622 162.857 li
345.599 162.857 li
345.727 162.409 li
345.919 162.409 346.111 162.409 346.238 162.345 cv
346.366 162.345 346.494 162.281 346.558 162.217 cv
346.622 162.153 346.75 162.089 346.814 161.961 cv
346.878 161.897 346.942 161.769 347.006 161.578 cv
347.07 161.386 347.134 161.13 347.326 160.682 cv
ef
370.345 157.677 mo
370.601 157.677 li
370.601 157.869 370.601 157.997 370.601 158.125 cv
370.601 158.253 370.601 158.38 370.601 158.508 cv
370.601 158.636 370.601 158.764 370.601 158.892 cv
370.601 162.281 li
370.601 162.345 370.601 162.409 370.601 162.473 cv
370.601 162.537 370.601 162.601 370.665 162.665 cv
370.665 162.729 370.665 162.729 370.665 162.793 cv
370.729 162.793 370.729 162.857 370.793 162.857 cv
370.793 162.92 370.857 162.92 370.921 162.984 cv
370.984 162.984 371.048 162.984 371.112 162.984 cv
371.24 163.048 371.368 163.048 371.496 163.048 cv
371.624 163.048 371.752 163.048 371.944 163.048 cv
371.944 163.432 li
368.363 163.432 li
368.363 163.048 li
368.555 163.048 368.746 163.048 368.81 163.048 cv
368.938 163.048 369.066 162.984 369.13 162.984 cv
369.258 162.984 369.322 162.984 369.386 162.984 cv
369.386 162.92 369.45 162.92 369.514 162.92 cv
369.514 162.857 369.578 162.857 369.578 162.793 cv
369.642 162.793 369.642 162.729 369.642 162.665 cv
369.706 162.665 369.706 162.601 369.706 162.537 cv
369.706 162.473 369.706 162.345 369.706 162.281 cv
369.706 159.084 li
369.706 158.956 369.706 158.892 369.642 158.828 cv
369.642 158.764 369.578 158.764 369.45 158.764 cv
369.386 158.764 369.258 158.764 369.066 158.892 cv
368.874 158.956 368.619 159.148 368.363 159.34 cv
368.299 159.212 368.299 159.148 368.235 159.084 cv
368.235 159.02 368.171 158.956 368.171 158.892 cv
368.491 158.7 368.874 158.508 369.258 158.317 cv
369.578 158.061 369.961 157.869 370.345 157.677 cv
ef
312.157 149.045 mo
311.389 152.754 li
311.645 152.754 311.965 152.754 312.285 152.754 cv
312.924 152.754 313.436 152.69 313.755 152.562 cv
314.075 152.434 314.331 152.114 314.587 151.794 cv
314.842 151.411 314.906 150.899 314.906 150.388 cv
314.906 149.94 314.778 149.62 314.523 149.365 cv
314.203 149.173 313.819 149.045 313.244 149.045 cv
cp
314.011 145.08 mo
313.628 145.08 313.308 145.08 312.988 145.08 cv
312.285 148.469 li
313.18 148.469 li
313.691 148.469 314.075 148.405 314.331 148.341 cv
314.651 148.277 314.906 148.15 315.098 147.894 cv
315.354 147.702 315.546 147.446 315.61 147.19 cv
315.738 146.935 315.738 146.679 315.738 146.359 cv
315.738 146.167 315.738 145.976 315.674 145.848 cv
315.61 145.656 315.482 145.528 315.354 145.4 cv
315.162 145.272 315.034 145.208 314.842 145.144 cv
314.587 145.08 314.331 145.08 314.011 145.08 cv
cp
311.198 144.505 mo
314.331 144.505 li
314.97 144.505 315.418 144.569 315.802 144.697 cv
316.185 144.825 316.505 145.08 316.697 145.336 cv
316.825 145.592 316.953 145.912 316.953 146.295 cv
316.953 146.871 316.761 147.382 316.441 147.766 cv
316.121 148.214 315.61 148.533 314.906 148.725 cv
314.906 148.853 li
315.29 148.981 315.61 149.237 315.802 149.492 cv
316.057 149.812 316.121 150.132 316.121 150.516 cv
316.121 151.091 315.993 151.603 315.738 151.986 cv
315.482 152.37 315.098 152.754 314.587 152.945 cv
314.075 153.201 313.308 153.329 312.349 153.329 cv
309.535 153.329 li
309.599 153.009 li
309.727 153.009 309.855 152.945 309.983 152.881 cv
310.047 152.881 310.111 152.754 310.175 152.69 cv
310.238 152.562 310.238 152.434 310.302 152.306 cv
310.366 152.114 310.43 151.858 310.494 151.411 cv
311.581 146.423 li
311.709 145.976 311.709 145.656 311.709 145.4 cv
311.709 145.208 311.709 145.08 311.581 144.952 cv
311.517 144.888 311.326 144.825 311.134 144.825 cv
ef
319.574 147.126 mo
319.958 147.126 li
319.958 151.73 li
319.958 152.114 320.022 152.37 320.022 152.498 cv
320.086 152.626 320.15 152.754 320.214 152.817 cv
320.341 152.881 320.469 153.009 320.661 153.009 cv
320.661 153.329 li
318.231 153.329 li
318.231 153.009 li
318.359 153.009 318.487 152.945 318.551 152.881 cv
318.615 152.881 318.679 152.817 318.743 152.754 cv
318.807 152.69 318.807 152.562 318.871 152.434 cv
318.871 152.306 318.871 152.05 318.871 151.73 cv
318.871 148.917 li
318.871 148.661 318.871 148.405 318.871 148.277 cv
318.871 148.086 318.871 147.958 318.807 147.83 cv
318.743 147.766 318.679 147.702 318.551 147.638 cv
318.487 147.574 318.295 147.51 318.103 147.51 cv
318.103 147.19 li
cp
318.871 144.633 mo
320.022 144.633 li
320.022 145.912 li
318.871 145.912 li
cp
ef
336.455 147.574 mo
336.008 147.574 335.624 147.766 335.176 148.214 cv
334.793 148.661 334.537 149.237 334.281 150.004 cv
334.921 150.004 335.432 149.94 335.816 149.876 cv
336.263 149.748 336.583 149.556 336.775 149.365 cv
337.031 149.109 337.159 148.789 337.159 148.405 cv
337.159 148.15 337.095 147.958 336.967 147.766 cv
336.839 147.638 336.647 147.574 336.455 147.574 cv
cp
329.869 147.063 mo
330.253 147.063 330.572 147.063 330.892 147.127 cv
331.212 147.19 331.532 147.254 331.851 147.382 cv
331.596 148.725 li
331.084 148.725 li
331.02 148.341 330.892 148.086 330.7 147.83 cv
330.508 147.638 330.189 147.574 329.741 147.574 cv
329.421 147.574 329.166 147.638 328.974 147.83 cv
328.782 148.022 328.654 148.214 328.654 148.533 cv
328.654 148.661 328.654 148.789 328.718 148.917 cv
328.782 149.045 328.91 149.173 329.038 149.301 cv
329.23 149.492 329.485 149.62 329.805 149.812 cv
330.061 150.004 330.253 150.132 330.445 150.324 cv
330.572 150.452 330.7 150.579 330.828 150.707 cv
330.892 150.835 330.956 150.963 331.02 151.091 cv
331.084 151.283 331.084 151.475 331.084 151.667 cv
331.084 152.05 330.956 152.37 330.764 152.626 cv
330.572 152.945 330.317 153.137 329.933 153.265 cv
329.613 153.393 329.23 153.457 328.782 153.457 cv
328.462 153.457 328.079 153.457 327.759 153.393 cv
327.439 153.329 327.056 153.265 326.608 153.137 cv
326.928 151.667 li
327.439 151.667 li
327.439 152.114 327.567 152.434 327.759 152.626 cv
328.015 152.817 328.334 152.945 328.782 152.945 cv
329.166 152.945 329.485 152.881 329.741 152.69 cv
329.933 152.498 330.061 152.242 330.061 151.922 cv
330.061 151.73 329.997 151.539 329.933 151.411 cv
329.869 151.283 329.805 151.091 329.677 150.963 cv
329.485 150.835 329.294 150.707 328.974 150.516 cv
328.654 150.324 328.398 150.132 328.207 149.94 cv
328.015 149.812 327.887 149.62 327.759 149.428 cv
327.695 149.237 327.631 148.981 327.631 148.725 cv
327.631 148.405 327.759 148.086 327.887 147.83 cv
328.079 147.574 328.334 147.382 328.654 147.254 cv
329.038 147.127 329.421 147.063 329.869 147.063 cv
cp
336.647 147.063 mo
337.159 147.063 337.542 147.127 337.798 147.382 cv
338.054 147.574 338.182 147.894 338.182 148.341 cv
338.182 149.109 337.862 149.62 337.159 150.004 cv
336.519 150.388 335.496 150.579 334.217 150.579 cv
334.153 150.835 334.089 151.091 334.089 151.411 cv
334.089 151.858 334.217 152.178 334.345 152.37 cv
334.537 152.626 334.857 152.69 335.24 152.69 cv
335.624 152.69 335.944 152.626 336.263 152.434 cv
336.583 152.242 336.903 151.986 337.286 151.667 cv
337.67 152.05 li
337.222 152.498 336.839 152.881 336.391 153.137 cv
336.008 153.329 335.496 153.457 334.984 153.457 cv
334.345 153.457 333.897 153.265 333.514 152.881 cv
333.194 152.498 333.002 151.986 333.002 151.283 cv
333.002 150.835 333.13 150.324 333.258 149.812 cv
333.45 149.301 333.706 148.789 334.025 148.405 cv
334.345 147.958 334.729 147.638 335.176 147.382 cv
335.624 147.19 336.135 147.063 336.647 147.063 cv
cp
341.315 145.592 mo
342.21 145.592 li
341.826 147.19 li
343.745 147.19 li
343.617 147.83 li
341.699 147.83 li
341.123 150.324 li
340.995 150.835 340.931 151.155 340.931 151.411 cv
340.867 151.603 340.867 151.794 340.867 151.922 cv
340.867 152.434 341.123 152.69 341.507 152.69 cv
341.699 152.69 341.89 152.626 342.146 152.498 cv
342.338 152.306 342.594 152.114 342.849 151.73 cv
343.233 152.114 li
342.849 152.562 342.53 152.945 342.146 153.137 cv
341.826 153.329 341.507 153.457 341.123 153.457 cv
340.228 153.457 339.78 153.009 339.78 152.114 cv
339.78 151.794 339.844 151.475 339.908 151.155 cv
340.612 147.83 li
339.588 147.83 li
339.652 147.382 li
339.908 147.382 340.1 147.318 340.228 147.318 cv
340.356 147.254 340.484 147.254 340.548 147.19 cv
340.675 147.127 340.739 146.999 340.803 146.935 cv
340.867 146.807 340.931 146.679 340.995 146.487 cv
341.059 146.295 341.187 145.976 341.315 145.592 cv
cp
323.73 145.592 mo
324.626 145.592 li
324.242 147.19 li
326.16 147.19 li
326.032 147.83 li
324.114 147.83 li
323.539 150.324 li
323.475 150.835 323.347 151.155 323.347 151.411 cv
323.283 151.603 323.283 151.794 323.283 151.922 cv
323.283 152.434 323.539 152.69 323.922 152.69 cv
324.114 152.69 324.306 152.626 324.562 152.498 cv
324.754 152.306 325.009 152.114 325.265 151.73 cv
325.649 152.114 li
325.265 152.562 324.945 152.945 324.562 153.137 cv
324.242 153.329 323.922 153.457 323.539 153.457 cv
322.643 153.457 322.196 153.009 322.196 152.114 cv
322.196 151.794 322.26 151.475 322.324 151.155 cv
323.091 147.83 li
322.004 147.83 li
322.068 147.382 li
322.324 147.382 322.516 147.318 322.643 147.318 cv
322.771 147.254 322.899 147.254 322.963 147.19 cv
323.091 147.127 323.155 146.999 323.219 146.935 cv
323.283 146.807 323.347 146.679 323.411 146.487 cv
323.475 146.295 323.603 145.976 323.73 145.592 cv
ef
347.326 142.778 mo
347.134 142.778 346.942 142.842 346.814 142.97 cv
346.622 143.098 346.558 143.226 346.43 143.482 cv
346.366 143.674 346.302 143.993 346.302 144.313 cv
346.238 144.633 346.238 144.952 346.238 145.4 cv
346.238 145.848 346.238 146.231 346.302 146.615 cv
346.302 146.935 346.43 147.19 346.494 147.446 cv
346.558 147.638 346.686 147.83 346.814 147.894 cv
347.006 148.022 347.134 148.086 347.326 148.086 cv
347.517 148.086 347.709 148.022 347.837 147.958 cv
347.965 147.83 348.093 147.702 348.157 147.446 cv
348.285 147.254 348.349 146.999 348.413 146.679 cv
348.413 146.359 348.477 145.976 348.477 145.592 cv
348.477 145.08 348.413 144.697 348.349 144.313 cv
348.349 143.993 348.285 143.674 348.157 143.482 cv
348.093 143.226 347.965 143.098 347.837 142.97 cv
347.645 142.842 347.517 142.778 347.326 142.778 cv
cp
347.326 142.331 mo
347.709 142.331 348.029 142.395 348.285 142.587 cv
348.54 142.714 348.732 142.906 348.924 143.162 cv
349.116 143.418 349.18 143.738 349.308 144.121 cv
349.372 144.505 349.372 144.889 349.372 145.4 cv
349.372 146.423 349.244 147.19 348.86 147.766 cv
348.477 148.277 347.965 148.533 347.262 148.533 cv
346.622 148.533 346.111 148.277 345.791 147.766 cv
345.407 147.254 345.279 146.487 345.279 145.464 cv
345.279 144.952 345.343 144.505 345.407 144.121 cv
345.535 143.674 345.663 143.354 345.855 143.098 cv
346.047 142.842 346.238 142.65 346.494 142.523 cv
346.75 142.395 347.07 142.331 347.326 142.331 cv
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/HFDYNO+SimSun-GBK-EUC-V-Identity-V uf
/HFDYNO+SimSun-GBK-EUC-V /CIDFont ur
/HFDYNL+SimSun-GBK-EUC-H-Identity-H uf
/HFDYNL+SimSun-GBK-EUC-H /CIDFont ur
/HFDYNM+Calibri*1 uf
/HFDYNM+Calibri uf
/BGAAAA+Calibri uf
/HFDYNN+Calibri-Identity-H uf
/HFDYNN+Calibri /CIDFont ur
/HFDYNK+DengXian-GBK-EUC-H-Identity-H uf
/HFDYNK+DengXian-GBK-EUC-H /CIDFont ur
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
